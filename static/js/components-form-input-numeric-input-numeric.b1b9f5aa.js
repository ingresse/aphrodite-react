(window.webpackJsonp=window.webpackJsonp||[]).push([[24],{"./src/components/Form/InputNumeric/InputNumeric.mdx":function(e,n,t){"use strict";t.r(n),t.d(n,"default",(function(){return c}));var a=t("./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js"),o=t("./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js"),u=t("./node_modules/react/index.js"),r=t("./node_modules/@mdx-js/react/dist/esm.js"),i=t("./node_modules/docz/dist/index.esm.js"),s=t("./src/components/index.js");const p={};function c(e){let n=e.components,t=Object(o.a)(e,["components"]);return Object(r.b)("wrapper",Object.assign({},p,t,{components:n,mdxType:"MDXLayout"}),Object(r.b)("h1",{id:"input-numeric"},"Input Numeric"),Object(r.b)("h3",{id:"alternative-to-inputnumber-with-basic-behavior-validations"},"Alternative to InputNumber, with basic behavior validations"),Object(r.b)("h2",{id:"example"},"Example"),Object(r.b)(i.c,{__position:0,__code:'() => {\n  const [value, setValue] = useState(\'\')\n  function handleChange({ target }) {\n    console.log(\'InputNumeric new value\', target.value)\n    setValue(target.value)\n  }\n\n  return (\n    <Container xs>\n      <Segment padding="10px 0">\n        <InputNumeric\n          id="ExampleInputNumeric"\n          label="Any Number"\n          onChange={handleChange}\n          value={value}\n        />\n      </Segment>\n    </Container>\n  )\n}',__scope:{props:this?this.props:t,useState:u.useState,Playground:i.c,Props:i.d,InputNumeric:s.E,Container:s.l,Segment:s.U},mdxType:"Playground"},()=>{const e=Object(u.useState)(""),n=Object(a.a)(e,2),t=n[0],o=n[1];return Object(r.b)(s.l,{xs:!0,mdxType:"Container"},Object(r.b)(s.U,{padding:"10px 0",mdxType:"Segment"},Object(r.b)(s.E,{id:"ExampleInputNumeric",label:"Any Number",onChange:function({target:e}){console.log("InputNumeric new value",e.value),o(e.value)},value:t,mdxType:"InputNumeric"})))}),Object(r.b)("h2",{id:"custom-example"},"Custom Example"),Object(r.b)(i.c,{__position:1,__code:'() => {\n  const [value, setValue] = useState(\'\')\n  function handleChange({ target }) {\n    console.log(\'InputNumeric new value\', target.value)\n    setValue(target.value)\n  }\n\n  return (\n    <Container xs>\n      <Segment padding="10px 0">\n        <InputNumeric\n          id="ExampleInputNumericCustom"\n          label="Donation amount"\n          onChange={handleChange}\n          value={value}\n          min={5}\n          max={10000}\n          step={0.5}\n          before="R$"\n          placeholder="Ex: R$ 20.20"\n        />\n      </Segment>\n    </Container>\n  )\n}',__scope:{props:this?this.props:t,useState:u.useState,Playground:i.c,Props:i.d,InputNumeric:s.E,Container:s.l,Segment:s.U},mdxType:"Playground"},()=>{const e=Object(u.useState)(""),n=Object(a.a)(e,2),t=n[0],o=n[1];return Object(r.b)(s.l,{xs:!0,mdxType:"Container"},Object(r.b)(s.U,{padding:"10px 0",mdxType:"Segment"},Object(r.b)(s.E,{id:"ExampleInputNumericCustom",label:"Donation amount",onChange:function({target:e}){console.log("InputNumeric new value",e.value),o(e.value)},value:t,min:5,max:1e4,step:.5,before:"R$",placeholder:"Ex: R$ 20.20",mdxType:"InputNumeric"})))}),Object(r.b)("h2",{id:"properties"},"Properties"),Object(r.b)(i.d,{of:s.E,mdxType:"Props"}))}c&&c===Object(c)&&Object.isExtensible(c)&&Object.defineProperty(c,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"MDXContent",filename:"src/components/Form/InputNumeric/InputNumeric.mdx"}}),c.isMDXComponent=!0}}]);
//# sourceMappingURL=components-form-input-numeric-input-numeric.5bd6f5a8a018f259b9e8.js.map