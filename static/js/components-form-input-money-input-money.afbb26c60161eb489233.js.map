{"version":3,"sources":["/home/udi/front/@aphrodite/src/components/Form/InputMoney/InputMoney.mdx"],"names":["layoutProps","MDXContent","components","props","mdxType","__position","__code","__scope","this","useState","Playground","Props","formatCurrency","InputMoney","Input","Select","Container","Segment","Row","Col","price","setPrice","localeCurrency","setLocaleCurrency","splitted","split","locale","currency","pricePlaceholder","Date","getFullYear","console","log","sm","horizontal","vertical","xs","padding","id","label","onChange","target","value","e","newValue","placeholder","of","isMDXComponent"],"mappings":"ilBAkBA,MAKMA,EAAc,GAIL,SAASC,EAAT,GAGX,IAFFC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,YALS,UAKT,iBAAeH,EAAiBG,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAE5E,iBAAQ,CACN,GAAM,eADR,eAGA,iBAAQ,CACN,GAAM,gDADR,iDAGA,iBAAQ,CACN,GAAM,WADR,WAGA,YAAC,IAAD,CAAYC,WAAY,EAAGC,OAAQ,yhDAAgjDC,QAAS,CAC1lDJ,MAAOK,KAAOA,KAAKL,MAAQA,EAC3BM,oBACAC,eACAC,UACAC,mBACAC,eACAC,UACAC,WACAC,cACAC,YACAC,QACAC,SACCf,QAAQ,cACV,KAAO,MAAD,EACuBK,mBAAS,GADhC,mBACIW,EADJ,KACWC,EADX,OAE+BZ,mBAAS,UAFxC,gCAGyCA,mBAAS,gBAHlD,mBAGIa,EAHJ,KAGoBC,EAHpB,KAIGC,EAAWF,EAAeG,MAAM,OAChCC,EAASF,EAAS,GAClBG,EAAWH,EAAS,GACpBI,EAAmBhB,aAAe,IAAIiB,MAAOC,cAAeJ,EAAQC,GAE1E,OADAI,QAAQC,IAAI,QAASZ,GACd,YAAC,IAAD,CAAWa,IAAE,EAAC7B,QAAQ,aACzB,YAAC,IAAD,CAAK8B,WAAW,SAASC,SAAS,SAAS/B,QAAQ,OAC/C,YAAC,IAAD,CAAKgC,GAAI,GAAIH,GAAI,EAAG7B,QAAQ,OACxB,YAAC,IAAD,CAASiC,QAAQ,SAASjC,QAAQ,WAC9B,YAAC,IAAD,CAAQkC,GAAG,kCAAkCC,MAAM,oBAAoBC,SAAU,EACvFC,YACIlB,EAAkBkB,EAAOC,OAAQA,MAAOpB,EAAgBlB,QAAQ,UAC1D,sBAAQsC,MAAM,eAAd,eACA,sBAAQA,MAAM,eAAd,eACA,sBAAQA,MAAM,eAAd,kBAIZ,YAAC,IAAD,CAAKN,GAAI,GAAIH,GAAI,EAAG7B,QAAQ,OACxB,YAAC,IAAD,CAASiC,QAAQ,SAASjC,QAAQ,WAC9B,YAAC,IAAD,CAAYkC,GAAG,oBAAoBC,MAAM,aAAaC,SAAU,CAACG,EAAGC,IAAavB,EAASuB,GAAWF,MAAOtB,GAAS,GAAIM,OAAQA,EAAQC,SAAUA,EAAUkB,YAAW,cAASjB,GAAoBxB,QAAQ,qBAOjO,iBAAQ,CACN,GAAM,cADR,cAGA,YAAC,IAAD,CAAO0C,GAAIjC,IAAYT,QAAQ,W,mMAKnCH,EAAW8C,gBAAiB","file":"static/js/components-form-input-money-input-money.9b717959.js","sourcesContent":["\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsx mdx */\nimport { useState } from 'react';\nimport { Playground, Props } from 'docz';\nimport { formatCurrency } from '../../../utils';\nimport {\n    InputMoney,\n    Input,\n    Select,\n    Container,\n    Segment,\n    Row,\n    Col,\n} from '../../';\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component '\" + name + \"' was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"input-money\"\n    }}>{`Input Money`}</h1>\n    <h3 {...{\n      \"id\": \"inputdiscount-simplified-to-be-a-money-input\"\n    }}>{`InputDiscount simplified to be a money input.`}</h3>\n    <h2 {...{\n      \"id\": \"example\"\n    }}>{`Example`}</h2>\n    <Playground __position={0} __code={'() => {\\n  const [price, setPrice] = useState(0)\\n  const [priceType, setPriceType] = useState(\\'choose\\')\\n  const [localeCurrency, setLocaleCurrency] = useState(\\'pt-BR | BRL\\')\\n  const splitted = localeCurrency.split(\\' | \\')\\n  const locale = splitted[0]\\n  const currency = splitted[1]\\n  const pricePlaceholder = formatCurrency(\\n    new Date().getFullYear(),\\n    locale,\\n    currency,\\n  )\\n  console.log(\\'price\\', price)\\n\\n  return (\\n    <Container sm>\\n      <Row horizontal=\\\"center\\\" vertical=\\\"center\\\">\\n        <Col xs={12} sm={6}>\\n          <Segment padding=\\\"10px 0\\\">\\n            <Select\\n              id=\\\"ExampleInputMoneyCurrencyLocale\\\"\\n              label=\\\"Locale & Currency\\\"\\n              onChange={({ target }) => setLocaleCurrency(target.value)}\\n              value={localeCurrency}\\n            >\\n              <option value=\\\"pt-BR | BRL\\\">pt-BR | BRL</option>\\n              <option value=\\\"en-US | USD\\\">en-US | USD</option>\\n              <option value=\\\"en-EU | EUR\\\">en-EU | EUR</option>\\n            </Select>\\n          </Segment>\\n        </Col>\\n        <Col xs={12} sm={6}>\\n          <Segment padding=\\\"10px 0\\\">\\n            <InputMoney\\n              id=\\\"ExampleInputMoney\\\"\\n              label=\\\"Unit Price\\\"\\n              onChange={(e, newValue) => setPrice(newValue)}\\n              value={price || \\'\\'}\\n              locale={locale}\\n              currency={currency}\\n              placeholder={`Ex: ${pricePlaceholder}`}\\n            />\\n          </Segment>\\n        </Col>\\n      </Row>\\n    </Container>\\n  )\\n}'} __scope={{\n      props: this ? this.props : props,\n      useState,\n      Playground,\n      Props,\n      formatCurrency,\n      InputMoney,\n      Input,\n      Select,\n      Container,\n      Segment,\n      Row,\n      Col\n    }} mdxType=\"Playground\">\n    {() => {\n        const [price, setPrice] = useState(0);\n        const [priceType, setPriceType] = useState('choose');\n        const [localeCurrency, setLocaleCurrency] = useState('pt-BR | BRL');\n        const splitted = localeCurrency.split(' | ');\n        const locale = splitted[0];\n        const currency = splitted[1];\n        const pricePlaceholder = formatCurrency(new Date().getFullYear(), locale, currency);\n        console.log('price', price);\n        return <Container sm mdxType=\"Container\">\n            <Row horizontal=\"center\" vertical=\"center\" mdxType=\"Row\">\n                <Col xs={12} sm={6} mdxType=\"Col\">\n                    <Segment padding=\"10px 0\" mdxType=\"Segment\">\n                        <Select id=\"ExampleInputMoneyCurrencyLocale\" label=\"Locale & Currency\" onChange={({\n                  target\n                }) => setLocaleCurrency(target.value)} value={localeCurrency} mdxType=\"Select\">\n                            <option value=\"pt-BR | BRL\">pt-BR | BRL</option>\n                            <option value=\"en-US | USD\">en-US | USD</option>\n                            <option value=\"en-EU | EUR\">en-EU | EUR</option>\n                        </Select>\n                    </Segment>\n                </Col>\n                <Col xs={12} sm={6} mdxType=\"Col\">\n                    <Segment padding=\"10px 0\" mdxType=\"Segment\">\n                        <InputMoney id=\"ExampleInputMoney\" label=\"Unit Price\" onChange={(e, newValue) => setPrice(newValue)} value={price || ''} locale={locale} currency={currency} placeholder={`Ex: ${pricePlaceholder}`} mdxType=\"InputMoney\" />\n                    </Segment>\n                </Col>\n            </Row>\n        </Container>;\n      }}\n    </Playground>\n    <h2 {...{\n      \"id\": \"properties\"\n    }}>{`Properties`}</h2>\n    <Props of={InputMoney} mdxType=\"Props\" />\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"],"sourceRoot":""}