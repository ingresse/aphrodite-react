(window.webpackJsonp=window.webpackJsonp||[]).push([[48],{"./src/components/Toast/Toast.mdx":function(n,e,t){"use strict";t.r(e),t.d(e,"default",(function(){return l}));var o=t("./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js"),s=(t("./node_modules/react/index.js"),t("./node_modules/@mdx-js/react/dist/esm.js")),c=t("./node_modules/docz/dist/index.esm.js"),a=t("./src/components/index.js"),r=t("./src/constants/index.js"),i={};function l(n){var e=n.components,t=Object(o.a)(n,["components"]);return Object(s.b)("wrapper",Object.assign({},i,t,{components:e,mdxType:"MDXLayout"}),Object(s.b)("h1",{id:"toasts"},"Toasts"),Object(s.b)("h3",{id:"just-an-implementation-of-awesome-library-react-toastify-with-aphrodites-definitions"},"Just an implementation of awesome library ",Object(s.b)("a",{parentName:"h3",href:"https://github.com/fkhadra/react-toastify"},Object(s.b)("strong",{parentName:"a"},"React Toastify")),", with Aphrodite's definitions."),Object(s.b)("h3",{id:"consult-the-documentation-for-more-options"},"Consult the ",Object(s.b)("a",{parentName:"h3",href:"https://github.com/fkhadra/react-toastify"},"documentation")," for more options."),Object(s.b)("h2",{id:"example"},"Example"),Object(s.b)(c.c,{__position:0,__code:'() => {\n  function toastDefault() {\n    toast(\'Hello from Aphrodite React\')\n  }\n  function toastInverse() {\n    toast.inverse(\'Hello from Aphrodite React\')\n  }\n\n  function toastSuccess() {\n    toast.success(\n      \'We are using React Toastify, an awesome library, customized with our styles definitions\',\n    )\n  }\n\n  function toastInfo() {\n    toast.info(\'You can use React Toastify directly, if you want\')\n  }\n\n  function toastWarning() {\n    toast.warning("But, isn\'t have our style, if you use directly")\n  }\n\n  function toastError() {\n    toast.error(\n      "And maybe doesn\'t make sense use our library, if you want to use React Toastify directly - haha",\n    )\n  }\n\n  return (\n    <Container>\n      <ToastsContainer\n        hideProgressBar={true}\n        autoClose={false}\n        styles={{\n          top: \'45px\',\n          right: \'45px\',\n        }}\n      />\n      <Row vertical="center" horizontal="center">\n        <Col xs={6} sm={3}>\n          <Segment padding="10px 0">\n            <Button block color="grey" onClick={toastDefault}>\n              Default\n            </Button>\n          </Segment>\n        </Col>\n        <Col xs={6} sm={3}>\n          <Segment padding="10px 0">\n            <Button block color="black" onClick={toastInverse}>\n              Inverse\n            </Button>\n          </Segment>\n        </Col>\n      </Row>\n\n      <Row vertical="center" horizontal="center">\n        <Col xs={6} sm={3}>\n          <Segment padding="10px 0">\n            <Button block color="success" onClick={toastSuccess}>\n              Success\n            </Button>\n          </Segment>\n        </Col>\n        <Col xs={6} sm={3}>\n          <Segment padding="10px 0">\n            <Button block color="secondary" onClick={toastInfo}>\n              Info\n            </Button>\n          </Segment>\n        </Col>\n        <Col xs={6} sm={3}>\n          <Segment padding="10px 0">\n            <Button block color="warning" onClick={toastWarning}>\n              Warning\n            </Button>\n          </Segment>\n        </Col>\n        <Col xs={6} sm={3}>\n          <Segment padding="10px 0">\n            <Button block color="error" onClick={toastError}>\n              Error\n            </Button>\n          </Segment>\n        </Col>\n      </Row>\n    </Container>\n  )\n}',__scope:{props:this?this.props:t,Playground:c.c,Props:c.d,Container:a.m,Row:a.Z,Col:a.k,Segment:a.cb,Button:a.g,ToastsContainer:a.ib,toast:a.jb,SCREEN_SIZES:r.f},mdxType:"Playground"},(function(){return Object(s.b)(a.m,{mdxType:"Container"},Object(s.b)(a.ib,{hideProgressBar:!0,autoClose:!1,styles:{top:"45px",right:"45px"},mdxType:"ToastsContainer"}),Object(s.b)(a.Z,{vertical:"center",horizontal:"center",mdxType:"Row"},Object(s.b)(a.k,{xs:6,sm:3,mdxType:"Col"},Object(s.b)(a.cb,{padding:"10px 0",mdxType:"Segment"},Object(s.b)(a.g,{block:!0,color:"grey",onClick:function(){Object(a.jb)("Hello from Aphrodite React")},mdxType:"Button"},"Default"))),Object(s.b)(a.k,{xs:6,sm:3,mdxType:"Col"},Object(s.b)(a.cb,{padding:"10px 0",mdxType:"Segment"},Object(s.b)(a.g,{block:!0,color:"black",onClick:function(){a.jb.inverse("Hello from Aphrodite React")},mdxType:"Button"},"Inverse")))),Object(s.b)(a.Z,{vertical:"center",horizontal:"center",mdxType:"Row"},Object(s.b)(a.k,{xs:6,sm:3,mdxType:"Col"},Object(s.b)(a.cb,{padding:"10px 0",mdxType:"Segment"},Object(s.b)(a.g,{block:!0,color:"success",onClick:function(){a.jb.success("We are using React Toastify, an awesome library, customized with our styles definitions")},mdxType:"Button"},"Success"))),Object(s.b)(a.k,{xs:6,sm:3,mdxType:"Col"},Object(s.b)(a.cb,{padding:"10px 0",mdxType:"Segment"},Object(s.b)(a.g,{block:!0,color:"secondary",onClick:function(){a.jb.info("You can use React Toastify directly, if you want")},mdxType:"Button"},"Info"))),Object(s.b)(a.k,{xs:6,sm:3,mdxType:"Col"},Object(s.b)(a.cb,{padding:"10px 0",mdxType:"Segment"},Object(s.b)(a.g,{block:!0,color:"warning",onClick:function(){a.jb.warning("But, isn't have our style, if you use directly")},mdxType:"Button"},"Warning"))),Object(s.b)(a.k,{xs:6,sm:3,mdxType:"Col"},Object(s.b)(a.cb,{padding:"10px 0",mdxType:"Segment"},Object(s.b)(a.g,{block:!0,color:"error",onClick:function(){a.jb.error("And maybe doesn't make sense use our library, if you want to use React Toastify directly - haha")},mdxType:"Button"},"Error")))))})))}l&&l===Object(l)&&Object.isExtensible(l)&&Object.defineProperty(l,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"MDXContent",filename:"src/components/Toast/Toast.mdx"}}),l.isMDXComponent=!0}}]);
//# sourceMappingURL=components-toast-toast.911fe5238686a17028c0.js.map