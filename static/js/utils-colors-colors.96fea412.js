(window.webpackJsonp=window.webpackJsonp||[]).push([[53],{"./src/utils/colors/colors.mdx":function(e,o,t){"use strict";t.r(o),t.d(o,"default",(function(){return d}));var n=t("./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js"),l=t("./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js"),r=(t("./node_modules/react/index.js"),t("./node_modules/@mdx-js/react/dist/esm.js")),s=t("./node_modules/docz/dist/index.esm.js"),c=t("./src/components/index.js"),a=t("./src/utils/index.js"),i={};function d(e){var o=e.components,t=Object(l.a)(e,["components"]);return Object(r.b)("wrapper",Object.assign({},i,t,{components:o,mdxType:"MDXLayout"}),Object(r.b)("h1",{id:"utilities--colors"},"Utilities | Colors"),Object(r.b)("h3",{id:"tools-to-made-easy-the-development-with-our-colors-presets"},"Tools to made easy the development with our colors presets."),Object(r.b)("h2",{id:"usage"},"Usage"),Object(r.b)("h4",{id:"the-method-colorsget-will-help-you-to-get-the-desired-color-from-aphrodite-reacts-colors-palette"},"The method ",Object(r.b)("inlineCode",{parentName:"h4"},"colors.get")," will help you to get the desired color from Aphrodite React's Colors Palette."),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre"},"import { colors } from '@ingresse/aphrodite';\n\ncolors.get('primary', 'dark', 0.1);\n")),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"})),Object(r.b)("h2",{id:"palette-shades"},"Palette Shades"),Object(r.b)("h4",{id:"youll-see-the-same-color-multiple-times-with-different-names"},"You'll see the same color multiple times with different names."),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"})),Object(r.b)(s.c,{__position:0,__code:"() => {\n  const previewSize = 32\n  const previewColWidth = previewSize + 20\n  const colorItemStyles = {\n    padding: '10px',\n    margin: '0',\n    '.aph-color': {\n      '&__value': {\n        color: colors.get('oil', 'crystal'),\n        fontSize: '12px',\n      },\n    },\n  }\n  const colorBoxColStyles = {\n    minWidth: `${previewColWidth}px`,\n    maxWidth: `${previewColWidth}px`,\n  }\n  const colorTextColStyles = {\n    minWidth: `calc(100% - ${previewColWidth}px)`,\n    maxWidth: `calc(100% - ${previewColWidth}px)`,\n\n    fontSize: '14px',\n    lineHeight: '20px',\n    paddingLeft: 0,\n\n    color: colors.get('oil', 'dark'),\n  }\n  const colorBoxStyles = {\n    borderRadius: '5px',\n\n    width: `${previewSize}px`,\n    height: `${previewSize}px`,\n  }\n\n  let colorsShades = []\n\n  for (const colorKey in colors.shades) {\n    const _colorShades = colors.shades[colorKey]\n\n    for (const colorShadeKey in _colorShades) {\n      colorsShades.push({\n        name: colorKey,\n        shade: colorShadeKey,\n        value: _colorShades[colorShadeKey],\n      })\n    }\n  }\n\n  return (\n    <article>\n      <Row vertical=\"start\">\n        {colorsShades.map((color, index) => {\n          const { name, shade, value } = color || {}\n\n          return (\n            <Col xs={12} sm={6} md={6} lg={3} key={`color-${index}`}>\n              <Segment\n                className=\"aph-color\"\n                role=\"button\"\n                tabIndex={`10${index}`}\n                hoverable\n                styles={colorItemStyles}\n              >\n                <Row>\n                  <Col styles={colorBoxColStyles}>\n                    <Segment\n                      padding=\"0\"\n                      styles={{\n                        ...colorBoxStyles,\n                        backgroundColor: color.value,\n                      }}\n                    />\n                  </Col>\n                  <Col styles={colorTextColStyles}>\n                    <div className=\"aph-color__value\">{value}</div>\n                    <strong>{name}</strong>\n                    <div>{shade}</div>\n                  </Col>\n                </Row>\n              </Segment>\n            </Col>\n          )\n        })}\n      </Row>\n    </article>\n  )\n}",__scope:{props:this?this.props:t,Playground:s.c,Row:c.ab,Col:c.k,Segment:c.db,colors:a.b},mdxType:"Playground"},(function(){var e={padding:"10px",margin:"0",".aph-color":{"&__value":{color:a.b.get("oil","crystal"),fontSize:"12px"}}},o={minWidth:"".concat(52,"px"),maxWidth:"".concat(52,"px")},t={minWidth:"calc(100% - ".concat(52,"px)"),maxWidth:"calc(100% - ".concat(52,"px)"),fontSize:"14px",lineHeight:"20px",paddingLeft:0,color:a.b.get("oil","dark")},l={borderRadius:"5px",width:"".concat(32,"px"),height:"".concat(32,"px")},s=[];for(var i in a.b.shades){var d=a.b.shades[i];for(var p in d)s.push({name:i,shade:p,value:d[p]})}return Object(r.b)("article",null,Object(r.b)(c.ab,{vertical:"start",mdxType:"Row"},s.map((function(s,a){var i=s||{},d=i.name,p=i.shade,b=i.value;return Object(r.b)(c.k,{xs:12,sm:6,md:6,lg:3,key:"color-".concat(a),mdxType:"Col"},Object(r.b)(c.db,{className:"aph-color",role:"button",tabIndex:"10".concat(a),hoverable:!0,styles:e,mdxType:"Segment"},Object(r.b)(c.ab,{mdxType:"Row"},Object(r.b)(c.k,{styles:o,mdxType:"Col"},Object(r.b)(c.db,{padding:"0",styles:Object(n.a)(Object(n.a)({},l),{},{backgroundColor:s.value}),mdxType:"Segment"})),Object(r.b)(c.k,{styles:t,mdxType:"Col"},Object(r.b)("div",{className:"aph-color__value"},b),Object(r.b)("strong",null,d),Object(r.b)("div",null,p)))))}))))})),Object(r.b)("h2",{id:"example"},"Example"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre"},"import { colors } from '@ingresse/aphrodite';\n\n...\n\nreturn (\n    <div style={{ color: colors.get('ocean', 'dark'), background: colors.get('ocean', 'crystal') }}>\n        Element customized with Color Utils from Aphrodite React.\n    </div>\n);\n")),Object(r.b)(s.c,{__position:1,__code:"<Row horizontal=\"center\">\n  <Col xs={12} sm={6}>\n    <Segment\n      padding=\"25px 20px\"\n      styles={{\n        borderRadius: '5px',\n        textAlign: 'center',\n        color: colors.get('ocean', 'dark'),\n        background: colors.get('ocean', 'crystal'),\n      }}\n    >\n      Element customized with Color Utils from Aphrodite React.\n    </Segment>\n  </Col>\n</Row>",__scope:{props:this?this.props:t,Playground:s.c,Row:c.ab,Col:c.k,Segment:c.db,colors:a.b},mdxType:"Playground"},Object(r.b)(c.ab,{horizontal:"center",mdxType:"Row"},Object(r.b)(c.k,{xs:12,sm:6,mdxType:"Col"},Object(r.b)(c.db,{padding:"25px 20px",styles:{borderRadius:"5px",textAlign:"center",color:a.b.get("ocean","dark"),background:a.b.get("ocean","crystal")},mdxType:"Segment"},"Element customized with Color Utils from Aphrodite React.")))))}d&&d===Object(d)&&Object.isExtensible(d)&&Object.defineProperty(d,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"MDXContent",filename:"src/utils/colors/colors.mdx"}}),d.isMDXComponent=!0}}]);
//# sourceMappingURL=utils-colors-colors.b80c22364dde94cef3de.js.map