{"version":3,"sources":["/Users/udi/projects/front/aphrodite-react/src/components/Toast/Toast.mdx"],"names":["layoutProps","MDXLayout","MDXContent","_ref","components","props","Object","_Users_udi_projects_front_aphrodite_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_1__","_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__","_Users_udi_projects_front_aphrodite_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__","mdxType","id","parentName","href","className","docz__WEBPACK_IMPORTED_MODULE_4__","__position","__code","__scope","this","Playground","Props","Button","ToastsContainer","toast","SCREEN_SIZES","___WEBPACK_IMPORTED_MODULE_5__","hideProgressBar","autoClose","styles","top","right","color","onClick","inverse","success","info","warning","error","isMDXComponent"],"mappings":"mkBAaMA,EAAc,GAGdC,EAAY,UACH,SAASC,EAATC,GAGZ,IAFDC,EAECD,EAFDC,WACGC,EACFC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,gBACD,OAAOG,OAAAE,EAAA,EAAAF,CAACL,EAADK,OAAAG,EAAA,EAAAH,CAAA,GAAeN,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYM,QAAQ,cAE5EJ,OAAAE,EAAA,EAAAF,CAAA,KAAQ,CACNK,GAAM,SADR,SAGAL,OAAAE,EAAA,EAAAF,CAAA,KAAQ,CACNK,GAAM,wFADR,6CAEiDL,OAAAE,EAAA,EAAAF,CAAA,IAAAA,OAAAG,EAAA,EAAAH,CAAA,CAAGM,WAAW,MAAS,CACpEC,KAAQ,8CACPP,OAAAE,EAAA,EAAAF,CAAA,UAAQM,WAAW,KAAnB,mBAJL,mCAKAN,OAAAE,EAAA,EAAAF,CAAA,KAAQ,CACNK,GAAM,0DADR,6BAEiCL,OAAAE,EAAA,EAAAF,CAAA,IAAAA,OAAAG,EAAA,EAAAH,CAAA,CAAGM,WAAW,MAAS,CACpDC,KAAQ,8CADqB,iBAFjC,sBAKAP,OAAAE,EAAA,EAAAF,CAAA,WAAKA,OAAAE,EAAA,EAAAF,CAAA,OAAAA,OAAAG,EAAA,EAAAH,CAAA,CAAMM,WAAW,OAAU,CAC5BE,UAAa,iBADZ,wEAILR,OAAAE,EAAA,EAAAF,CAAA,KAAQ,CACNK,GAAM,WADR,WAGAL,OAAAE,EAAA,EAAAF,CAACS,EAAA,EAAD,CAAYC,WAAY,EAAGC,OAAQ,46CAA67CC,QAAS,CACv+Cb,MAAOc,KAAOA,KAAKd,MAAQA,EAC3Be,eACAC,UACAC,WACAC,oBACAC,UACAC,kBACCf,QAAQ,cACV,WAyBG,OAAOJ,OAAAE,EAAA,EAAAF,CAAA,WACHA,OAAAE,EAAA,EAAAF,CAACoB,EAAA,EAAD,CAAiBC,iBAAiB,EAAMC,WAAW,EAAOC,OAAQ,CAClEC,IAAK,OACLC,MAAO,QACNrB,QAAQ,oBAETJ,OAAAE,EAAA,EAAAF,CAACoB,EAAA,EAAD,CAAQM,MAAM,OAAOC,QA9BzB,WACET,YAAM,+BA6BwCd,QAAQ,UAApD,WACAJ,OAAAE,EAAA,EAAAF,CAACoB,EAAA,EAAD,CAAQM,MAAM,QAAQC,QA3B1B,WACET,IAAMU,QAAQ,+BA0BiCxB,QAAQ,UAArD,WAEAJ,OAAAE,EAAA,EAAAF,CAAA,WACAA,OAAAE,EAAA,EAAAF,CAAA,WAEAA,OAAAE,EAAA,EAAAF,CAACoB,EAAA,EAAD,CAAQM,MAAM,UAAUC,QA5B5B,WACET,IAAMW,QAAQ,4FA2BmCzB,QAAQ,UAAvD,WACAJ,OAAAE,EAAA,EAAAF,CAACoB,EAAA,EAAD,CAAQM,MAAM,UAAUC,QAzB5B,WACET,IAAMY,KAAK,qDAwBmC1B,QAAQ,UAApD,QACAJ,OAAAE,EAAA,EAAAF,CAACoB,EAAA,EAAD,CAAQM,MAAM,UAAUC,QAtB5B,WACET,IAAMa,QAAQ,mDAqBmC3B,QAAQ,UAAvD,WACAJ,OAAAE,EAAA,EAAAF,CAACoB,EAAA,EAAD,CAAQM,MAAM,QAAQC,QAnB1B,WACET,IAAMc,MAAM,oGAkBiC5B,QAAQ,UAAnD,iMAQZR,EAAWqC,gBAAiB","file":"static/js/components-toast-toast.a8febdca.js","sourcesContent":["/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\nimport { Playground, Props } from 'docz';\nimport { Button, ToastsContainer, toast } from '../';\nimport { SCREEN_SIZES } from '../../constants';\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"toast\"\n    }}>{`Toast`}</h1>\n    <h4 {...{\n      \"id\": \"just-an-implementation-of-awesome-library-react-toastify-with-aphrodites-definitions\"\n    }}>{`Just an implementation of awesome library `}<a parentName=\"h4\" {...{\n        \"href\": \"https://github.com/fkhadra/react-toastify\"\n      }}><strong parentName=\"a\">{`React Toastify`}</strong></a>{`, with Aphrodite's definitions.`}</h4>\n    <h4 {...{\n      \"id\": \"so-its-just-consult-the-documentation-for-more-options\"\n    }}>{`So, it's just consult the `}<a parentName=\"h4\" {...{\n        \"href\": \"https://github.com/fkhadra/react-toastify\"\n      }}>{`documentation`}</a>{` for more options.`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`import { Button, ToastsContainer, toast } from 'aphrodite-react';\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"example\"\n    }}>{`Example`}</h2>\n    <Playground __position={0} __code={'() => {\\n  function toastDefault() {\\n    toast(\\'Hello from Aphrodite React\\')\\n  }\\n  function toastInverse() {\\n    toast.inverse(\\'Hello from Aphrodite React\\')\\n  }\\n\\n  function toastSuccess() {\\n    toast.success(\\n      \\'We are using React Toastify, an awesome library, customized with our styles definitions\\',\\n    )\\n  }\\n\\n  function toastInfo() {\\n    toast.info(\\'You can use React Toastify directly, if you want\\')\\n  }\\n\\n  function toastWarning() {\\n    toast.warning(\\\"But, isn\\'t have our style, if you use directly\\\")\\n  }\\n\\n  function toastError() {\\n    toast.error(\\n      \\\"And maybe doesn\\'t make sense use our library, if you want to use React Toastify directly - haha\\\",\\n    )\\n  }\\n\\n  return (\\n    <div>\\n      <ToastsContainer\\n        hideProgressBar={true}\\n        autoClose={false}\\n        styles={{ top: \\'45px\\', right: \\'45px\\' }}\\n      />\\n\\n      <Button color=\\\"grey\\\" onClick={toastDefault}>\\n        Default\\n      </Button>\\n      <Button color=\\\"black\\\" onClick={toastInverse}>\\n        Inverse\\n      </Button>\\n\\n      <br />\\n      <br />\\n\\n      <Button color=\\\"success\\\" onClick={toastSuccess}>\\n        Success\\n      </Button>\\n      <Button color=\\\"primary\\\" onClick={toastInfo}>\\n        Info\\n      </Button>\\n      <Button color=\\\"warning\\\" onClick={toastWarning}>\\n        Warning\\n      </Button>\\n      <Button color=\\\"error\\\" onClick={toastError}>\\n        Error\\n      </Button>\\n    </div>\\n  )\\n}'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      Button,\n      ToastsContainer,\n      toast,\n      SCREEN_SIZES\n    }} mdxType=\"Playground\">\n    {() => {\n        function toastDefault() {\n          toast(\"Hello from Aphrodite React\");\n        }\n\n        function toastInverse() {\n          toast.inverse(\"Hello from Aphrodite React\");\n        }\n\n        function toastSuccess() {\n          toast.success(\"We are using React Toastify, an awesome library, customized with our styles definitions\");\n        }\n\n        function toastInfo() {\n          toast.info(\"You can use React Toastify directly, if you want\");\n        }\n\n        function toastWarning() {\n          toast.warning(\"But, isn't have our style, if you use directly\");\n        }\n\n        function toastError() {\n          toast.error(\"And maybe doesn't make sense use our library, if you want to use React Toastify directly - haha\");\n        }\n\n        return <div>\n            <ToastsContainer hideProgressBar={true} autoClose={false} styles={{\n            top: '45px',\n            right: '45px'\n          }} mdxType=\"ToastsContainer\" />\n\n            <Button color=\"grey\" onClick={toastDefault} mdxType=\"Button\">Default</Button>\n            <Button color=\"black\" onClick={toastInverse} mdxType=\"Button\">Inverse</Button>\n\n            <br />\n            <br />\n\n            <Button color=\"success\" onClick={toastSuccess} mdxType=\"Button\">Success</Button>\n            <Button color=\"primary\" onClick={toastInfo} mdxType=\"Button\">Info</Button>\n            <Button color=\"warning\" onClick={toastWarning} mdxType=\"Button\">Warning</Button>\n            <Button color=\"error\" onClick={toastError} mdxType=\"Button\">Error</Button>\n        </div>;\n      }}\n    </Playground>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\n  "],"sourceRoot":""}