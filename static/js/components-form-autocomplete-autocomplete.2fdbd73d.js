(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{"./src/components/Form/Autocomplete/Autocomplete.mdx":function(e,n,t){"use strict";t.r(n),t.d(n,"default",(function(){return u}));var a=t("./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js"),l=t("./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js"),o=t("./node_modules/react/index.js"),s=t("./node_modules/@mdx-js/react/dist/esm.js"),c=t("./node_modules/docz/dist/index.esm.js"),r=t("./src/components/index.js"),i={};function u(e){var n=e.components,t=Object(l.a)(e,["components"]);return Object(s.b)("wrapper",Object.assign({},i,t,{components:n,mdxType:"MDXLayout"}),Object(s.b)("h1",{id:"form--autocomplete"},"Form | Autocomplete"),Object(s.b)("h3",{id:"a-simple-style-customization-of-awesome-library-react-select"},"A simple style customization of awesome library ",Object(s.b)("a",Object.assign({parentName:"h3"},{href:"https://npmjs.com/package/react-select"}),"react-select"),"."),Object(s.b)("h2",{id:"sync"},"Sync"),Object(s.b)(c.c,{__position:0,__code:"() => {\n  const [selected, setSelected] = useState(null)\n  const selectOptions = [\n    { value: 'chocolate', label: 'Chocolate' },\n    { value: 'strawberry', label: 'Strawberry' },\n    { value: 'vanilla', label: 'Vanilla' },\n  ]\n  /**\n   * Handle Selected option\n   *\n   * @param {object} evt\n   */\n  function handleSelected(selected) {\n    setSelected(selected.value)\n  }\n\n  return (\n    <Container xs>\n      <Segment padding=\"10px 0\">Selected {selected}</Segment>\n\n      <Segment padding=\"10px 0\">\n        <Autocomplete\n          id=\"aph-autoselect1\"\n          className=\"aph aph-autoselect\"\n          placeholder=\"Custom placeholder\"\n          onChange={handleSelected}\n          options={selectOptions}\n          error={selected === 'vanilla' ? 'Erro aqui' : false}\n        />\n      </Segment>\n    </Container>\n  )\n}",__scope:{props:this?this.props:t,useState:o.useState,Playground:c.c,Props:c.d,Autocomplete:r.b,Container:r.k,Segment:r.N,Row:r.M,Col:r.i},mdxType:"Playground"},(function(){var e=Object(o.useState)(null),n=Object(a.a)(e,2),t=n[0],l=n[1];return Object(s.b)(r.k,{xs:!0,mdxType:"Container"},Object(s.b)(r.N,{padding:"10px 0",mdxType:"Segment"},"Selected ",t),Object(s.b)(r.N,{padding:"10px 0",mdxType:"Segment"},Object(s.b)(r.b,{id:"aph-autoselect1",className:"aph aph-autoselect",placeholder:"Custom placeholder",onChange:function(e){l(e.value)},options:[{value:"chocolate",label:"Chocolate"},{value:"strawberry",label:"Strawberry"},{value:"vanilla",label:"Vanilla"}],error:"vanilla"===t&&"Erro aqui",mdxType:"Autocomplete"})))})),Object(s.b)("h2",{id:"disabled"},"Disabled"),Object(s.b)(c.c,{__position:1,__code:'<Container xs>\n  <Segment padding="10px 0">\n    <Autocomplete isDisabled />\n  </Segment>\n</Container>',__scope:{props:this?this.props:t,useState:o.useState,Playground:c.c,Props:c.d,Autocomplete:r.b,Container:r.k,Segment:r.N,Row:r.M,Col:r.i},mdxType:"Playground"},Object(s.b)(r.k,{xs:!0,mdxType:"Container"},Object(s.b)(r.N,{padding:"10px 0",mdxType:"Segment"},Object(s.b)(r.b,{isDisabled:!0,mdxType:"Autocomplete"})))),Object(s.b)("h2",{id:"async"},"Async"),Object(s.b)(c.c,{__position:2,__code:"() => {\n  const [input, setInput] = useState('')\n  const [selected, setSelected] = useState(null)\n  const selectOptions = [\n    { value: 'chocolate', label: 'Chocolate' },\n    { value: 'strawberry', label: 'Strawberry' },\n    { value: 'vanilla', label: 'Vanilla' },\n  ]\n  const filterColors = inputValue => {\n    return selectOptions.filter(i =>\n      i.label.toLowerCase().includes(inputValue.toLowerCase()),\n    )\n  }\n\n  const promiseOptions = inputValue =>\n    new Promise(resolve => {\n      setTimeout(() => {\n        resolve(filterColors(inputValue))\n      }, 1000)\n    })\n\n  /**\n   * Handle Selected option\n   *\n   * @param {object} evt\n   */\n  function handleSelected(selected) {\n    setSelected(selected.value)\n  }\n\n  /**\n   * Handle Input Value\n   *\n   * @param {string} newValue\n   */\n  function handleInput(newValue) {\n    const inputValue = newValue.replace(/\\W/g, '')\n    setInput(inputValue)\n\n    return inputValue\n  }\n\n  return (\n    <Container xs>\n      <Segment padding=\"10px 0\">Input value: {input}</Segment>\n      <Segment padding=\"10px 0\">Selected: {selected}</Segment>\n      <Segment padding=\"10px 0\">\n        <Autocomplete\n          isAsync\n          loadOptions={promiseOptions}\n          defaultOptions={selectOptions}\n          onInputChange={handleInput}\n          onChange={handleSelected}\n          error={selected === 'vanilla' ? 'Erro aqui' : false}\n        />\n      </Segment>\n    </Container>\n  )\n}",__scope:{props:this?this.props:t,useState:o.useState,Playground:c.c,Props:c.d,Autocomplete:r.b,Container:r.k,Segment:r.N,Row:r.M,Col:r.i},mdxType:"Playground"},(function(){var e=Object(o.useState)(""),n=Object(a.a)(e,2),t=n[0],l=n[1],c=Object(o.useState)(null),i=Object(a.a)(c,2),u=i[0],p=i[1],d=[{value:"chocolate",label:"Chocolate"},{value:"strawberry",label:"Strawberry"},{value:"vanilla",label:"Vanilla"}];return Object(s.b)(r.k,{xs:!0,mdxType:"Container"},Object(s.b)(r.N,{padding:"10px 0",mdxType:"Segment"},"Input value: ",t),Object(s.b)(r.N,{padding:"10px 0",mdxType:"Segment"},"Selected: ",u),Object(s.b)(r.N,{padding:"10px 0",mdxType:"Segment"},Object(s.b)(r.b,{isAsync:!0,loadOptions:function(e){return new Promise((function(n){setTimeout((function(){n(function(e){return d.filter((function(n){return n.label.toLowerCase().includes(e.toLowerCase())}))}(e))}),1e3)}))},defaultOptions:d,onInputChange:function(e){var n=e.replace(/\W/g,"");return l(n),n},onChange:function(e){p(e.value)},error:"vanilla"===u&&"Erro aqui",mdxType:"Autocomplete"})))})),Object(s.b)("h2",{id:"multiselect"},"Multiselect"),Object(s.b)(c.c,{__position:3,__code:"() => {\n  const [input, setInput] = useState('')\n  const [selected, setSelected] = useState(null)\n  const selectOptions = [\n    { value: 'chocolate', label: 'Chocolate' },\n    { value: 'strawberry', label: 'Strawberry' },\n    { value: 'vanilla', label: 'Vanilla' },\n  ]\n  const filterColors = inputValue => {\n    return selectOptions.filter(i =>\n      i.label.toLowerCase().includes(inputValue.toLowerCase()),\n    )\n  }\n\n  const promiseOptions = inputValue =>\n    new Promise(resolve => {\n      setTimeout(() => {\n        resolve(filterColors(inputValue))\n      }, 1000)\n    })\n\n  /**\n   * Handle Selected option\n   *\n   * @param {object} evt\n   */\n  function handleSelected({ value }) {\n    setSelected(value)\n  }\n\n  /**\n   * Handle Input Value\n   *\n   * @param {string} newValue\n   */\n  function handleInput(newValue) {\n    const inputValue = newValue.replace(/\\W/g, '')\n\n    setInput(inputValue)\n\n    return inputValue\n  }\n\n  return (\n    <Container xs>\n      <Segment padding=\"10px 0\">Input value: {input}</Segment>\n      <Segment padding=\"10px 0\">Selected: {selected}</Segment>\n      <Segment padding=\"10px 0\">\n        <Autocomplete\n          isAsync\n          isMulti\n          loadOptions={promiseOptions}\n          defaultOptions={selectOptions}\n          onInputChange={handleInput}\n          onChange={handleSelected}\n          error={selected === 'vanilla' ? 'Error' : false}\n        />\n      </Segment>\n    </Container>\n  )\n}",__scope:{props:this?this.props:t,useState:o.useState,Playground:c.c,Props:c.d,Autocomplete:r.b,Container:r.k,Segment:r.N,Row:r.M,Col:r.i},mdxType:"Playground"},(function(){var e=Object(o.useState)(""),n=Object(a.a)(e,2),t=n[0],l=n[1],c=Object(o.useState)(null),i=Object(a.a)(c,2),u=i[0],p=i[1],d=[{value:"chocolate",label:"Chocolate"},{value:"strawberry",label:"Strawberry"},{value:"vanilla",label:"Vanilla"}];return Object(s.b)(r.k,{xs:!0,mdxType:"Container"},Object(s.b)(r.N,{padding:"10px 0",mdxType:"Segment"},"Input value: ",t),Object(s.b)(r.N,{padding:"10px 0",mdxType:"Segment"},"Selected: ",u),Object(s.b)(r.N,{padding:"10px 0",mdxType:"Segment"},Object(s.b)(r.b,{isAsync:!0,isMulti:!0,loadOptions:function(e){return new Promise((function(n){setTimeout((function(){n(function(e){return d.filter((function(n){return n.label.toLowerCase().includes(e.toLowerCase())}))}(e))}),1e3)}))},defaultOptions:d,onInputChange:function(e){var n=e.replace(/\W/g,"");return l(n),n},onChange:function(e){var n=e.value;p(n)},error:"vanilla"===u&&"Error",mdxType:"Autocomplete"})))})),Object(s.b)("h2",{id:"properties"},"Properties"),Object(s.b)(c.d,{of:r.b,mdxType:"Props"}))}u&&u===Object(u)&&Object.isExtensible(u)&&Object.defineProperty(u,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"MDXContent",filename:"src/components/Form/Autocomplete/Autocomplete.mdx"}}),u.isMDXComponent=!0}}]);
//# sourceMappingURL=components-form-autocomplete-autocomplete.2fac7c4db472391d9fc4.js.map