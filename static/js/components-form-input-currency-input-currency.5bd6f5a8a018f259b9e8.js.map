{"version":3,"sources":["/home/udi/front/@aphrodite/src/components/Form/InputCurrency/InputCurrency.mdx"],"names":["layoutProps","MDXContent","components","props","mdxType","parentName","__position","__code","__scope","this","useState","Playground","Props","InputCurrency","Container","Segment","Row","Col","first","second","third","amounts","setAmounts","hasError","handleChange","evt","floatValue","maskedValue","name","target","console","log","fluid","horizontal","vertical","xs","padding","id","onChange","value","placeholder","label","error","errorMessage","of","isMDXComponent"],"mappings":"iqBAeA,MAKMA,EAAc,GAIL,SAASC,EAAT,GAGX,IAFFC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,YALS,UAKT,iBAAeH,EAAiBG,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAE5E,iBAAQ,CACN,GAAM,wBADR,yBAGA,iBAAQ,CACN,GAAM,kEADR,mCAEuC,+BAAGC,WAAW,MAAS,CAC1D,KAAQ,mDAD2B,wBAFvC,eAKA,iBAAQ,CACN,GAAM,YADR,YAGA,YAAC,IAAD,CAAYC,WAAY,EAAGC,OAAQ,8rDAA2tDC,QAAS,CACrwDL,MAAOM,KAAOA,KAAKN,MAAQA,EAC3BO,oBACAC,eACAC,UACAC,kBACAC,cACAC,YACAC,QACAC,SACCb,QAAQ,cACV,KAAO,MAAD,EAC2BM,mBAAS,CACrCQ,MAAO,EACPC,OAAQ,IACRC,MAAO,IAJN,mBACIC,EADJ,KACaC,EADb,KAMGC,EAAWF,EAAQD,OAAS,EAElC,SAASI,EAAaC,EAAKC,EAAYC,GAAc,MAKjDC,EAFEH,EADFI,OAGAD,KAEFE,QAAQC,IAAI,yBAA0BL,EAAYC,GAClDL,EAAW,2BAAKD,GAAN,IACR,CAACO,GAAOF,KAIZ,OAAO,YAAC,IAAD,CAAWM,OAAK,EAAC5B,QAAQ,aAC5B,YAAC,IAAD,CAAK6B,WAAW,SAASC,SAAS,QAAQ9B,QAAQ,OAC9C,YAAC,IAAD,CAAK+B,GAAI,GAAI/B,QAAQ,OACjB,YAAC,IAAD,CAASgC,QAAQ,SAAShC,QAAQ,WAC9B,YAAC,IAAD,CAAeiC,GAAG,uBAAuBT,KAAK,QAAQU,SAAUd,EAAce,MAAOlB,EAAQH,OAAS,KAAMsB,YAAY,0EAA0EpC,QAAQ,oBAGlN,YAAC,IAAD,CAAK+B,GAAI,EAAG/B,QAAQ,OAChB,YAAC,IAAD,CAASgC,QAAQ,SAAShC,QAAQ,WAC9B,YAAC,IAAD,CAAeiC,GAAG,8BAA8BI,MAAM,eAAeb,KAAK,SAASU,SAAUd,EAAce,MAAOlB,EAAQF,QAAU,KAAMf,QAAQ,oBAG1J,YAAC,IAAD,CAAK+B,GAAI,EAAG/B,QAAQ,OAChB,YAAC,IAAD,CAASgC,QAAQ,SAAShC,QAAQ,WAC9B,YAAC,IAAD,CAAeiC,GAAG,4BAA4BI,MAAM,gBAAgBb,KAAK,QAAQU,SAAUd,EAAce,MAAOlB,EAAQD,OAAS,KAAMsB,MAAOnB,EAAUoB,aAAcpB,GAAY,qCAAsCnB,QAAQ,wBAOpP,iBAAQ,CACN,GAAM,cADR,cAGA,YAAC,IAAD,CAAOwC,GAAI/B,IAAeT,QAAQ,W,yMAKtCH,EAAW4C,gBAAiB","file":"static/js/components-form-input-currency-input-currency.3c8c1a0c.js","sourcesContent":["\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsx mdx */\nimport { useState } from 'react';\nimport { Playground, Props } from 'docz';\nimport {\n    InputCurrency,\n    Container,\n    Segment,\n    Row,\n    Col,\n} from '../../';\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component '\" + name + \"' was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"form--input-currency\"\n    }}>{`Form | Input Currency`}</h1>\n    <h3 {...{\n      \"id\": \"simple-customization-of-awesome-react-currency-input-component\"\n    }}>{`Simple customization of awesome `}<a parentName=\"h3\" {...{\n        \"href\": \"https://npmjs.com/package/react-currency-input\"\n      }}>{`react-currency-input`}</a>{` component.`}</h3>\n    <h2 {...{\n      \"id\": \"examples\"\n    }}>{`Examples`}</h2>\n    <Playground __position={0} __code={'() => {\\n  const [amounts, setAmounts] = useState({\\n    first: 0,\\n    second: 2.5,\\n    third: 3,\\n  })\\n  const hasError = amounts.third <= 4\\n  function handleChange(evt, floatValue, maskedValue) {\\n    const { target } = evt\\n    const { name } = target\\n\\n    console.log(\\'Input Currency changed\\', floatValue, maskedValue)\\n\\n    setAmounts({\\n      ...amounts,\\n      [name]: floatValue,\\n    })\\n  }\\n\\n  return (\\n    <Container fluid>\\n      <Row horizontal=\\\"center\\\" vertical=\\\"start\\\">\\n        <Col xs={12}>\\n          <Segment padding=\\\"10px 0\\\">\\n            <InputCurrency\\n              id=\\\"ExampleInputCurrency\\\"\\n              name=\\\"first\\\"\\n              onChange={handleChange}\\n              value={amounts.first || null}\\n              placeholder=\\\"Important: To display the field empty, without mask, value must be null\\\"\\n            />\\n          </Segment>\\n        </Col>\\n        <Col xs={6}>\\n          <Segment padding=\\\"10px 0\\\">\\n            <InputCurrency\\n              id=\\\"ExampleInputCurrencyRegular\\\"\\n              label=\\\"Total Amount\\\"\\n              name=\\\"second\\\"\\n              onChange={handleChange}\\n              value={amounts.second || null}\\n            />\\n          </Segment>\\n        </Col>\\n        <Col xs={6}>\\n          <Segment padding=\\\"10px 0\\\">\\n            <InputCurrency\\n              id=\\\"ExampleInputCurrencyError\\\"\\n              label=\\\"Error example\\\"\\n              name=\\\"third\\\"\\n              onChange={handleChange}\\n              value={amounts.third || null}\\n              error={hasError}\\n              errorMessage={hasError && \\'Amount must be higher than R$ 4,00\\'}\\n            />\\n          </Segment>\\n        </Col>\\n      </Row>\\n    </Container>\\n  )\\n}'} __scope={{\n      props: this ? this.props : props,\n      useState,\n      Playground,\n      Props,\n      InputCurrency,\n      Container,\n      Segment,\n      Row,\n      Col\n    }} mdxType=\"Playground\">\n    {() => {\n        const [amounts, setAmounts] = useState({\n          first: 0,\n          second: 2.50,\n          third: 3\n        });\n        const hasError = amounts.third <= 4;\n\n        function handleChange(evt, floatValue, maskedValue) {\n          const {\n            target\n          } = evt;\n          const {\n            name\n          } = target;\n          console.log('Input Currency changed', floatValue, maskedValue);\n          setAmounts({ ...amounts,\n            [name]: floatValue\n          });\n        }\n\n        return <Container fluid mdxType=\"Container\">\n            <Row horizontal=\"center\" vertical=\"start\" mdxType=\"Row\">\n                <Col xs={12} mdxType=\"Col\">\n                    <Segment padding=\"10px 0\" mdxType=\"Segment\">\n                        <InputCurrency id=\"ExampleInputCurrency\" name=\"first\" onChange={handleChange} value={amounts.first || null} placeholder=\"Important: To display the field empty, without mask, value must be null\" mdxType=\"InputCurrency\" />\n                    </Segment>\n                </Col>\n                <Col xs={6} mdxType=\"Col\">\n                    <Segment padding=\"10px 0\" mdxType=\"Segment\">\n                        <InputCurrency id=\"ExampleInputCurrencyRegular\" label=\"Total Amount\" name=\"second\" onChange={handleChange} value={amounts.second || null} mdxType=\"InputCurrency\" />\n                    </Segment>\n                </Col>\n                <Col xs={6} mdxType=\"Col\">\n                    <Segment padding=\"10px 0\" mdxType=\"Segment\">\n                        <InputCurrency id=\"ExampleInputCurrencyError\" label=\"Error example\" name=\"third\" onChange={handleChange} value={amounts.third || null} error={hasError} errorMessage={hasError && 'Amount must be higher than R$ 4,00'} mdxType=\"InputCurrency\" />\n                    </Segment>\n                </Col>\n            </Row>\n        </Container>;\n      }}\n    </Playground>\n    <h2 {...{\n      \"id\": \"properties\"\n    }}>{`Properties`}</h2>\n    <Props of={InputCurrency} mdxType=\"Props\" />\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"],"sourceRoot":""}