{"version":3,"sources":["/Users/udi/projects/front/aphrodite-react/src/index.mdx"],"names":["layoutProps","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"iWAYMA,EAAc,GAIL,SAASC,EAAT,GAGX,IAFFC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,YALS,UAKT,iBAAeH,EAAiBG,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAC5E,iBAAQ,CACN,GAAM,aADR,aAGA,iBAAQ,CACN,GAAM,qCADR,yBAE6B,+BAAGC,WAAW,MAAS,CAChD,KAAQ,6BADiB,iBAG7B,uBACA,iBAAQ,CACN,GAAM,WADR,WAGA,iBAAQ,CACN,GAAM,sGADR,wGAGA,uBAAK,kCAAMA,WAAW,OAAU,IAA3B,+DAEL,uBACA,iBAAQ,CACN,GAAM,iBADR,iBAGA,iBAAQ,CACN,GAAM,iFADR,kFAGA,qBAAG,0BAAYA,WAAW,KAAvB,sBAAH,KACA,uBAAK,kCAAMA,WAAW,OAAU,CAC5B,UAAa,gBADZ,uDAML,qBAAG,0BAAYA,WAAW,KAAvB,2BAAH,KACA,uBAAK,kCAAMA,WAAW,OAAU,CAC5B,UAAa,gBADZ,qFAQL,iBAAQ,CACN,GAAM,wBADR,0BAGA,qBAAG,0BAAYA,WAAW,KAAvB,eAAH,KACA,uBAAK,kCAAMA,WAAW,OAAU,CAC5B,UAAa,iBADZ,2kB,mKAqCTJ,EAAWK,gBAAiB","file":"static/js/index.d3f5c1f2.js","sourcesContent":["\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1 {...{\n      \"id\": \"aphrodite\"\n    }}>{`Aphrodite`}</h1>\n    <h3 {...{\n      \"id\": \"react-ui-library-from-ingressecom\"\n    }}>{`React UI Library from `}<a parentName=\"h3\" {...{\n        \"href\": \"https://www.ingresse.com\"\n      }}>{`ingresse.com`}</a></h3>\n    <hr></hr>\n    <h2 {...{\n      \"id\": \"install\"\n    }}>{`Install`}</h2>\n    <h4 {...{\n      \"id\": \"you-can-install-with-yarn-or-npm-in-your-app-project-but-using-github-repository-address-as-source\"\n    }}>{`You can install with Yarn or NPM in your App Project, but using GitHub repository address as source:`}</h4>\n    <pre><code parentName=\"pre\" {...{}}>{`yarn add https://github.com/ingresse/aphrodite-react.git\n`}</code></pre>\n    <hr></hr>\n    <h2 {...{\n      \"id\": \"usage-example\"\n    }}>{`Usage Example`}</h2>\n    <h4 {...{\n      \"id\": \"re-export-the-aphrodite-tools-through-your-react-application-folder-structure\"\n    }}>{`Re-export the Aphrodite tools through your React application folder structure.`}</h4>\n    <p><inlineCode parentName=\"p\">{`src/utils/index.js`}</inlineCode>{`:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`export {\n    colors,\n} from 'aphrodite-react';\n`}</code></pre>\n    <p><inlineCode parentName=\"p\">{`src/components/index.js`}</inlineCode>{`:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`export {\n    Button,\n    Container,\n    Segment,\n} from 'aphrodite-react';\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"then-its-easy-to-use\"\n    }}>{`Then, it's easy to use`}</h4>\n    <p><inlineCode parentName=\"p\">{`src/App.jsx`}</inlineCode>{`:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`/* Core Packages */\nimport React from 'react';\n\n/* Components */\nimport {\n    Button,\n    Container,\n    Segment,\n} from './components';\n\n/* Component Itself */\nfunction App() {\n    function handleClick(evt) {\n        console.log('button click', evt);\n    }\n\n    return (\n        <Container>\n            <Segment\n                textAlign=\"center\">\n                <Button onClick={handleClick}>\n                    Aphrodite Button\n                </Button>\n            </Segment>\n        </Container>\n    );\n}\n\n/* Exporting */\nexport default App;\n`}</code></pre>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"],"sourceRoot":""}