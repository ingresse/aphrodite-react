{"version":3,"sources":["/home/udi/front/@aphrodite/src/components/Form/InputNumeric/InputNumeric.mdx"],"names":["layoutProps","MDXContent","components","props","mdxType","__position","__code","__scope","this","useState","Playground","Props","InputNumeric","Container","Segment","value","setValue","xs","padding","id","label","onChange","target","console","log","min","max","step","before","placeholder","of","isMDXComponent"],"mappings":"yjBAaA,MAKMA,EAAc,GAIL,SAASC,EAAT,GAGX,IAFFC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,YALS,UAKT,iBAAeH,EAAiBG,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAE5E,iBAAQ,CACN,GAAM,iBADR,iBAGA,iBAAQ,CACN,GAAM,8DADR,+DAGA,iBAAQ,CACN,GAAM,WADR,WAGA,YAAC,IAAD,CAAYC,WAAY,EAAGC,OAAQ,0cAAidC,QAAS,CAC3fJ,MAAOK,KAAOA,KAAKL,MAAQA,EAC3BM,oBACAC,eACAC,UACAC,iBACAC,cACAC,aACCV,QAAQ,cACV,KAAO,MAAD,EACuBK,mBAAS,IADhC,mBACIM,EADJ,KACWC,EADX,KAUH,OAAO,YAAC,IAAD,CAAWC,IAAE,EAACb,QAAQ,aACzB,YAAC,IAAD,CAASc,QAAQ,SAASd,QAAQ,WAC9B,YAAC,IAAD,CAAce,GAAG,sBAAsBC,MAAM,aAAaC,SATlE,UAAsB,OACpBC,IAEAC,QAAQC,IAAI,yBAA0BF,EAAOP,OAC7CC,EAASM,EAAOP,QAKwEA,MAAOA,EAAOX,QAAQ,qBAKpH,iBAAQ,CACN,GAAM,kBADR,kBAGA,YAAC,IAAD,CAAYC,WAAY,EAAGC,OAAQ,klBAA6lBC,QAAS,CACvoBJ,MAAOK,KAAOA,KAAKL,MAAQA,EAC3BM,oBACAC,eACAC,UACAC,iBACAC,cACAC,aACCV,QAAQ,cACV,KAAO,MAAD,EACuBK,mBAAS,IADhC,mBACIM,EADJ,KACWC,EADX,KAUH,OAAO,YAAC,IAAD,CAAWC,IAAE,EAACb,QAAQ,aACzB,YAAC,IAAD,CAASc,QAAQ,SAASd,QAAQ,WAC9B,YAAC,IAAD,CAAce,GAAG,4BAA4BC,MAAM,kBAAkBC,SAT7E,UAAsB,OACpBC,IAEAC,QAAQC,IAAI,yBAA0BF,EAAOP,OAC7CC,EAASM,EAAOP,QAKmFA,MAAOA,EAAOU,IAAK,EAAGC,IAAK,IAAOC,KAAM,GAAMC,OAAO,KAAKC,YAAY,eAAezB,QAAQ,qBAKtM,iBAAQ,CACN,GAAM,cADR,cAGA,YAAC,IAAD,CAAO0B,GAAIlB,IAAcR,QAAQ,W,uMAKrCH,EAAW8B,gBAAiB","file":"static/js/components-form-input-numeric-input-numeric.b1b9f5aa.js","sourcesContent":["\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsx mdx */\nimport { useState } from 'react';\nimport { Playground, Props } from 'docz';\nimport {\n    InputNumeric,\n    Container,\n    Segment,\n} from '../../';\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component '\" + name + \"' was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"input-numeric\"\n    }}>{`Input Numeric`}</h1>\n    <h3 {...{\n      \"id\": \"alternative-to-inputnumber-with-basic-behavior-validations\"\n    }}>{`Alternative to InputNumber, with basic behavior validations`}</h3>\n    <h2 {...{\n      \"id\": \"example\"\n    }}>{`Example`}</h2>\n    <Playground __position={0} __code={'() => {\\n  const [value, setValue] = useState(\\'\\')\\n  function handleChange({ target }) {\\n    console.log(\\'InputNumeric new value\\', target.value)\\n    setValue(target.value)\\n  }\\n\\n  return (\\n    <Container xs>\\n      <Segment padding=\\\"10px 0\\\">\\n        <InputNumeric\\n          id=\\\"ExampleInputNumeric\\\"\\n          label=\\\"Any Number\\\"\\n          onChange={handleChange}\\n          value={value}\\n        />\\n      </Segment>\\n    </Container>\\n  )\\n}'} __scope={{\n      props: this ? this.props : props,\n      useState,\n      Playground,\n      Props,\n      InputNumeric,\n      Container,\n      Segment\n    }} mdxType=\"Playground\">\n    {() => {\n        const [value, setValue] = useState('');\n\n        function handleChange({\n          target\n        }) {\n          console.log('InputNumeric new value', target.value);\n          setValue(target.value);\n        }\n\n        return <Container xs mdxType=\"Container\">\n            <Segment padding=\"10px 0\" mdxType=\"Segment\">\n                <InputNumeric id=\"ExampleInputNumeric\" label=\"Any Number\" onChange={handleChange} value={value} mdxType=\"InputNumeric\" />\n            </Segment>\n        </Container>;\n      }}\n    </Playground>\n    <h2 {...{\n      \"id\": \"custom-example\"\n    }}>{`Custom Example`}</h2>\n    <Playground __position={1} __code={'() => {\\n  const [value, setValue] = useState(\\'\\')\\n  function handleChange({ target }) {\\n    console.log(\\'InputNumeric new value\\', target.value)\\n    setValue(target.value)\\n  }\\n\\n  return (\\n    <Container xs>\\n      <Segment padding=\\\"10px 0\\\">\\n        <InputNumeric\\n          id=\\\"ExampleInputNumericCustom\\\"\\n          label=\\\"Donation amount\\\"\\n          onChange={handleChange}\\n          value={value}\\n          min={5}\\n          max={10000}\\n          step={0.5}\\n          before=\\\"R$\\\"\\n          placeholder=\\\"Ex: R$ 20.20\\\"\\n        />\\n      </Segment>\\n    </Container>\\n  )\\n}'} __scope={{\n      props: this ? this.props : props,\n      useState,\n      Playground,\n      Props,\n      InputNumeric,\n      Container,\n      Segment\n    }} mdxType=\"Playground\">\n    {() => {\n        const [value, setValue] = useState('');\n\n        function handleChange({\n          target\n        }) {\n          console.log('InputNumeric new value', target.value);\n          setValue(target.value);\n        }\n\n        return <Container xs mdxType=\"Container\">\n            <Segment padding=\"10px 0\" mdxType=\"Segment\">\n                <InputNumeric id=\"ExampleInputNumericCustom\" label=\"Donation amount\" onChange={handleChange} value={value} min={5} max={10000} step={0.50} before=\"R$\" placeholder=\"Ex: R$ 20.20\" mdxType=\"InputNumeric\" />\n            </Segment>\n        </Container>;\n      }}\n    </Playground>\n    <h2 {...{\n      \"id\": \"properties\"\n    }}>{`Properties`}</h2>\n    <Props of={InputNumeric} mdxType=\"Props\" />\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"],"sourceRoot":""}