{"version":3,"sources":["/home/udi/front/@aphrodite/src/components/ActionBar/ActionBar.mdx"],"names":["layoutProps","MDXContent","components","props","mdxType","parentName","__position","__code","__scope","this","useState","Playground","Props","ActionBar","Button","Container","Segment","visible","setVisible","shadow","radius","padding","textColor","textAlign","background","styles","position","overflow","minHeight","xs","link","color","onClick","of","isMDXComponent"],"mappings":"6iBASA,MAKMA,EAAc,GAIL,SAASC,EAAT,GAGX,IAFFC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,YALS,UAKT,iBAAeH,EAAiBG,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAE5E,iBAAQ,CACN,GAAM,cADR,cAGA,iBAAQ,CACN,GAAM,wCADR,wCAGA,uBAAK,kCAAMC,WAAW,OAAU,CAC5B,UAAa,iBADZ,qMAYL,iBAAQ,CACN,GAAM,WADR,WAGA,YAAC,IAAD,CAAYC,WAAY,EAAGC,OAAQ,+7BAAi9BC,QAAS,CAC3/BL,MAAOM,KAAOA,KAAKN,MAAQA,EAC3BO,oBACAC,eACAC,UACAC,cACAC,WACAC,cACAC,aACCZ,QAAQ,cACV,KAAO,MAAD,EAC2BM,oBAAS,GADpC,mBACIO,EADJ,KACaC,EADb,KAEH,OAAO,YAAC,IAAD,CAASC,QAAM,EAACC,OAAQ,EAAGC,QAAQ,IAAIC,UAAU,OAAOC,UAAU,SAASC,WAAW,aAAaC,OAAQ,CAChHC,SAAU,WACVC,SAAU,oBACVC,UAAW,SACVxB,QAAQ,WACP,YAAC,IAAD,CAAWyB,IAAE,EAACzB,QAAQ,aAClB,YAAC,IAAD,CAASiB,QAAQ,cAAcjB,QAAQ,WAAvC,iBAGA,YAAC,IAAD,CAAQ0B,MAAI,EAACC,MAAQd,EAAsB,QAAZ,UAAqBe,QAAS,IAAMd,GAAW,GAAOd,QAAQ,UACxFa,EAAU,oBAAuB,oBAG1C,YAAC,IAAD,CAAWA,QAASA,EAASQ,OAAQ,CACrCC,SAAU,WACVH,UAAW,UACVnB,QAAQ,aACL,YAAC,IAAD,CAAQ4B,QAAS,IAAMd,GAAW,GAAQd,QAAQ,UAAlD,wBAOZ,iBAAQ,CACN,GAAM,cADR,cAGA,YAAC,IAAD,CAAO6B,GAAIpB,IAAWT,QAAQ,W,4LAKlCH,EAAWiC,gBAAiB","file":"static/js/components-action-bar-action-bar.0b1a881c.js","sourcesContent":["\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsx mdx */\nimport { useState } from 'react';\nimport { Playground, Props } from 'docz';\nimport { ActionBar, Button, Container, Segment } from '../';\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component '\" + name + \"' was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"action-bar\"\n    }}>{`Action Bar`}</h1>\n    <h3 {...{\n      \"id\": \"toggle-visibility-of-action-elements\"\n    }}>{`Toggle visibility of action elements`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`import { ActionBar, Button } from '@ingresse/aphrodite';\n\n<ActionBar\n    visible={true}\n    styles={{\n        textAlign: 'center',\n    }}>\n    <Button>My Action</Button>\n</ActionBar>\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"example\"\n    }}>{`Example`}</h2>\n    <Playground __position={0} __code={'() => {\\n  const [visible, setVisible] = useState(true)\\n  return (\\n    <Segment\\n      shadow\\n      radius={4}\\n      padding=\\\"0\\\"\\n      textColor=\\\"base\\\"\\n      textAlign=\\\"center\\\"\\n      background=\\\"background\\\"\\n      styles={{\\n        position: \\'relative\\',\\n        overflow: \\'hidden !important\\',\\n        minHeight: \\'160px\\',\\n      }}\\n    >\\n      <Container xs>\\n        <Segment padding=\\\"30px 0 50px\\\">Page content.</Segment>\\n        <Button\\n          link\\n          color={!visible ? \\'success\\' : \\'error\\'}\\n          onClick={() => setVisible(true)}\\n        >\\n          {visible ? \\\"Can\\'t see anymore\\\" : \\'Open Action Bar\\'}\\n        </Button>\\n      </Container>\\n      <ActionBar\\n        visible={visible}\\n        styles={{\\n          position: \\'absolute\\',\\n          textAlign: \\'center\\',\\n        }}\\n      >\\n        <Button onClick={() => setVisible(false)}>Close Action Bar</Button>\\n      </ActionBar>\\n    </Segment>\\n  )\\n}'} __scope={{\n      props: this ? this.props : props,\n      useState,\n      Playground,\n      Props,\n      ActionBar,\n      Button,\n      Container,\n      Segment\n    }} mdxType=\"Playground\">\n    {() => {\n        const [visible, setVisible] = useState(true);\n        return <Segment shadow radius={4} padding=\"0\" textColor=\"base\" textAlign=\"center\" background=\"background\" styles={{\n          position: 'relative',\n          overflow: 'hidden !important',\n          minHeight: '160px'\n        }} mdxType=\"Segment\">\n            <Container xs mdxType=\"Container\">\n                <Segment padding=\"30px 0 50px\" mdxType=\"Segment\">\n                    Page content.\n                </Segment>\n                <Button link color={!visible ? 'success' : 'error'} onClick={() => setVisible(true)} mdxType=\"Button\">\n                    {visible ? 'Can\\'t see anymore' : 'Open Action Bar'}\n                </Button>\n            </Container>\n            <ActionBar visible={visible} styles={{\n            position: 'absolute',\n            textAlign: 'center'\n          }} mdxType=\"ActionBar\">\n                <Button onClick={() => setVisible(false)} mdxType=\"Button\">\n                    Close Action Bar\n                </Button>\n            </ActionBar>\n        </Segment>;\n      }}\n    </Playground>\n    <h2 {...{\n      \"id\": \"properties\"\n    }}>{`Properties`}</h2>\n    <Props of={ActionBar} mdxType=\"Props\" />\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"],"sourceRoot":""}