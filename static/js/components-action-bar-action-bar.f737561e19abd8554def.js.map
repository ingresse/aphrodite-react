{"version":3,"sources":["/Users/udi/projects/front/aphrodite-react/src/components/ActionBar/ActionBar.mdx"],"names":["layoutProps","MDXLayout","MDXContent","_ref","components","props","Object","_Users_udi_projects_front_aphrodite_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_2__","_mdx_js_react__WEBPACK_IMPORTED_MODULE_4__","_Users_udi_projects_front_aphrodite_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__","mdxType","id","parentName","className","docz__WEBPACK_IMPORTED_MODULE_5__","of","ActionBar","__position","__code","__scope","this","useState","Playground","Props","Button","Segment","_useState","_useState2","_Users_udi_projects_front_aphrodite_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","visible","setVisible","toggle","___WEBPACK_IMPORTED_MODULE_6__","style","position","minHeight","border","borderRadius","overflow","padding","textAlign","link","onClick","styles","color","isMDXComponent"],"mappings":"gpBAaMA,EAAc,GAGdC,EAAY,UACH,SAASC,EAATC,GAGZ,IAFDC,EAECD,EAFDC,WACGC,EACFC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,gBACD,OAAOG,OAAAE,EAAA,EAAAF,CAACL,EAADK,OAAAG,EAAA,EAAAH,CAAA,GAAeN,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYM,QAAQ,cAE5EJ,OAAAE,EAAA,EAAAF,CAAA,KAAQ,CACNK,GAAM,cADR,cAGAL,OAAAE,EAAA,EAAAF,CAAA,KAAQ,CACNK,GAAM,wCADR,wCAGAL,OAAAE,EAAA,EAAAF,CAAA,WAAKA,OAAAE,EAAA,EAAAF,CAAA,OAAAA,OAAAG,EAAA,EAAAH,CAAA,CAAMM,WAAW,OAAU,CAC5BC,UAAa,iBADZ,iMAYLP,OAAAE,EAAA,EAAAF,CAAA,KAAQ,CACNK,GAAM,cADR,cAGAL,OAAAE,EAAA,EAAAF,CAACQ,EAAA,EAAD,CAAOC,GAAIC,IAAWN,QAAQ,UAC9BJ,OAAAE,EAAA,EAAAF,CAAA,KAAQ,CACNK,GAAM,WADR,WAGAL,OAAAE,EAAA,EAAAF,CAACQ,EAAA,EAAD,CAAYG,WAAY,EAAGC,OAAQ,40BAA+1BC,QAAS,CACz4Bd,MAAOe,KAAOA,KAAKf,MAAQA,EAC3BgB,oBACAC,eACAC,UACAP,cACAQ,WACAC,aACCf,QAAQ,cACV,WAAM,IAAAgB,EAC2BL,oBAAS,GADpCM,EAAArB,OAAAsB,EAAA,EAAAtB,CAAAoB,EAAA,GACIG,EADJF,EAAA,GACaG,EADbH,EAAA,GAGH,SAASI,IACPD,GAAYD,GAGd,OAAOvB,OAAAE,EAAA,EAAAF,CAAC0B,EAAA,EAAD,CAASC,MAAO,CACrBC,SAAU,WACVC,UAAW,QACXC,OAAQ,+BACRC,aAAc,MACdC,SAAU,SACVC,QAAS,WACTC,UAAW,UACV9B,QAAQ,WACPJ,OAAAE,EAAA,EAAAF,CAAC0B,EAAA,EAAD,CAAStB,QAAQ,WAAjB,sBAIAJ,OAAAE,EAAA,EAAAF,CAAC0B,EAAA,EAAD,CAAQS,MAAI,EAACC,QAASX,EAAQrB,QAAQ,UAAtC,qBAIAJ,OAAAE,EAAA,EAAAF,CAAC0B,EAAA,EAAD,CAAWH,QAASA,EAASc,OAAQ,CACrCT,SAAU,YAETxB,QAAQ,aACLJ,OAAAE,EAAA,EAAAF,CAAC0B,EAAA,EAAD,CAAQY,MAAM,UAAUF,QAASX,EAAQrB,QAAQ,UAAjD,qNAWhBR,EAAW2C,gBAAiB","file":"static/js/components-action-bar-action-bar.7f77211c.js","sourcesContent":["/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\nimport { useState } from 'react';\nimport { Playground, Props } from 'docz';\nimport { ActionBar, Button, Segment } from '../';\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"action-bar\"\n    }}>{`Action Bar`}</h1>\n    <h4 {...{\n      \"id\": \"toggle-visibility-of-action-elements\"\n    }}>{`Toggle visibility of action elements`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`import { ActionBar, Button } from 'aphrodite-react';\n\n<ActionBar\n    visible={true}\n    styles={{\n        textAlign: 'center',\n    }}>\n    <Button>My Action</Button>\n</ActionBar>\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"properties\"\n    }}>{`Properties`}</h2>\n    <Props of={ActionBar} mdxType=\"Props\" />\n    <h2 {...{\n      \"id\": \"example\"\n    }}>{`Example`}</h2>\n    <Playground __position={1} __code={'() => {\\n  const [visible, setVisible] = useState(true)\\n  function toggle() {\\n    setVisible(!visible)\\n  }\\n\\n  return (\\n    <Segment\\n      style={{\\n        position: \\'relative\\',\\n        minHeight: \\'240px\\',\\n        border: \\'1px solid rgba(0, 0, 0, 0.1)\\',\\n        borderRadius: \\'4px\\',\\n        overflow: \\'hidden\\',\\n        padding: \\'15px 0 0\\',\\n        textAlign: \\'center\\',\\n      }}\\n    >\\n      <Segment>The Page Container</Segment>\\n\\n      <Button link onClick={toggle}>\\n        Toggle Action Bar\\n      </Button>\\n\\n      <ActionBar\\n        visible={visible}\\n        styles={{\\n          position: \\'absolute\\', // Just to fit in this example. Default: \\'fixed\\',\\n        }}\\n      >\\n        <Button color=\\\"primary\\\" onClick={toggle}>\\n          Close Action Bar\\n        </Button>\\n      </ActionBar>\\n    </Segment>\\n  )\\n}'} __scope={{\n      props: this ? this.props : props,\n      useState,\n      Playground,\n      Props,\n      ActionBar,\n      Button,\n      Segment\n    }} mdxType=\"Playground\">\n    {() => {\n        const [visible, setVisible] = useState(true);\n\n        function toggle() {\n          setVisible(!visible);\n        }\n\n        return <Segment style={{\n          position: 'relative',\n          minHeight: '240px',\n          border: '1px solid rgba(0, 0, 0, 0.1)',\n          borderRadius: '4px',\n          overflow: 'hidden',\n          padding: '15px 0 0',\n          textAlign: 'center'\n        }} mdxType=\"Segment\">\n            <Segment mdxType=\"Segment\">\n                The Page Container\n            </Segment>\n\n            <Button link onClick={toggle} mdxType=\"Button\">\n                Toggle Action Bar\n            </Button>\n\n            <ActionBar visible={visible} styles={{\n            position: 'absolute' // Just to fit in this example. Default: 'fixed',\n\n          }} mdxType=\"ActionBar\">\n                <Button color=\"primary\" onClick={toggle} mdxType=\"Button\">\n                    Close Action Bar\n                </Button>\n            </ActionBar>\n        </Segment>;\n      }}\n    </Playground>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\n  "],"sourceRoot":""}