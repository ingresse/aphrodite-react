{"version":3,"sources":["/home/udi/projects/aphrodite/src/components/Button/Button.mdx"],"names":["layoutProps","MDXContent","components","props","mdxType","parentName","__position","__code","__scope","this","useState","Playground","Props","colors","Button","Container","Styled","Row","Col","textAlign","link","small","horizontal","xs","sm","padding","background","block","margin","color","colorsAlias","Object","keys","alias","vertical","map","colorKey","md","lg","key","colorsShades","shades","colorsExcluded","includes","radius","as","target","href","btnText","setBtnText","loading","setLoading","toggleLoading","setTimeout","onClick","disabled","translucid","of","isMDXComponent"],"mappings":"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","file":"static/js/components-button-button.8b429d25.js","sourcesContent":["\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport { useState } from 'react';\nimport { Playground, Props } from 'docz';\nimport { colors } from '../../utils';\nimport { Button, Container, Styled, Row, Col } from '../';\n\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"button\"\n    }}>{`Button`}</h1>\n    <h3 {...{\n      \"id\": \"button-styled-with-aphrodite-definitions\"\n    }}>{`Button styled with Aphrodite definitions.`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`import { Button } from '@ingresse/aphrodite';\n\n<Button>Hello, you</Button>\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"regular\"\n    }}>{`Regular`}</h2>\n    <Playground __position={0} __code={'<Styled textAlign=\\\"center\\\">\\n  <Button>Hello</Button>\\n</Styled>'} __scope={{\n      props: this ? this.props : props,\n      useState,\n      Playground,\n      Props,\n      colors,\n      Button,\n      Container,\n      Styled,\n      Row,\n      Col\n    }} mdxType=\"Playground\">\n    <Styled textAlign=\"center\" mdxType=\"Styled\">\n        <Button mdxType=\"Button\">\n            Hello\n        </Button>\n    </Styled>\n    </Playground>\n    <h2 {...{\n      \"id\": \"link\"\n    }}>{`Link`}</h2>\n    <Playground __position={1} __code={'<Styled textAlign=\\\"center\\\">\\n  <Button link>Hello</Button>\\n</Styled>'} __scope={{\n      props: this ? this.props : props,\n      useState,\n      Playground,\n      Props,\n      colors,\n      Button,\n      Container,\n      Styled,\n      Row,\n      Col\n    }} mdxType=\"Playground\">\n    <Styled textAlign=\"center\" mdxType=\"Styled\">\n        <Button link mdxType=\"Button\">\n            Hello\n        </Button>\n    </Styled>\n    </Playground>\n    <h2 {...{\n      \"id\": \"small\"\n    }}>{`Small`}</h2>\n    <Playground __position={2} __code={'<Styled textAlign=\\\"center\\\">\\n  <Button small>Hello</Button>\\n</Styled>'} __scope={{\n      props: this ? this.props : props,\n      useState,\n      Playground,\n      Props,\n      colors,\n      Button,\n      Container,\n      Styled,\n      Row,\n      Col\n    }} mdxType=\"Playground\">\n    <Styled textAlign=\"center\" mdxType=\"Styled\">\n        <Button small mdxType=\"Button\">\n            Hello\n        </Button>\n    </Styled>\n    </Playground>\n    <h2 {...{\n      \"id\": \"basic-colors\"\n    }}>{`Basic Colors`}</h2>\n    <Playground __position={3} __code={'<Row horizontal=\\\"center\\\">\\n  <Col xs={12} sm={4}>\\n    <Styled padding=\\\"10px 20px\\\" background=\\\"info\\\">\\n      <Button block margin=\\\"10px 0\\\" color=\\\"black\\\">\\n        black\\n      </Button>\\n    </Styled>\\n  </Col>\\n  <Col xs={12} sm={4}>\\n    <Styled padding=\\\"10px 20px\\\" background=\\\"secondary\\\">\\n      <Button block margin=\\\"10px 0\\\" color=\\\"white\\\">\\n        white\\n      </Button>\\n    </Styled>\\n  </Col>\\n  <Col xs={12} sm={4}>\\n    <Styled padding=\\\"10px 20px\\\" background=\\\"success\\\">\\n      <Button block margin=\\\"10px 0\\\" color=\\\"smoke\\\">\\n        smoke\\n      </Button>\\n    </Styled>\\n  </Col>\\n</Row>'} __scope={{\n      props: this ? this.props : props,\n      useState,\n      Playground,\n      Props,\n      colors,\n      Button,\n      Container,\n      Styled,\n      Row,\n      Col\n    }} mdxType=\"Playground\">\n    <Row horizontal=\"center\" mdxType=\"Row\">\n        <Col xs={12} sm={4} mdxType=\"Col\">\n            <Styled padding=\"10px 20px\" background=\"info\" mdxType=\"Styled\">\n                <Button block margin=\"10px 0\" color=\"black\" mdxType=\"Button\">\n                    black\n                </Button>\n            </Styled>\n        </Col>\n        <Col xs={12} sm={4} mdxType=\"Col\">\n            <Styled padding=\"10px 20px\" background=\"secondary\" mdxType=\"Styled\">\n                <Button block margin=\"10px 0\" color=\"white\" mdxType=\"Button\">\n                    white\n                </Button>\n            </Styled>\n        </Col>\n        <Col xs={12} sm={4} mdxType=\"Col\">\n            <Styled padding=\"10px 20px\" background=\"success\" mdxType=\"Styled\">\n                <Button block margin=\"10px 0\" color=\"smoke\" mdxType=\"Button\">\n                    smoke\n                </Button>\n            </Styled>\n        </Col>\n    </Row>\n    </Playground>\n    <h2 {...{\n      \"id\": \"colors-alias\"\n    }}>{`Colors Alias`}</h2>\n    <Playground __position={4} __code={'() => {\\n  const colorsAlias = Object.keys(colors.alias)\\n  return (\\n    <section>\\n      <Styled padding=\\\"20px 0\\\">\\n        <Row horizontal=\\\"center\\\" vertical=\\\"middle\\\">\\n          {colorsAlias.map(colorKey => (\\n            <Col xs={6} sm={4} md={4} lg={3} key={`color-${colorKey}`}>\\n              <Button block margin=\\\"10px 0\\\" color={colorKey}>\\n                {colorKey}\\n              </Button>\\n              <Button block small margin=\\\"10px 0\\\" color={colorKey}>\\n                {colorKey}\\n              </Button>\\n            </Col>\\n          ))}\\n        </Row>\\n      </Styled>\\n      <Styled padding=\\\"20px 0\\\">\\n        <Row horizontal=\\\"center\\\" vertical=\\\"middle\\\">\\n          {colorsAlias.map(colorKey => (\\n            <Col xs={6} sm={4} md={4} lg={3} key={`color-${colorKey}`}>\\n              <Button link block margin=\\\"10px 0\\\" color={colorKey}>\\n                {colorKey}\\n              </Button>\\n              <Button link block small margin=\\\"10px 0\\\" color={colorKey}>\\n                {colorKey}\\n              </Button>\\n            </Col>\\n          ))}\\n        </Row>\\n      </Styled>\\n    </section>\\n  )\\n}'} __scope={{\n      props: this ? this.props : props,\n      useState,\n      Playground,\n      Props,\n      colors,\n      Button,\n      Container,\n      Styled,\n      Row,\n      Col\n    }} mdxType=\"Playground\">\n    {() => {\n        const colorsAlias = Object.keys(colors.alias);\n        return <section>\n            <Styled padding=\"20px 0\" mdxType=\"Styled\">\n                <Row horizontal=\"center\" vertical=\"middle\" mdxType=\"Row\">\n                    {colorsAlias.map(colorKey => <Col xs={6} sm={4} md={4} lg={3} key={`color-${colorKey}`} mdxType=\"Col\">\n                            <Button block margin=\"10px 0\" color={colorKey} mdxType=\"Button\">\n                                {colorKey}\n                            </Button>\n                            <Button block small margin=\"10px 0\" color={colorKey} mdxType=\"Button\">\n                                {colorKey}\n                            </Button>\n                        </Col>)}\n                </Row>\n            </Styled>\n            <Styled padding=\"20px 0\" mdxType=\"Styled\">\n                <Row horizontal=\"center\" vertical=\"middle\" mdxType=\"Row\">\n                    {colorsAlias.map(colorKey => <Col xs={6} sm={4} md={4} lg={3} key={`color-${colorKey}`} mdxType=\"Col\">\n                            <Button link block margin=\"10px 0\" color={colorKey} mdxType=\"Button\">\n                                {colorKey}\n                            </Button>\n                            <Button link block small margin=\"10px 0\" color={colorKey} mdxType=\"Button\">\n                                {colorKey}\n                            </Button>\n                        </Col>)}\n                </Row>\n            </Styled>\n        </section>;\n      }}\n    </Playground>\n    <h2 {...{\n      \"id\": \"colors-shades\"\n    }}>{`Colors Shades`}</h2>\n    <Playground __position={5} __code={'() => {\\n  const colorsShades = Object.keys(colors.shades)\\n  const colorsExcluded = [\\n    \\'primary\\',\\n    \\'secondary\\',\\n    \\'info\\',\\n    \\'success\\',\\n    \\'warning\\',\\n    \\'error\\',\\n    \\'translucid\\',\\n  ]\\n  return (\\n    <Row horizontal=\\\"center\\\">\\n      {colorsShades.map(colorKey => {\\n        if (colorsExcluded.includes(colorKey)) {\\n          return null\\n        }\\n\\n        return (\\n          <Col xs={6} sm={4} md={4} lg={3} key={`color-${colorKey}`}>\\n            <Button block margin=\\\"10px 0\\\" color={colorKey}>\\n              {colorKey}\\n            </Button>\\n            <Button block small margin=\\\"10px 0\\\" color={colorKey}>\\n              {colorKey}\\n            </Button>\\n          </Col>\\n        )\\n      })}\\n    </Row>\\n  )\\n}'} __scope={{\n      props: this ? this.props : props,\n      useState,\n      Playground,\n      Props,\n      colors,\n      Button,\n      Container,\n      Styled,\n      Row,\n      Col\n    }} mdxType=\"Playground\">\n    {() => {\n        const colorsShades = Object.keys(colors.shades);\n        const colorsExcluded = ['primary', 'secondary', 'info', 'success', 'warning', 'error', 'translucid'];\n        return <Row horizontal=\"center\" mdxType=\"Row\">\n            {colorsShades.map(colorKey => {\n            if (colorsExcluded.includes(colorKey)) {\n              return null;\n            }\n\n            return <Col xs={6} sm={4} md={4} lg={3} key={`color-${colorKey}`} mdxType=\"Col\">\n                        <Button block margin=\"10px 0\" color={colorKey} mdxType=\"Button\">\n                            {colorKey}\n                        </Button>\n                        <Button block small margin=\"10px 0\" color={colorKey} mdxType=\"Button\">\n                            {colorKey}\n                        </Button>\n                    </Col>;\n          })}\n        </Row>;\n      }}\n    </Playground>\n    <h2 {...{\n      \"id\": \"translucid\"\n    }}>{`Translucid`}</h2>\n    <Playground __position={6} __code={'<Row horizontal=\\\"center\\\">\\n  <Col xs={12} sm={4}>\\n    <Styled padding=\\\"10px 20px\\\" background=\\\"success\\\">\\n      <Button block margin=\\\"10px 0\\\" color=\\\"translucid\\\">\\n        translucid\\n      </Button>\\n    </Styled>\\n  </Col>\\n</Row>'} __scope={{\n      props: this ? this.props : props,\n      useState,\n      Playground,\n      Props,\n      colors,\n      Button,\n      Container,\n      Styled,\n      Row,\n      Col\n    }} mdxType=\"Playground\">\n    <Row horizontal=\"center\" mdxType=\"Row\">\n        <Col xs={12} sm={4} mdxType=\"Col\">\n            <Styled padding=\"10px 20px\" background=\"success\" mdxType=\"Styled\">\n                <Button block margin=\"10px 0\" color=\"translucid\" mdxType=\"Button\">\n                    translucid\n                </Button>\n            </Styled>\n        </Col>\n    </Row>\n    </Playground>\n    <h2 {...{\n      \"id\": \"customized-radius\"\n    }}>{`Customized Radius`}</h2>\n    <Playground __position={7} __code={'<Row horizontal=\\\"center\\\">\\n  <Col xs={6} sm={3}>\\n    <Button block margin=\\\"10px 0\\\">\\n      Regular Radius\\n    </Button>\\n  </Col>\\n  <Col xs={6} sm={3}>\\n    <Button block margin=\\\"10px 0\\\" radius=\\\"12px\\\">\\n      Custom Radius\\n    </Button>\\n  </Col>\\n  <Col xs={6} sm={3}>\\n    <Button block margin=\\\"10px 0\\\" radius={6}>\\n      Custom Radius\\n    </Button>\\n  </Col>\\n  <Col xs={6} sm={3}>\\n    <Button block margin=\\\"10px 0\\\" radius=\\\"0\\\">\\n      Reset Radius\\n    </Button>\\n  </Col>\\n</Row>'} __scope={{\n      props: this ? this.props : props,\n      useState,\n      Playground,\n      Props,\n      colors,\n      Button,\n      Container,\n      Styled,\n      Row,\n      Col\n    }} mdxType=\"Playground\">\n    <Row horizontal=\"center\" mdxType=\"Row\">\n        <Col xs={6} sm={3} mdxType=\"Col\">\n            <Button block margin=\"10px 0\" mdxType=\"Button\">\n                Regular Radius\n            </Button>\n        </Col>\n        <Col xs={6} sm={3} mdxType=\"Col\">\n            <Button block margin=\"10px 0\" radius=\"12px\" mdxType=\"Button\">\n                Custom Radius\n            </Button>\n        </Col>\n        <Col xs={6} sm={3} mdxType=\"Col\">\n            <Button block margin=\"10px 0\" radius={6} mdxType=\"Button\">\n                Custom Radius\n            </Button>\n        </Col>\n        <Col xs={6} sm={3} mdxType=\"Col\">\n            <Button block margin=\"10px 0\" radius=\"0\" mdxType=\"Button\">\n                Reset Radius\n            </Button>\n        </Col>\n    </Row>\n    </Playground>\n    <h2 {...{\n      \"id\": \"block\"\n    }}>{`Block`}</h2>\n    <Playground __position={8} __code={'<Button block>Block</Button>'} __scope={{\n      props: this ? this.props : props,\n      useState,\n      Playground,\n      Props,\n      colors,\n      Button,\n      Container,\n      Styled,\n      Row,\n      Col\n    }} mdxType=\"Playground\">\n    <Button block mdxType=\"Button\">\n        Block\n    </Button>\n    </Playground>\n    <h2 {...{\n      \"id\": \"custom-component\"\n    }}>{`Custom Component`}</h2>\n    <Playground __position={9} __code={'<Styled textAlign=\\\"center\\\">\\n  <Button as=\\\"a\\\" target=\\\"_blank\\\" href=\\\"https://www.ingresse.com\\\">\\n    Custom Component\\n  </Button>\\n</Styled>'} __scope={{\n      props: this ? this.props : props,\n      useState,\n      Playground,\n      Props,\n      colors,\n      Button,\n      Container,\n      Styled,\n      Row,\n      Col\n    }} mdxType=\"Playground\">\n    <Styled textAlign=\"center\" mdxType=\"Styled\">\n        <Button as=\"a\" target=\"_blank\" href=\"https://www.ingresse.com\" mdxType=\"Button\">\n            Custom Component\n        </Button>\n    </Styled>\n    </Playground>\n    <h2 {...{\n      \"id\": \"loading-state\"\n    }}>{`Loading State`}</h2>\n    <Playground __position={10} __code={'() => {\\n  const [btnText, setBtnText] = useState(\\'Load\\')\\n  const [loading, setLoading] = useState(false)\\n  function toggleLoading() {\\n    setLoading(!loading)\\n\\n    setTimeout(() => {\\n      setBtnText(\\'Done\\')\\n      setLoading(false)\\n\\n      setTimeout(() => {\\n        setBtnText(\\'Again\\')\\n      }, 1000)\\n    }, 5000)\\n  }\\n\\n  return (\\n    <Row horizontal=\\\"center\\\">\\n      <Col xs={12} sm={6}>\\n        <Styled textAlign=\\\"center\\\">\\n          <Button onClick={toggleLoading} loading={loading}>\\n            {btnText}\\n          </Button>\\n        </Styled>\\n      </Col>\\n      <Col xs={12} sm={6}>\\n        <Styled textAlign=\\\"center\\\">\\n          <Button small onClick={toggleLoading} loading={loading}>\\n            {btnText}\\n          </Button>\\n        </Styled>\\n      </Col>\\n    </Row>\\n  )\\n}'} __scope={{\n      props: this ? this.props : props,\n      useState,\n      Playground,\n      Props,\n      colors,\n      Button,\n      Container,\n      Styled,\n      Row,\n      Col\n    }} mdxType=\"Playground\">\n    {() => {\n        const [btnText, setBtnText] = useState('Load');\n        const [loading, setLoading] = useState(false);\n\n        function toggleLoading() {\n          setLoading(!loading);\n          setTimeout(() => {\n            setBtnText('Done');\n            setLoading(false);\n            setTimeout(() => {\n              setBtnText('Again');\n            }, 1000);\n          }, 5000);\n        }\n\n        return <Row horizontal=\"center\" mdxType=\"Row\">\n            <Col xs={12} sm={6} mdxType=\"Col\">\n                <Styled textAlign=\"center\" mdxType=\"Styled\">\n                    <Button onClick={toggleLoading} loading={loading} mdxType=\"Button\">\n                        {btnText}\n                    </Button>\n                </Styled>\n            </Col>\n            <Col xs={12} sm={6} mdxType=\"Col\">\n                <Styled textAlign=\"center\" mdxType=\"Styled\">\n                    <Button small onClick={toggleLoading} loading={loading} mdxType=\"Button\">\n                        {btnText}\n                    </Button>\n                </Styled>\n            </Col>\n        </Row>;\n      }}\n    </Playground>\n    <h2 {...{\n      \"id\": \"disabled\"\n    }}>{`Disabled`}</h2>\n    <p>{`Ignore `}<inlineCode parentName=\"p\">{`color`}</inlineCode>{` attribute`}</p>\n    <Playground __position={11} __code={'<Styled textAlign=\\\"center\\\">\\n  <Row horizontal=\\\"center\\\">\\n    <Col xs={6} sm={4}>\\n      <Button disabled block color=\\\"success\\\">\\n        Regular\\n      </Button>\\n    </Col>\\n    <Col xs={6} sm={4}>\\n      <Button disabled block link color=\\\"success\\\">\\n        Link\\n      </Button>\\n    </Col>\\n    <Col xs={6} sm={4}>\\n      <Button disabled block translucid color=\\\"success\\\">\\n        Translucid\\n      </Button>\\n    </Col>\\n  </Row>\\n</Styled>'} __scope={{\n      props: this ? this.props : props,\n      useState,\n      Playground,\n      Props,\n      colors,\n      Button,\n      Container,\n      Styled,\n      Row,\n      Col\n    }} mdxType=\"Playground\">\n    <Styled textAlign=\"center\" mdxType=\"Styled\">\n        <Row horizontal=\"center\" mdxType=\"Row\">\n            <Col xs={6} sm={4} mdxType=\"Col\">\n                <Button disabled block color=\"success\" mdxType=\"Button\">\n                    Regular\n                </Button>\n            </Col>\n            <Col xs={6} sm={4} mdxType=\"Col\">\n                <Button disabled block link color=\"success\" mdxType=\"Button\">\n                    Link\n                </Button>\n            </Col>\n            <Col xs={6} sm={4} mdxType=\"Col\">\n                <Button disabled block translucid color=\"success\" mdxType=\"Button\">\n                    Translucid\n                </Button>\n            </Col>\n        </Row>\n    </Styled>\n    </Playground>\n    <h2 {...{\n      \"id\": \"properties\"\n    }}>{`Properties`}</h2>\n    <Props of={Button} mdxType=\"Props\" />\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"],"sourceRoot":""}