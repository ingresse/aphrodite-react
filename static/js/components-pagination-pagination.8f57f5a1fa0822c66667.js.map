{"version":3,"sources":["/Users/bissuh/Dev/ingresse/aphrodite-react/src/components/Pagination/Pagination.mdx"],"names":["layoutProps","MDXContent","components","props","mdxType","parentName","__position","__code","__scope","this","useState","useEffect","Playground","Props","Pagination","Segment","Text","timer","setTimer","loading","total","current","pageSize","pagination","setPagination","padding","center","bold","margin","JSON","stringify","onChange","selectedPage","console","log","clearTimeout","setTimeout","of","isMDXComponent"],"mappings":"spBASA,MAKMA,EAAc,GAIL,SAASC,EAAT,GAGX,IAFFC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,YALS,UAKT,iBAAeH,EAAiBG,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAE5E,iBAAQ,CACN,GAAM,cADR,cAGA,iBAAQ,CACN,GAAM,2DADR,6CAEiD,+BAAGC,WAAW,MAAS,CACpE,KAAQ,gDADqC,iBAFjD,KAKA,iBAAQ,CACN,GAAM,4CADR,6CAGA,iBAAQ,CACN,GAAM,WADR,WAGA,YAAC,IAAD,CAAYC,WAAY,EAAGC,OAAQ,w+BAA6+BC,QAAS,CACvhCL,MAAOM,KAAOA,KAAKN,MAAQA,EAC3BO,oBACAC,sBACAC,eACAC,UACAC,eACAC,YACAC,UACCZ,QAAQ,cACV,KAAO,MAAD,EACuBM,mBAAS,MADhC,mBACIO,EADJ,KACWC,EADX,OAEiCR,mBAAS,CAC3CS,SAAS,EACTC,MAAO,GACPC,QAAS,EACTC,SAAU,IANT,mBAEIC,EAFJ,KAEgBC,EAFhB,KA6BH,OAAO,YAAC,IAAD,CAASC,QAAQ,SAASrB,QAAQ,WACrC,YAAC,IAAD,CAAMsB,QAAM,EAACC,MAAI,EAACvB,QAAQ,QAA1B,2BAGA,YAAC,IAAD,CAAMsB,QAAM,EAACE,OAAO,IAAIxB,QAAQ,QAC3ByB,KAAKC,UAAUP,IAGpB,YAAC,IAAD,iBAAgBA,EAAhB,CAA4BQ,SAtBhC,SAA0BC,EAAe,GACvCC,QAAQC,IAAI,gBAAiBF,GAC7BG,aAAalB,GACbO,EAAc,eAAKD,EAAN,CACXJ,SAAS,KAEXD,EAASkB,WAAW,KAClBZ,EAAc,eAAKD,EAAN,CACXJ,SAAS,EACTE,QAASW,MAEV,OAWuD5B,QAAQ,mBAIxE,iBAAQ,CACN,GAAM,cADR,cAGA,YAAC,IAAD,CAAOiC,GAAIvB,IAAYV,QAAQ,W,8LAKnCH,EAAWqC,gBAAiB","file":"static/js/components-pagination-pagination.e058ba24.js","sourcesContent":["\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsx mdx */\nimport { useState, useEffect } from 'react';\nimport { Playground, Props } from 'docz';\nimport { Pagination, Segment, Text } from '../';\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"pagination\"\n    }}>{`Pagination`}</h1>\n    <h3 {...{\n      \"id\": \"a-styled-customization-of-awesome-library-rc-pagination\"\n    }}>{`A styled customization of awesome library `}<a parentName=\"h3\" {...{\n        \"href\": \"https://www.npmjs.com/package/rc-pagination\"\n      }}>{`RC Pagination`}</a>{`.`}</h3>\n    <h3 {...{\n      \"id\": \"check-it-out-there-to-more-usage-details\"\n    }}>{`Check it out there to more usage details.`}</h3>\n    <h2 {...{\n      \"id\": \"example\"\n    }}>{`Example`}</h2>\n    <Playground __position={0} __code={'() => {\\n  const [timer, setTimer] = useState(null)\\n  const [pagination, setPagination] = useState({\\n    loading: false,\\n    total: 50,\\n    current: 5,\\n    pageSize: 5,\\n  })\\n  /**\\n   * Handle with Page changes,\\n   * simulating a HTTP request delay\\n   *\\n   * @param {number} selectedPage\\n   */\\n  function handlePageChange(selectedPage = 1) {\\n    console.log(\\'Page Selected\\', selectedPage)\\n\\n    clearTimeout(timer)\\n\\n    setPagination({\\n      ...pagination,\\n      loading: true,\\n    })\\n\\n    setTimer(\\n      setTimeout(() => {\\n        setPagination({\\n          ...pagination,\\n          loading: false,\\n          current: selectedPage,\\n        })\\n      }, 500),\\n    )\\n  }\\n\\n  return (\\n    <Segment padding=\\\"40px 0\\\">\\n      <Text center bold>\\n        Pagination state object\\n      </Text>\\n      <Text center margin=\\\"0\\\">\\n        {JSON.stringify(pagination)}\\n      </Text>\\n\\n      <Pagination {...pagination} onChange={handlePageChange} />\\n    </Segment>\\n  )\\n}'} __scope={{\n      props: this ? this.props : props,\n      useState,\n      useEffect,\n      Playground,\n      Props,\n      Pagination,\n      Segment,\n      Text\n    }} mdxType=\"Playground\">\n    {() => {\n        const [timer, setTimer] = useState(null);\n        const [pagination, setPagination] = useState({\n          loading: false,\n          total: 50,\n          current: 5,\n          pageSize: 5\n        });\n        /**\n         * Handle with Page changes,\n         * simulating a HTTP request delay\n         *\n         * @param {number} selectedPage\n         */\n\n        function handlePageChange(selectedPage = 1) {\n          console.log('Page Selected', selectedPage);\n          clearTimeout(timer);\n          setPagination({ ...pagination,\n            loading: true\n          });\n          setTimer(setTimeout(() => {\n            setPagination({ ...pagination,\n              loading: false,\n              current: selectedPage\n            });\n          }, 500));\n        }\n\n        return <Segment padding=\"40px 0\" mdxType=\"Segment\">\n            <Text center bold mdxType=\"Text\">\n                Pagination state object\n            </Text>\n            <Text center margin=\"0\" mdxType=\"Text\">\n                {JSON.stringify(pagination)}\n            </Text>\n\n            <Pagination {...pagination} onChange={handlePageChange} mdxType=\"Pagination\" />\n        </Segment>;\n      }}\n    </Playground>\n    <h2 {...{\n      \"id\": \"properties\"\n    }}>{`Properties`}</h2>\n    <Props of={Pagination} mdxType=\"Props\" />\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"],"sourceRoot":""}