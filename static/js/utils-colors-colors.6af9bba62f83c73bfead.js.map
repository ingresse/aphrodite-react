{"version":3,"sources":["/Users/udi/projects/front/aphrodite-react/src/utils/colors/colors.mdx"],"names":["layoutProps","MDXContent","components","props","mdxType","parentName","__position","__code","__scope","this","Playground","Row","Col","Segment","colors","colorItemStyles","padding","margin","color","get","fontSize","colorBoxColStyles","minWidth","previewSize","maxWidth","colorTextColStyles","lineHeight","paddingLeft","colorBoxStyles","borderRadius","width","height","colorsShades","colorKey","shades","colorShades","colorShadeKey","push","name","shade","value","vertical","map","index","xs","sm","md","lg","key","className","role","tabIndex","hoverable","styles","backgroundColor","horizontal","textAlign","background","isMDXComponent"],"mappings":"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","file":"static/js/utils-colors-colors.cbb5b568.js","sourcesContent":["\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsx mdx */\nimport { Playground } from 'docz';\nimport { Row, Col, Segment } from '../../components';\nimport { colors } from '../';\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"utilities--colors\"\n    }}>{`Utilities | Colors`}</h1>\n    <h3 {...{\n      \"id\": \"tools-to-made-easy-the-development-with-our-colors-presets\"\n    }}>{`Tools to made easy the development with our colors presets.`}</h3>\n    <h2 {...{\n      \"id\": \"usage\"\n    }}>{`Usage`}</h2>\n    <h4 {...{\n      \"id\": \"the-method-colorsget-will-help-you-to-get-the-desired-color-from-aphrodite-reacts-colors-palette\"\n    }}>{`The method `}<inlineCode parentName=\"h4\">{`colors.get`}</inlineCode>{` will help you to get the desired color from Aphrodite React's Colors Palette.`}</h4>\n    <pre><code parentName=\"pre\" {...{}}>{`import { colors } from 'aphrodite-react';\n\ncolors.get('primary', 'dark', 0.1);\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"palette-shades\"\n    }}>{`Palette Shades`}</h2>\n    <Playground __position={0} __code={'() => {\\n  const previewSize = 32\\n  const previewColWidth = previewSize + 20\\n  const colorItemStyles = {\\n    padding: \\'10px\\',\\n    margin: \\'0\\',\\n    \\'.aph-color\\': {\\n      \\'&__value\\': {\\n        color: colors.get(\\'oil\\', \\'crystal\\'),\\n        fontSize: \\'12px\\',\\n      },\\n    },\\n  }\\n  const colorBoxColStyles = {\\n    minWidth: `${previewColWidth}px`,\\n    maxWidth: `${previewColWidth}px`,\\n  }\\n  const colorTextColStyles = {\\n    minWidth: `calc(100% - ${previewColWidth}px)`,\\n    maxWidth: `calc(100% - ${previewColWidth}px)`,\\n\\n    fontSize: \\'14px\\',\\n    lineHeight: \\'20px\\',\\n    paddingLeft: 0,\\n\\n    color: colors.get(\\'oil\\', \\'dark\\'),\\n  }\\n  const colorBoxStyles = {\\n    borderRadius: \\'5px\\',\\n\\n    width: `${previewSize}px`,\\n    height: `${previewSize}px`,\\n  }\\n\\n  let colorsShades = []\\n\\n  for (const colorKey in colors.shades) {\\n    const colorShades = colors.shades[colorKey]\\n\\n    for (const colorShadeKey in colorShades) {\\n      colorsShades.push({\\n        name: colorKey,\\n        shade: colorShadeKey,\\n        value: colorShades[colorShadeKey],\\n      })\\n    }\\n  }\\n\\n  return (\\n    <article>\\n      <Row vertical=\\\"start\\\">\\n        {colorsShades.map((color, index) => {\\n          const { name, shade, value } = color || {}\\n\\n          return (\\n            <Col xs={12} sm={6} md={6} lg={3} key={`color-${index}`}>\\n              <Segment\\n                className=\\\"aph-color\\\"\\n                role=\\\"button\\\"\\n                tabIndex={`10${index}`}\\n                hoverable\\n                styles={colorItemStyles}\\n              >\\n                <Row>\\n                  <Col styles={colorBoxColStyles}>\\n                    <Segment\\n                      padding=\\\"0\\\"\\n                      styles={{\\n                        ...colorBoxStyles,\\n                        backgroundColor: color.value,\\n                      }}\\n                    />\\n                  </Col>\\n                  <Col styles={colorTextColStyles}>\\n                    <div className=\\\"aph-color__value\\\">{value}</div>\\n                    <strong>{name}</strong>\\n                    <div>{shade}</div>\\n                  </Col>\\n                </Row>\\n              </Segment>\\n            </Col>\\n          )\\n        })}\\n      </Row>\\n    </article>\\n  )\\n}'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Row,\n      Col,\n      Segment,\n      colors\n    }} mdxType=\"Playground\">\n    {() => {\n        const previewSize = 32;\n        const previewColWidth = previewSize + 20;\n        const colorItemStyles = {\n          padding: '10px',\n          margin: '0',\n          '.aph-color': {\n            '&__value': {\n              color: colors.get('oil', 'crystal'),\n              fontSize: '12px'\n            }\n          }\n        };\n        const colorBoxColStyles = {\n          minWidth: `${previewColWidth}px`,\n          maxWidth: `${previewColWidth}px`\n        };\n        const colorTextColStyles = {\n          minWidth: `calc(100% - ${previewColWidth}px)`,\n          maxWidth: `calc(100% - ${previewColWidth}px)`,\n          fontSize: '14px',\n          lineHeight: '20px',\n          paddingLeft: 0,\n          color: colors.get('oil', 'dark')\n        };\n        const colorBoxStyles = {\n          borderRadius: '5px',\n          width: `${previewSize}px`,\n          height: `${previewSize}px`\n        };\n        let colorsShades = [];\n\n        for (const colorKey in colors.shades) {\n          const colorShades = colors.shades[colorKey];\n\n          for (const colorShadeKey in colorShades) {\n            colorsShades.push({\n              name: colorKey,\n              shade: colorShadeKey,\n              value: colorShades[colorShadeKey]\n            });\n          }\n        }\n\n        return <article>\n            <Row vertical=\"start\" mdxType=\"Row\">\n                {colorsShades.map((color, index) => {\n              const {\n                name,\n                shade,\n                value\n              } = color || {};\n              return <Col xs={12} sm={6} md={6} lg={3} key={`color-${index}`} mdxType=\"Col\">\n                            <Segment className=\"aph-color\" role=\"button\" tabIndex={`10${index}`} hoverable styles={colorItemStyles} mdxType=\"Segment\">\n                                <Row mdxType=\"Row\">\n                                    <Col styles={colorBoxColStyles} mdxType=\"Col\">\n                                        <Segment padding=\"0\" styles={{ ...colorBoxStyles,\n                        backgroundColor: color.value\n                      }} mdxType=\"Segment\" />\n                                    </Col>\n                                    <Col styles={colorTextColStyles} mdxType=\"Col\">\n                                        <div className=\"aph-color__value\">\n                                            {value}\n                                        </div>\n                                        <strong>\n                                            {name}\n                                        </strong>\n                                        <div>\n                                            {shade}\n                                        </div>\n                                    </Col>\n                                </Row>\n                            </Segment>\n                        </Col>;\n            })}\n            </Row>\n        </article>;\n      }}\n    </Playground>\n    <h2 {...{\n      \"id\": \"example\"\n    }}>{`Example`}</h2>\n    <pre><code parentName=\"pre\" {...{}}>{`import { colors } from 'aphrodite-react';\n\n...\n\nreturn (\n    <div style={{ color: colors.get('ocean', 'dark'), background: colors.get('ocean', 'crystal') }}>\n        Element customized with Color Utils from Aphrodite React.\n    </div>\n);\n`}</code></pre>\n    <Playground __position={1} __code={'<Row horizontal=\\\"center\\\">\\n  <Col xs={12} sm={6}>\\n    <Segment\\n      padding=\\\"25px 20px\\\"\\n      styles={{\\n        borderRadius: \\'5px\\',\\n        textAlign: \\'center\\',\\n        color: colors.get(\\'ocean\\', \\'dark\\'),\\n        background: colors.get(\\'ocean\\', \\'crystal\\'),\\n      }}\\n    >\\n      Element customized with Color Utils from Aphrodite React.\\n    </Segment>\\n  </Col>\\n</Row>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Row,\n      Col,\n      Segment,\n      colors\n    }} mdxType=\"Playground\">\n    <Row horizontal=\"center\" mdxType=\"Row\">\n        <Col xs={12} sm={6} mdxType=\"Col\">\n            <Segment padding=\"25px 20px\" styles={{\n            borderRadius: '5px',\n            textAlign: 'center',\n            color: colors.get('ocean', 'dark'),\n            background: colors.get('ocean', 'crystal')\n          }} mdxType=\"Segment\">\n                Element customized with Color Utils from Aphrodite React.\n            </Segment>\n        </Col>\n    </Row>\n    </Playground>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"],"sourceRoot":""}