{"version":3,"sources":["/Users/udi/ingresse/aphrodite-react/src/components/Form/InputFromTo/InputFromTo.mdx"],"names":["layoutProps","MDXContent","components","props","mdxType","__position","__code","__scope","this","useState","Playground","Props","InputFromTo","Col","Container","Row","Styled","from","to","form","setForm","handleChange","evt","target","id","value","console","log","xs","padding","label","max","onChange","min","disabled","isMDXComponent"],"mappings":"owBAiBMA,EAAc,GAIL,SAASC,EAAT,GAGX,IAFFC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,YALS,UAKT,iBAAeH,EAAiBG,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAE5E,kBACE,GAAM,uBADR,wBAGA,kBACE,GAAM,IADR,OAGA,kBACE,GAAM,WADR,WAGA,YAAC,IAAD,CAAYC,WAAY,EAAGC,OAAQ,sgCAAqhCC,QAAS,CAC/jCJ,MAAOK,KAAOA,KAAKL,MAAQA,EAC3BM,oBACAC,eACAC,UACAC,gBACAC,QACAC,cACAC,SACAC,aACCZ,QAAQ,eACV,WAAO,IAAD,EACqBK,mBAAS,CAC/BQ,KAAM,GACNC,GAAI,KAHH,mBACIC,EADJ,KACUC,EADV,KAMH,SAASC,EAAaC,GAAM,IAAD,EAGrBA,EADFC,QAKY,GAFZC,EALuB,EAKvBA,GACAC,EANuB,EAMvBA,MAEFC,QAAQC,IAAI,wBAAyBH,EAAIC,EAAOH,GAChDF,EAAQ,2BAAKD,GAAN,kBACJK,EAAKC,KAIV,OAAO,YAAC,IAAD,CAAWG,IAAE,EAACxB,QAAQ,aACzB,YAAC,KAAD,CAAQyB,QAAQ,SAASzB,QAAQ,UAC7B,YAAC,IAAD,CAAaa,KAAM,CACrBO,GAAI,OACJM,MAAO,YACPL,MAAON,EAAKF,KACZc,IAAKZ,EAAKD,GACVc,SAAUX,GACTH,GAAI,CACLM,GAAI,KACJM,MAAO,UACPL,MAAON,EAAKD,GACZe,IAAKd,EAAKF,KACVe,SAAUX,EACVa,UAAWf,EAAKF,MACfb,QAAQ,iBAEX,YAAC,KAAD,CAAKA,QAAQ,OACT,YAAC,IAAD,CAAKwB,GAAI,EAAGxB,QAAQ,OAChB,kCADJ,KAC4Be,EAAKF,MAEjC,YAAC,IAAD,CAAKW,GAAI,EAAGxB,QAAQ,OAChB,gCADJ,KAC0Be,EAAKD,U,qMAU/CjB,EAAWkC,gBAAiB","file":"static/js/components-form-input-from-to-input-from-to.645a1171.js","sourcesContent":["\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport { useState } from 'react';\nimport { Playground, Props } from 'docz';\nimport {\n    InputFromTo,\n    Col,\n    Container,\n    Row,\n    Styled,\n} from '../../';\n\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"from--input-from-to\"\n    }}>{`From | Input From To`}</h1>\n    <h3 {...{\n      \"id\": \"\"\n    }}>{`...`}</h3>\n    <h2 {...{\n      \"id\": \"example\"\n    }}>{`Example`}</h2>\n    <Playground __position={0} __code={'() => {\\n  const [form, setForm] = useState({ from: \\'\\', to: \\'\\' })\\n  function handleChange(evt) {\\n    const { target } = evt\\n    const { id, value } = target || {}\\n    console.log(\\'INPUT FROM TO CHANGED\\', id, value, evt)\\n\\n    setForm({\\n      ...form,\\n      [id]: value,\\n    })\\n  }\\n\\n  return (\\n    <Container xs>\\n      <Styled padding=\\\"10px 0\\\">\\n        <InputFromTo\\n          from={{\\n            id: \\'from\\',\\n            label: \\'From date\\',\\n            value: form.from,\\n            max: form.to,\\n            onChange: handleChange,\\n          }}\\n          to={{\\n            id: \\'to\\',\\n            label: \\'To date\\',\\n            value: form.to,\\n            min: form.from,\\n            onChange: handleChange,\\n            disabled: !form.from,\\n          }}\\n        />\\n      </Styled>\\n      <Row>\\n        <Col xs={6}>\\n          <strong>from</strong>: {form.from}\\n        </Col>\\n        <Col xs={6}>\\n          <strong>to</strong>: {form.to}\\n        </Col>\\n      </Row>\\n    </Container>\\n  )\\n}'} __scope={{\n      props: this ? this.props : props,\n      useState,\n      Playground,\n      Props,\n      InputFromTo,\n      Col,\n      Container,\n      Row,\n      Styled\n    }} mdxType=\"Playground\">\n    {() => {\n        const [form, setForm] = useState({\n          from: '',\n          to: ''\n        });\n\n        function handleChange(evt) {\n          const {\n            target\n          } = evt;\n          const {\n            id,\n            value\n          } = target || {};\n          console.log('INPUT FROM TO CHANGED', id, value, evt);\n          setForm({ ...form,\n            [id]: value\n          });\n        }\n\n        return <Container xs mdxType=\"Container\">\n            <Styled padding=\"10px 0\" mdxType=\"Styled\">\n                <InputFromTo from={{\n              id: 'from',\n              label: 'From date',\n              value: form.from,\n              max: form.to,\n              onChange: handleChange\n            }} to={{\n              id: 'to',\n              label: 'To date',\n              value: form.to,\n              min: form.from,\n              onChange: handleChange,\n              disabled: !form.from\n            }} mdxType=\"InputFromTo\" />\n            </Styled>\n            <Row mdxType=\"Row\">\n                <Col xs={6} mdxType=\"Col\">\n                    <strong>from</strong>: {form.from}\n                </Col>\n                <Col xs={6} mdxType=\"Col\">\n                    <strong>to</strong>: {form.to}\n                </Col>\n            </Row>\n        </Container>;\n      }}\n    </Playground>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"],"sourceRoot":""}