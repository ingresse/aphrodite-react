{"version":3,"sources":["/home/udi/front/@aphrodite/src/utils/gradients/gradients.mdx"],"names":["layoutProps","MDXContent","components","props","mdxType","parentName","__position","__code","__scope","this","Playground","Row","Col","Segment","colors","gradients","gradientItemStyles","padding","margin","styles","fontSize","lineHeight","vertical","keys","map","gradientKey","index","gradient","palette","xs","sm","key","className","role","color","tabIndex","hoverable","background","backgroundLinear","start","end","isMDXComponent"],"mappings":"qkBASA,MAKMA,EAAc,GAIL,SAASC,EAAT,GAGX,IAFFC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,YALS,UAKT,iBAAeH,EAAiBG,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAE5E,iBAAQ,CACN,GAAM,wBADR,yBAGA,iBAAQ,CACN,GAAM,iEADR,kEAGA,iBAAQ,CACN,GAAM,SADR,SAGA,iBAAQ,CACN,GAAM,wGADR,OAEW,0BAAYC,WAAW,MAAvB,aAFX,6FAGA,uBAAK,kCAAMA,WAAW,OAAU,IAA3B,icAWL,iBAAQ,CACN,GAAM,YADR,YAGA,YAAC,IAAD,CAAYC,WAAY,EAAGC,OAAQ,moCAA8oCC,QAAS,CACxrCL,MAAOM,KAAOA,KAAKN,MAAQA,EAC3BO,eACAC,QACAC,QACAC,YACAC,WACAC,eACCX,QAAQ,cACV,KACG,MAAMY,EAAqB,CACzBC,QAAS,YACTC,OAAQ,UAEV,OAAO,YAAC,IAAD,CAASD,QAAQ,IAAIE,OAAQ,CAClCC,SAAU,OACVC,WAAY,QACXjB,QAAQ,WACP,YAAC,IAAD,CAAKkB,SAAS,QAAQlB,QAAQ,OACzBW,IAAUQ,KAAKC,IAAI,CAACC,EAAaC,KACpC,MAAMC,EAAWZ,IAAUa,QAAQH,GACnC,OAAO,YAAC,IAAD,CAAKI,GAAI,GAAIC,GAAI,EAAGC,IAAG,mBAAcL,GAAStB,QAAQ,OAC/C,YAAC,IAAD,CAAS4B,UAAU,YAAYC,KAAK,SAASC,MAAM,UAAUC,SAAQ,YAAOT,GAASU,WAAS,EAACjB,OAAM,2BAAOH,GAAP,IAC/GqB,WAAYtB,IAAUuB,iBAAiBb,EAAa,MACnDrB,QAAQ,WACK,+BACS,0BAASqB,IAElB,iCACYE,EAASY,OAErB,+BACUZ,EAASa,c,uLAanDvC,EAAWwC,gBAAiB","file":"static/js/utils-gradients-gradients.524157b4.js","sourcesContent":["\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsx mdx */\nimport { Playground } from 'docz';\nimport { Row, Col, Segment } from '../../components';\nimport { colors, gradients } from '../';\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component '\" + name + \"' was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"utilities--gradients\"\n    }}>{`Utilities | Gradients`}</h1>\n    <h3 {...{\n      \"id\": \"tools-to-made-easy-the-development-with-our-gradients-presets\"\n    }}>{`Tools to made easy the development with our gradients presets.`}</h3>\n    <h2 {...{\n      \"id\": \"usage\"\n    }}>{`Usage`}</h2>\n    <h4 {...{\n      \"id\": \"the-gradients-utility-will-help-you-to-get-the-desired-color-from-aphrodite-reacts-gradients-palette\"\n    }}>{`The `}<inlineCode parentName=\"h4\">{`gradients`}</inlineCode>{` utility will help you to get the desired color from Aphrodite React's Gradients Palette.`}</h4>\n    <pre><code parentName=\"pre\" {...{}}>{`import { gradients } from '@ingresse/aphrodite';\n\ngradients.palette; // All availables gradients palette.\ngradients.keys; // All availables gradients palette keys.\ngradients.list; // All availables gradients palette values.\n\ngradients.random();         // Get a random gradient start/end object.\ngradients.get('tangerine'); // Get specific gradient.\n\ngradients.backgroundLinear('tangerine', 45); // CSS string to apply as background.\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"examples\"\n    }}>{`Examples`}</h2>\n    <Playground __position={0} __code={'() => {\\n  const gradientItemStyles = {\\n    padding: \\'15px 20px\\',\\n    margin: \\'10px 0\\',\\n  }\\n  return (\\n    <Segment\\n      padding=\\\"0\\\"\\n      styles={{\\n        fontSize: \\'16px\\',\\n        lineHeight: \\'20px\\',\\n      }}\\n    >\\n      <Row vertical=\\\"start\\\">\\n        {gradients.keys.map((gradientKey, index) => {\\n          const gradient = gradients.palette[gradientKey]\\n\\n          return (\\n            <Col xs={12} sm={6} key={`gradient-${index}`}>\\n              <Segment\\n                className=\\\"aph-color\\\"\\n                role=\\\"button\\\"\\n                color=\\\"inverse\\\"\\n                tabIndex={`10${index}`}\\n                hoverable\\n                styles={{\\n                  ...gradientItemStyles,\\n                  background: gradients.backgroundLinear(gradientKey, 45),\\n                }}\\n              >\\n                <div>\\n                  key: <strong>{gradientKey}</strong>\\n                </div>\\n                <div>start: {gradient.start}</div>\\n                <div>end: {gradient.end}</div>\\n              </Segment>\\n            </Col>\\n          )\\n        })}\\n      </Row>\\n    </Segment>\\n  )\\n}'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Row,\n      Col,\n      Segment,\n      colors,\n      gradients\n    }} mdxType=\"Playground\">\n    {() => {\n        const gradientItemStyles = {\n          padding: '15px 20px',\n          margin: '10px 0'\n        };\n        return <Segment padding=\"0\" styles={{\n          fontSize: '16px',\n          lineHeight: '20px'\n        }} mdxType=\"Segment\">\n            <Row vertical=\"start\" mdxType=\"Row\">\n                {gradients.keys.map((gradientKey, index) => {\n              const gradient = gradients.palette[gradientKey];\n              return <Col xs={12} sm={6} key={`gradient-${index}`} mdxType=\"Col\">\n                            <Segment className=\"aph-color\" role=\"button\" color=\"inverse\" tabIndex={`10${index}`} hoverable styles={{ ...gradientItemStyles,\n                  background: gradients.backgroundLinear(gradientKey, 45)\n                }} mdxType=\"Segment\">\n                                <div>\n                                    key: <strong>{gradientKey}</strong>\n                                </div>\n                                <div>\n                                    start: {gradient.start}\n                                </div>\n                                <div>\n                                    end: {gradient.end}\n                                </div>\n                            </Segment>\n                        </Col>;\n            })}\n            </Row>\n        </Segment>;\n      }}\n    </Playground>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"],"sourceRoot":""}