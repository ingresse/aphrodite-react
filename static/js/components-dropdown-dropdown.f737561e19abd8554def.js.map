{"version":3,"sources":["/Users/udi/projects/front/aphrodite-react/src/components/Dropdown/Dropdown.mdx"],"names":["layoutProps","MDXLayout","MDXContent","_ref","components","props","Object","_Users_udi_projects_front_aphrodite_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_2__","_mdx_js_react__WEBPACK_IMPORTED_MODULE_4__","_Users_udi_projects_front_aphrodite_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__","mdxType","id","parentName","className","docz__WEBPACK_IMPORTED_MODULE_5__","of","Dropdown","__position","__code","__scope","this","useState","Playground","Props","Row","Col","Segment","H3","Button","Input","List","ListItem","style","padding","logClick","dropdownItemId","console","log","___WEBPACK_IMPORTED_MODULE_6__","xs","sm","styles","marginBottom","width","toggle","textAlign","center","up","right","thin","onClick","_useState","_useState2","_Users_udi_projects_front_aphrodite_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","dropdownVisible","setDropdownVisible","_useState3","_useState4","dropdownValue","setDropdownValue","toggleBlock","block","opened","label","tabIndex","value","onChange","evt","target","onBlur","onFocus","isMDXComponent"],"mappings":"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","file":"static/js/components-dropdown-dropdown.d7f834da.js","sourcesContent":["/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\nimport { useState } from 'react';\nimport { Playground, Props } from 'docz';\nimport { Dropdown, Row, Col, Segment, H3, Button, Input, List, ListItem } from '../';\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"dropdown\"\n    }}>{`Dropdown`}</h1>\n    <h4 {...{\n      \"id\": \"a-white-block-rounded-with-simple-shadow-effect-downing-from-some-other-component\"\n    }}>{`A white block, rounded, with simple shadow effect, downing from some other component.`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`import { Dropdown } from 'aphrodite-react';\n\n...\n\n<Dropdown>\n    Hello\n</Dropdown>\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"properties\"\n    }}>{`Properties`}</h2>\n    <Props of={Dropdown} mdxType=\"Props\" />\n    <h2 {...{\n      \"id\": \"examples\"\n    }}>{`Examples`}</h2>\n    <Playground __position={1} __code={'() => {\\n  function logClick(dropdownItemId) {\\n    console.log(\\'Dropdown Item click\\', dropdownItemId)\\n  }\\n  return (\\n    <Row>\\n      <Col xs={12} sm={3}>\\n        <Segment padding=\\\"20px 0\\\">\\n          <H3 styles={{ marginBottom: \\'25px\\' }}>Regular</H3>\\n          <Dropdown width=\\\"300px\\\" toggle=\\\"Regular Dropdown Toggle\\\">\\n            This is the regular dropdown content, with customized width\\n          </Dropdown>\\n        </Segment>\\n      </Col>\\n      <Col xs={12} sm={3}>\\n        <Segment padding=\\\"20px 0\\\" styles={{ textAlign: \\'center\\' }}>\\n          <H3 styles={{ marginBottom: \\'25px\\' }}>Center</H3>\\n          <Dropdown center toggle=\\\"Center Dropdown Toggle\\\">\\n            This is the regular dropdown content\\n          </Dropdown>\\n        </Segment>\\n      </Col>\\n      <Col xs={12} sm={3}>\\n        <Segment padding=\\\"20px 0\\\" styles={{ textAlign: \\'center\\' }}>\\n          <H3 styles={{ marginBottom: \\'25px\\' }}>Center Up</H3>\\n          <Dropdown up center toggle=\\\"Center Dropdown Toggle\\\">\\n            This is the regular dropdown content\\n          </Dropdown>\\n        </Segment>\\n      </Col>\\n      <Col xs={12} sm={3}>\\n        <Segment padding=\\\"20px 0\\\" styles={{ textAlign: \\'right\\' }}>\\n          <H3 styles={{ marginBottom: \\'25px\\' }}>Right</H3>\\n          <Dropdown right thin toggle=\\\"Right Dropdown Toggle\\\">\\n            <List>\\n              <ListItem onClick={() => logClick(\\'#A\\')}>\\n                Dropdown Item A\\n              </ListItem>\\n              <ListItem onClick={() => logClick(\\'#B\\')}>\\n                Dropdown Item B\\n              </ListItem>\\n            </List>\\n          </Dropdown>\\n        </Segment>\\n      </Col>\\n    </Row>\\n  )\\n}'} __scope={{\n      props: this ? this.props : props,\n      useState,\n      Playground,\n      Props,\n      Dropdown,\n      Row,\n      Col,\n      Segment,\n      H3,\n      Button,\n      Input,\n      List,\n      ListItem\n    }} style={{\n      padding: '20px'\n    }} mdxType=\"Playground\">\n    {() => {\n        function logClick(dropdownItemId) {\n          console.log('Dropdown Item click', dropdownItemId);\n        }\n\n        return <Row mdxType=\"Row\">\n            <Col xs={12} sm={3} mdxType=\"Col\">\n                <Segment padding=\"20px 0\" mdxType=\"Segment\">\n                    <H3 styles={{\n                marginBottom: '25px'\n              }} mdxType=\"H3\">\n                        Regular\n                    </H3>\n                    <Dropdown width=\"300px\" toggle=\"Regular Dropdown Toggle\" mdxType=\"Dropdown\">\n                        This is the regular dropdown content, with customized width\n                    </Dropdown>\n                </Segment>\n            </Col>\n            <Col xs={12} sm={3} mdxType=\"Col\">\n                <Segment padding=\"20px 0\" styles={{\n              textAlign: 'center'\n            }} mdxType=\"Segment\">\n                    <H3 styles={{\n                marginBottom: '25px'\n              }} mdxType=\"H3\">\n                        Center\n                    </H3>\n                    <Dropdown center toggle=\"Center Dropdown Toggle\" mdxType=\"Dropdown\">\n                        This is the regular dropdown content\n                    </Dropdown>\n                </Segment>\n            </Col>\n            <Col xs={12} sm={3} mdxType=\"Col\">\n                <Segment padding=\"20px 0\" styles={{\n              textAlign: 'center'\n            }} mdxType=\"Segment\">\n                    <H3 styles={{\n                marginBottom: '25px'\n              }} mdxType=\"H3\">\n                        Center Up\n                    </H3>\n                    <Dropdown up center toggle=\"Center Dropdown Toggle\" mdxType=\"Dropdown\">\n                        This is the regular dropdown content\n                    </Dropdown>\n                </Segment>\n            </Col>\n            <Col xs={12} sm={3} mdxType=\"Col\">\n                <Segment padding=\"20px 0\" styles={{\n              textAlign: 'right'\n            }} mdxType=\"Segment\">\n                    <H3 styles={{\n                marginBottom: '25px'\n              }} mdxType=\"H3\">\n                        Right\n                    </H3>\n                    <Dropdown right thin toggle=\"Right Dropdown Toggle\" mdxType=\"Dropdown\">\n                        <List mdxType=\"List\">\n                            <ListItem onClick={() => logClick('#A')} mdxType=\"ListItem\">\n                                Dropdown Item A\n                            </ListItem>\n                            <ListItem onClick={() => logClick('#B')} mdxType=\"ListItem\">\n                                Dropdown Item B\n                            </ListItem>\n                        </List>\n                    </Dropdown>\n                </Segment>\n            </Col>\n        </Row>;\n      }}\n    </Playground>\n    <h2 {...{\n      \"id\": \"advanced-examples\"\n    }}>{`Advanced Examples`}</h2>\n    <Playground __position={2} __code={'() => {\\n  const [dropdownVisible, setDropdownVisible] = useState(false)\\n  const [dropdownValue, setDropdownValue] = useState(\\'Dropdown Item B\\')\\n  return (\\n    <Row>\\n      <Col xs={12} sm={6}>\\n        <Segment padding=\\\"20px 0\\\">\\n          <H3 styles={{ marginBottom: \\'25px\\' }}>Custom Toggle</H3>\\n          <Dropdown\\n            width=\\\"300px\\\"\\n            toggleBlock\\n            toggle={<Button block>Custom Toggle</Button>}\\n          >\\n            This is the dropdown content, triggered by a custom toggle\\n          </Dropdown>\\n        </Segment>\\n      </Col>\\n      <Col xs={12} sm={6}>\\n        <Segment padding=\\\"20px 0\\\">\\n          <H3 styles={{ marginBottom: \\'25px\\' }}>Focus</H3>\\n          <Dropdown\\n            thin\\n            opened={dropdownVisible}\\n            toggleBlock\\n            toggle={\\n              <Input\\n                id=\\\"MyInputAsDropdownToggle\\\"\\n                label=\\\"Selecting a Value from Dropdown\\\"\\n                tabIndex={20}\\n                value={dropdownValue}\\n                onChange={evt => setDropdownValue(evt.target.value || \\'\\')}\\n                onBlur={() => {\\n                  setDropdownVisible(false)\\n                }}\\n                onFocus={() => {\\n                  setDropdownVisible(true)\\n                }}\\n              />\\n            }\\n          >\\n            <List>\\n              <ListItem>Type or Select one option</ListItem>\\n              <ListItem\\n                className={\\n                  dropdownValue === \\'Dropdown Item A\\' ? \\'active\\' : \\'\\'\\n                }\\n                onClick={() => setDropdownValue(\\'Dropdown Item A\\')}\\n              >\\n                Dropdown Item A\\n              </ListItem>\\n              <ListItem\\n                className={\\n                  dropdownValue === \\'Dropdown Item B\\' ? \\'active\\' : \\'\\'\\n                }\\n                onClick={() => setDropdownValue(\\'Dropdown Item B\\')}\\n              >\\n                Dropdown Item B\\n              </ListItem>\\n            </List>\\n          </Dropdown>\\n        </Segment>\\n      </Col>\\n    </Row>\\n  )\\n}'} __scope={{\n      props: this ? this.props : props,\n      useState,\n      Playground,\n      Props,\n      Dropdown,\n      Row,\n      Col,\n      Segment,\n      H3,\n      Button,\n      Input,\n      List,\n      ListItem\n    }} style={{\n      padding: '20px'\n    }} mdxType=\"Playground\">\n    {() => {\n        const [dropdownVisible, setDropdownVisible] = useState(false);\n        const [dropdownValue, setDropdownValue] = useState('Dropdown Item B');\n        return <Row mdxType=\"Row\">\n            <Col xs={12} sm={6} mdxType=\"Col\">\n                <Segment padding=\"20px 0\" mdxType=\"Segment\">\n                    <H3 styles={{\n                marginBottom: '25px'\n              }} mdxType=\"H3\">\n                        Custom Toggle\n                    </H3>\n                    <Dropdown width=\"300px\" toggleBlock toggle={<Button block mdxType=\"Button\">\n                                Custom Toggle\n                            </Button>} mdxType=\"Dropdown\">\n                        This is the dropdown content, triggered by a custom toggle\n                    </Dropdown>\n                </Segment>\n            </Col>\n            <Col xs={12} sm={6} mdxType=\"Col\">\n                <Segment padding=\"20px 0\" mdxType=\"Segment\">\n                    <H3 styles={{\n                marginBottom: '25px'\n              }} mdxType=\"H3\">\n                        Focus\n                    </H3>\n                    <Dropdown thin opened={dropdownVisible} toggleBlock toggle={<Input id=\"MyInputAsDropdownToggle\" label=\"Selecting a Value from Dropdown\" tabIndex={20} value={dropdownValue} onChange={evt => setDropdownValue(evt.target.value || '')} onBlur={() => {\n                setDropdownVisible(false);\n              }} onFocus={() => {\n                setDropdownVisible(true);\n              }} mdxType=\"Input\" />} mdxType=\"Dropdown\">\n                        <List mdxType=\"List\">\n                            <ListItem mdxType=\"ListItem\">\n                                Type or Select one option\n                            </ListItem>\n                            <ListItem className={dropdownValue === 'Dropdown Item A' ? 'active' : ''} onClick={() => setDropdownValue('Dropdown Item A')} mdxType=\"ListItem\">\n                                Dropdown Item A\n                            </ListItem>\n                            <ListItem className={dropdownValue === 'Dropdown Item B' ? 'active' : ''} onClick={() => setDropdownValue('Dropdown Item B')} mdxType=\"ListItem\">\n                                Dropdown Item B\n                            </ListItem>\n                        </List>\n                    </Dropdown>\n                </Segment>\n            </Col>\n        </Row>;\n      }}\n    </Playground>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\n  "],"sourceRoot":""}