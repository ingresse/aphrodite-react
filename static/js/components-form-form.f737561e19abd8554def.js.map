{"version":3,"sources":["/Users/udi/projects/front/aphrodite-react/src/components/Form/Form.mdx"],"names":["name","layoutProps","MDXLayout","MDXContent","_ref","components","props","Object","_Users_udi_projects_front_aphrodite_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_2__","_mdx_js_react__WEBPACK_IMPORTED_MODULE_4__","_Users_udi_projects_front_aphrodite_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__","mdxType","id","docz__WEBPACK_IMPORTED_MODULE_5__","of","Input","__position","__code","__scope","this","useEffect","useState","Playground","Props","InputNumber","InputCurrency","Select","TextArea","Checkbox","Switch","Card","Segment","Placeholder","Row","Col","___WEBPACK_IMPORTED_MODULE_6__","type","label","placeholder","value","error","errorMessage","disabled","parentName","href","onChange","inputValue","console","log","evt","floatValue","maskedValue","_useState","_useState2","_Users_udi_projects_front_aphrodite_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","setValue","setTimeout","target","xs","styles","margin","right","_useState3","_useState4","col","setCol","_useState5","_useState6","text","setText","_useState7","_useState8","setDisabled","_useState9","_useState10","textAlign","setTextAlign","_useState11","_useState12","textSmall","setTextSmall","_useState13","_useState14","toggleAlign","setToggleAlign","BreakPointToggle","block","height","cursor","title","concat","size","onClick","padding","window","innerWidth","horizontal","sm","md","e","defaultChecked","checked","isMDXComponent"],"mappings":"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","file":"static/js/components-form-form.de85e946.js","sourcesContent":["/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\nimport { useEffect, useState } from 'react';\nimport { Playground, Props } from 'docz';\nimport { Input, InputNumber, InputCurrency, Select, TextArea, Checkbox, Switch, Card, Segment, Placeholder, Row, Col } from '../';\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\nconst BreakPointToggle = makeShortcode(\"BreakPointToggle\");\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"form\"\n    }}>{`Form`}</h1>\n    <h4 {...{\n      \"id\": \"form-components\"\n    }}>{`Form components`}</h4>\n    <hr></hr>\n    <h2 {...{\n      \"id\": \"input\"\n    }}>{`Input`}</h2>\n    <Props of={Input} mdxType=\"Props\" />\n    <h3 {...{\n      \"id\": \"examples\"\n    }}>{`Examples`}</h3>\n    <Playground __position={1} __code={'<Input type=\\\"text\\\" id=\\\"ExampleInputWithoutPlaceholder\\\" label=\\\"Field Label\\\" />'} __scope={{\n      props: this ? this.props : props,\n      useEffect,\n      useState,\n      Playground,\n      Props,\n      Input,\n      InputNumber,\n      InputCurrency,\n      Select,\n      TextArea,\n      Checkbox,\n      Switch,\n      Card,\n      Segment,\n      Placeholder,\n      Row,\n      Col\n    }} mdxType=\"Playground\">\n    <Input type=\"text\" id=\"ExampleInputWithoutPlaceholder\" label=\"Field Label\" mdxType=\"Input\" />\n    </Playground>\n    <Playground __position={2} __code={'<Input\\n  type=\\\"text\\\"\\n  id=\\\"ExampleInputWithPlaceholder\\\"\\n  placeholder=\\\"Field Placeholder\\\"\\n/>'} __scope={{\n      props: this ? this.props : props,\n      useEffect,\n      useState,\n      Playground,\n      Props,\n      Input,\n      InputNumber,\n      InputCurrency,\n      Select,\n      TextArea,\n      Checkbox,\n      Switch,\n      Card,\n      Segment,\n      Placeholder,\n      Row,\n      Col\n    }} mdxType=\"Playground\">\n    <Input type=\"text\" id=\"ExampleInputWithPlaceholder\" placeholder=\"Field Placeholder\" mdxType=\"Input\" />\n    </Playground>\n    <Playground __position={3} __code={'<Input\\n  type=\\\"text\\\"\\n  id=\\\"ExampleInput\\\"\\n  label=\\\"Field Label\\\"\\n  placeholder=\\\"Field Placeholder\\\"\\n/>'} __scope={{\n      props: this ? this.props : props,\n      useEffect,\n      useState,\n      Playground,\n      Props,\n      Input,\n      InputNumber,\n      InputCurrency,\n      Select,\n      TextArea,\n      Checkbox,\n      Switch,\n      Card,\n      Segment,\n      Placeholder,\n      Row,\n      Col\n    }} mdxType=\"Playground\">\n    <Input type=\"text\" id=\"ExampleInput\" label=\"Field Label\" placeholder=\"Field Placeholder\" mdxType=\"Input\" />\n    </Playground>\n    <Playground __position={4} __code={'<Input\\n  type=\\\"text\\\"\\n  id=\\\"ExampleInputError\\\"\\n  value=\\\"With error\\\"\\n  label=\\\"Field Label\\\"\\n  placeholder=\\\"Field Placeholder\\\"\\n  error\\n/>'} __scope={{\n      props: this ? this.props : props,\n      useEffect,\n      useState,\n      Playground,\n      Props,\n      Input,\n      InputNumber,\n      InputCurrency,\n      Select,\n      TextArea,\n      Checkbox,\n      Switch,\n      Card,\n      Segment,\n      Placeholder,\n      Row,\n      Col\n    }} mdxType=\"Playground\">\n    <Input type=\"text\" id=\"ExampleInputError\" value=\"With error\" label=\"Field Label\" placeholder=\"Field Placeholder\" error mdxType=\"Input\" />\n    </Playground>\n    <Playground __position={5} __code={'<Input\\n  type=\\\"text\\\"\\n  id=\\\"ExampleInputErrorWithMsg\\\"\\n  value=\\\"With error\\\"\\n  label=\\\"Field Label\\\"\\n  placeholder=\\\"Field Placeholder\\\"\\n  error\\n  errorMessage=\\\"And with error message\\\"\\n/>'} __scope={{\n      props: this ? this.props : props,\n      useEffect,\n      useState,\n      Playground,\n      Props,\n      Input,\n      InputNumber,\n      InputCurrency,\n      Select,\n      TextArea,\n      Checkbox,\n      Switch,\n      Card,\n      Segment,\n      Placeholder,\n      Row,\n      Col\n    }} mdxType=\"Playground\">\n    <Input type=\"text\" id=\"ExampleInputErrorWithMsg\" value=\"With error\" label=\"Field Label\" placeholder=\"Field Placeholder\" error errorMessage=\"And with error message\" mdxType=\"Input\" />\n    </Playground>\n    <Playground __position={6} __code={'<Input\\n  type=\\\"text\\\"\\n  id=\\\"ExampleInputErrorWithMsg\\\"\\n  value=\\\"With error and disabled\\\"\\n  label=\\\"Field Label\\\"\\n  placeholder=\\\"Field Placeholder\\\"\\n  error\\n  errorMessage=\\\"And with error message\\\"\\n  disabled\\n/>'} __scope={{\n      props: this ? this.props : props,\n      useEffect,\n      useState,\n      Playground,\n      Props,\n      Input,\n      InputNumber,\n      InputCurrency,\n      Select,\n      TextArea,\n      Checkbox,\n      Switch,\n      Card,\n      Segment,\n      Placeholder,\n      Row,\n      Col\n    }} mdxType=\"Playground\">\n    <Input type=\"text\" id=\"ExampleInputErrorWithMsg\" value=\"With error and disabled\" label=\"Field Label\" placeholder=\"Field Placeholder\" error errorMessage=\"And with error message\" disabled mdxType=\"Input\" />\n    </Playground>\n    <hr></hr>\n    <h2 {...{\n      \"id\": \"input-number\"\n    }}>{`Input Number`}</h2>\n    <h4 {...{\n      \"id\": \"simple-customization-of-awesome-react-input-number-component-to-support-only-numbers\"\n    }}>{`Simple customization of awesome `}<a parentName=\"h4\" {...{\n        \"href\": \"https://www.npmjs.com/package/react-input-number\"\n      }}>{`react-input-number`}</a>{` component, to support only numbers.`}</h4>\n    <Props of={InputNumber} mdxType=\"Props\" />\n    <h3 {...{\n      \"id\": \"examples-1\"\n    }}>{`Examples`}</h3>\n    <Playground __position={8} __code={'() => {\\n  function handleChange(inputValue) {\\n    console.log(\\'Input Number changed\\', inputValue)\\n  }\\n  return (\\n    <InputNumber\\n      id=\\\"ExampleInputNumber\\\"\\n      label=\\\"Field Label\\\"\\n      onChange={handleChange}\\n    />\\n  )\\n}'} __scope={{\n      props: this ? this.props : props,\n      useEffect,\n      useState,\n      Playground,\n      Props,\n      Input,\n      InputNumber,\n      InputCurrency,\n      Select,\n      TextArea,\n      Checkbox,\n      Switch,\n      Card,\n      Segment,\n      Placeholder,\n      Row,\n      Col\n    }} mdxType=\"Playground\">\n    {() => {\n        function handleChange(inputValue) {\n          console.log('Input Number changed', inputValue);\n        }\n\n        return <InputNumber id=\"ExampleInputNumber\" label=\"Field Label\" onChange={handleChange} mdxType=\"InputNumber\" />;\n      }}\n    </Playground>\n    <hr></hr>\n    <h2 {...{\n      \"id\": \"input-currency\"\n    }}>{`Input Currency`}</h2>\n    <h4 {...{\n      \"id\": \"simple-customization-of-awesome-react-currency-input-component\"\n    }}>{`Simple customization of awesome `}<a parentName=\"h4\" {...{\n        \"href\": \"https://github.com/jsillitoe/react-currency-input\"\n      }}>{`react-currency-input`}</a>{` component.`}</h4>\n    <Props of={InputCurrency} mdxType=\"Props\" />\n    <h3 {...{\n      \"id\": \"example\"\n    }}>{`Example`}</h3>\n    <Playground __position={10} __code={'() => {\\n  function handleChange(evt, floatValue, maskedValue) {\\n    console.log(\\'Input Currency changed\\', floatValue, maskedValue)\\n  }\\n  return (\\n    <InputCurrency\\n      id=\\\"ExampleInputCurrency\\\"\\n      label=\\\"Field Label\\\"\\n      onChange={handleChange}\\n      value={0}\\n    />\\n  )\\n}'} __scope={{\n      props: this ? this.props : props,\n      useEffect,\n      useState,\n      Playground,\n      Props,\n      Input,\n      InputNumber,\n      InputCurrency,\n      Select,\n      TextArea,\n      Checkbox,\n      Switch,\n      Card,\n      Segment,\n      Placeholder,\n      Row,\n      Col\n    }} mdxType=\"Playground\">\n    {() => {\n        function handleChange(evt, floatValue, maskedValue) {\n          console.log('Input Currency changed', floatValue, maskedValue);\n        }\n\n        return <InputCurrency id=\"ExampleInputCurrency\" label=\"Field Label\" onChange={handleChange} value={0} mdxType=\"InputCurrency\" />;\n      }}\n    </Playground>\n    <hr></hr>\n    <h2 {...{\n      \"id\": \"select\"\n    }}>{`Select`}</h2>\n    <Props of={Select} mdxType=\"Props\" />\n    <h3 {...{\n      \"id\": \"examples-2\"\n    }}>{`Examples`}</h3>\n    <Playground __position={12} __code={'<Select label=\\\"Select Label\\\">\\n  <option value=\\\"\\\"></option>\\n  <option value=\\\"ingresse\\\">Ingresse</option>\\n  <option value=\\\"aphrodite\\\">Aphrodite</option>\\n  <option value=\\\"react\\\">React</option>\\n</Select>'} __scope={{\n      props: this ? this.props : props,\n      useEffect,\n      useState,\n      Playground,\n      Props,\n      Input,\n      InputNumber,\n      InputCurrency,\n      Select,\n      TextArea,\n      Checkbox,\n      Switch,\n      Card,\n      Segment,\n      Placeholder,\n      Row,\n      Col\n    }} mdxType=\"Playground\">\n    <Select label=\"Select Label\" mdxType=\"Select\">\n        <option value=\"\"></option>\n        <option value=\"ingresse\">Ingresse</option>\n        <option value=\"aphrodite\">Aphrodite</option>\n        <option value=\"react\">React</option>\n    </Select>\n    </Playground>\n    <h4 {...{\n      \"id\": \"delayed\"\n    }}>{`Delayed`}</h4>\n    <Playground __position={13} __code={'() => {\\n  const [value, setValue] = useState(\\'\\')\\n  useEffect(() => {\\n    setTimeout(() => {\\n      setValue(\\'aphrodite\\')\\n    }, 2500)\\n  }, [])\\n\\n  function handleChange(evt) {\\n    setValue(evt.target.value)\\n  }\\n\\n  return (\\n    <Select label=\\\"Select Label\\\" value={value} onChange={handleChange}>\\n      <option value=\\\"\\\"></option>\\n      <option value=\\\"ingresse\\\">Ingresse</option>\\n      <option value=\\\"aphrodite\\\">Aphrodite</option>\\n      <option value=\\\"react\\\">React</option>\\n    </Select>\\n  )\\n}'} __scope={{\n      props: this ? this.props : props,\n      useEffect,\n      useState,\n      Playground,\n      Props,\n      Input,\n      InputNumber,\n      InputCurrency,\n      Select,\n      TextArea,\n      Checkbox,\n      Switch,\n      Card,\n      Segment,\n      Placeholder,\n      Row,\n      Col\n    }} mdxType=\"Playground\">\n    {() => {\n        const [value, setValue] = useState('');\n        useEffect(() => {\n          setTimeout(() => {\n            setValue('aphrodite');\n          }, 2500);\n        }, []);\n\n        function handleChange(evt) {\n          setValue(evt.target.value);\n        }\n\n        return <Select label=\"Select Label\" value={value} onChange={handleChange} mdxType=\"Select\">\n            <option value=\"\"></option>\n            <option value=\"ingresse\">Ingresse</option>\n            <option value=\"aphrodite\">Aphrodite</option>\n            <option value=\"react\">React</option>\n        </Select>;\n      }}\n    </Playground>\n    <hr></hr>\n    <h2 {...{\n      \"id\": \"textarea\"\n    }}>{`TextArea`}</h2>\n    <Props of={TextArea} mdxType=\"Props\" />\n    <h3 {...{\n      \"id\": \"examples-3\"\n    }}>{`Examples`}</h3>\n    <Playground __position={15} __code={'<TextArea\\n  id=\\\"ExampleTextAreaWithoutPlaceholder\\\"\\n  label=\\\"TextArea Label\\\"\\n></TextArea>'} __scope={{\n      props: this ? this.props : props,\n      useEffect,\n      useState,\n      Playground,\n      Props,\n      Input,\n      InputNumber,\n      InputCurrency,\n      Select,\n      TextArea,\n      Checkbox,\n      Switch,\n      Card,\n      Segment,\n      Placeholder,\n      Row,\n      Col\n    }} mdxType=\"Playground\">\n    <TextArea id=\"ExampleTextAreaWithoutPlaceholder\" label=\"TextArea Label\" mdxType=\"TextArea\">\n    </TextArea>\n    </Playground>\n    <hr></hr>\n    <h2 {...{\n      \"id\": \"checkbox\"\n    }}>{`Checkbox`}</h2>\n    <Props of={Checkbox} mdxType=\"Props\" />\n    <h3 {...{\n      \"id\": \"examples-4\"\n    }}>{`Examples`}</h3>\n    <Playground __position={17} __code={'<Row>\\n  <Col xs={6} styles={{ margin: \\'10px 0\\' }}>\\n    <Checkbox id=\\\"ExampleCheckbox\\\">regular checkbox</Checkbox>\\n  </Col>\\n  <Col xs={6} styles={{ margin: \\'10px 0\\' }}>\\n    <Checkbox id=\\\"ExampleCheckboxRight\\\" right>\\n      aligned checkbox\\n    </Checkbox>\\n  </Col>\\n</Row>'} __scope={{\n      props: this ? this.props : props,\n      useEffect,\n      useState,\n      Playground,\n      Props,\n      Input,\n      InputNumber,\n      InputCurrency,\n      Select,\n      TextArea,\n      Checkbox,\n      Switch,\n      Card,\n      Segment,\n      Placeholder,\n      Row,\n      Col\n    }} mdxType=\"Playground\">\n    <Row mdxType=\"Row\">\n        <Col xs={6} styles={{\n          margin: '10px 0'\n        }} mdxType=\"Col\">\n            <Checkbox id=\"ExampleCheckbox\" mdxType=\"Checkbox\">\n                regular checkbox\n            </Checkbox>\n        </Col>\n        <Col xs={6} styles={{\n          margin: '10px 0'\n        }} mdxType=\"Col\">\n            <Checkbox id=\"ExampleCheckboxRight\" right mdxType=\"Checkbox\">\n                aligned checkbox\n            </Checkbox>\n        </Col>\n    </Row>\n    </Playground>\n    <hr></hr>\n    <h2 {...{\n      \"id\": \"switch\"\n    }}>{`Switch`}</h2>\n    <Props of={Switch} mdxType=\"Props\" />\n    <h3 {...{\n      \"id\": \"example-1\"\n    }}>{`Example`}</h3>\n    <Playground __position={19} __code={'() => {\\n  const [col, setCol] = useState(4)\\n  const [text, setText] = useState(\\'Switch Text\\')\\n  const [disabled, setDisabled] = useState(false)\\n  const [textAlign, setTextAlign] = useState(false)\\n  const [textSmall, setTextSmall] = useState(false)\\n  const [toggleAlign, setToggleAlign] = useState(false)\\n  const BreakPointToggle = props => (\\n    <Placeholder\\n      {...props}\\n      block\\n      height={20}\\n      styles={{ cursor: \\'pointer\\' }}\\n      title={`Toggle width to ${props.size} columns`}\\n      onClick={() => setCol(props.size)}\\n    />\\n  )\\n\\n  return (\\n    <Segment padding=\\\"0\\\">\\n      {window.innerWidth < 768 ? null : (\\n        <Segment padding=\\\"0 0 10px\\\">\\n          <Row horizontal=\\\"center\\\">\\n            <Col xs={12} sm={2}>\\n              <BreakPointToggle size={12} />\\n            </Col>\\n            <Col xs={12} sm={2}>\\n              <BreakPointToggle size={8} />\\n            </Col>\\n            <Col xs={12} sm={4}>\\n              <BreakPointToggle size={4} />\\n            </Col>\\n            <Col xs={12} sm={2}>\\n              <BreakPointToggle size={8} />\\n            </Col>\\n            <Col xs={12} sm={2}>\\n              <BreakPointToggle size={12} />\\n            </Col>\\n          </Row>\\n        </Segment>\\n      )}\\n\\n      <Segment padding=\\\"20px 0\\\">\\n        <Row horizontal=\\\"center\\\">\\n          <Col xs={12} sm={col}>\\n            <Card>\\n              <Switch\\n                disabled={disabled}\\n                textSmall={textSmall}\\n                textAlign={textAlign ? \\'right\\' : \\'left\\'}\\n                toggleAlign={toggleAlign ? \\'right\\' : \\'left\\'}\\n              >\\n                {text}\\n              </Switch>\\n            </Card>\\n          </Col>\\n        </Row>\\n\\n        <Segment padding=\\\"40px 0\\\">\\n          <Row horizontal=\\\"center\\\">\\n            <Col xs={12} sm={12} md={9}>\\n              <Segment padding=\\\"10px 0\\\">\\n                <Input\\n                  type=\\\"text\\\"\\n                  label=\\\"Switch Label Text\\\"\\n                  placeholder=\\\"Type something...\\\"\\n                  value={text}\\n                  onChange={e => setText(e.target.value)}\\n                />\\n              </Segment>\\n            </Col>\\n          </Row>\\n\\n          <Row horizontal=\\\"center\\\">\\n            <Col xs={6} sm={6} md={3}>\\n              <Segment padding=\\\"10px 0\\\">\\n                <Checkbox\\n                  id=\\\"switchToggleAlign\\\"\\n                  value={toggleAlign ? \\'right\\' : \\'left\\'}\\n                  defaultChecked={toggleAlign}\\n                  onChange={e =>\\n                    setToggleAlign(e.target.checked ? true : false)\\n                  }\\n                >\\n                  Align toggle at right\\n                </Checkbox>\\n              </Segment>\\n            </Col>\\n\\n            <Col xs={6} sm={6} md={3}>\\n              <Segment padding=\\\"10px 0\\\">\\n                <Checkbox\\n                  id=\\\"switchTextAlign\\\"\\n                  value={textAlign ? \\'right\\' : \\'left\\'}\\n                  defaultChecked={textAlign}\\n                  onChange={e =>\\n                    setTextAlign(e.target.checked ? true : false)\\n                  }\\n                >\\n                  Align text at right\\n                </Checkbox>\\n              </Segment>\\n            </Col>\\n\\n            <Col xs={6} sm={6} md={3}>\\n              <Segment padding=\\\"10px 0\\\">\\n                <Checkbox\\n                  id=\\\"switchTextSmall\\\"\\n                  value={textSmall ? true : false}\\n                  defaultChecked={textSmall}\\n                  onChange={e =>\\n                    setTextSmall(e.target.checked ? true : false)\\n                  }\\n                >\\n                  Text small\\n                </Checkbox>\\n              </Segment>\\n            </Col>\\n\\n            <Col xs={6} sm={6} md={3}>\\n              <Segment padding=\\\"10px 0\\\">\\n                <Checkbox\\n                  id=\\\"switchDisabled\\\"\\n                  value={disabled ? true : false}\\n                  defaultChecked={disabled}\\n                  onChange={e => setDisabled(e.target.checked ? true : false)}\\n                >\\n                  Disabled\\n                </Checkbox>\\n              </Segment>\\n            </Col>\\n          </Row>\\n        </Segment>\\n      </Segment>\\n    </Segment>\\n  )\\n}'} __scope={{\n      props: this ? this.props : props,\n      useEffect,\n      useState,\n      Playground,\n      Props,\n      Input,\n      InputNumber,\n      InputCurrency,\n      Select,\n      TextArea,\n      Checkbox,\n      Switch,\n      Card,\n      Segment,\n      Placeholder,\n      Row,\n      Col\n    }} mdxType=\"Playground\">\n    {() => {\n        const [col, setCol] = useState(4);\n        const [text, setText] = useState('Switch Text');\n        const [disabled, setDisabled] = useState(false);\n        const [textAlign, setTextAlign] = useState(false);\n        const [textSmall, setTextSmall] = useState(false);\n        const [toggleAlign, setToggleAlign] = useState(false);\n\n        const BreakPointToggle = props => <Placeholder {...props} block height={20} styles={{\n          cursor: 'pointer'\n        }} title={`Toggle width to ${props.size} columns`} onClick={() => setCol(props.size)} mdxType=\"Placeholder\" />;\n\n        return <Segment padding=\"0\" mdxType=\"Segment\">\n            {window.innerWidth < 768 ? null : <Segment padding=\"0 0 10px\" mdxType=\"Segment\">\n                    <Row horizontal=\"center\" mdxType=\"Row\">\n                        <Col xs={12} sm={2} mdxType=\"Col\">\n                            <BreakPointToggle size={12} mdxType=\"BreakPointToggle\" />\n                        </Col>\n                        <Col xs={12} sm={2} mdxType=\"Col\">\n                            <BreakPointToggle size={8} mdxType=\"BreakPointToggle\" />\n                        </Col>\n                        <Col xs={12} sm={4} mdxType=\"Col\">\n                            <BreakPointToggle size={4} mdxType=\"BreakPointToggle\" />\n                        </Col>\n                        <Col xs={12} sm={2} mdxType=\"Col\">\n                            <BreakPointToggle size={8} mdxType=\"BreakPointToggle\" />\n                        </Col>\n                        <Col xs={12} sm={2} mdxType=\"Col\">\n                            <BreakPointToggle size={12} mdxType=\"BreakPointToggle\" />\n                        </Col>\n                    </Row>\n                </Segment>}\n\n            <Segment padding=\"20px 0\" mdxType=\"Segment\">\n                <Row horizontal=\"center\" mdxType=\"Row\">\n                    <Col xs={12} sm={col} mdxType=\"Col\">\n                        <Card mdxType=\"Card\">\n                            <Switch disabled={disabled} textSmall={textSmall} textAlign={textAlign ? 'right' : 'left'} toggleAlign={toggleAlign ? 'right' : 'left'} mdxType=\"Switch\">\n                                {text}\n                            </Switch>\n                        </Card>\n                    </Col>\n                </Row>\n\n                <Segment padding=\"40px 0\" mdxType=\"Segment\">\n                    <Row horizontal=\"center\" mdxType=\"Row\">\n                        <Col xs={12} sm={12} md={9} mdxType=\"Col\">\n                            <Segment padding=\"10px 0\" mdxType=\"Segment\">\n                                <Input type=\"text\" label=\"Switch Label Text\" placeholder=\"Type something...\" value={text} onChange={e => setText(e.target.value)} mdxType=\"Input\" />\n                            </Segment>\n                        </Col>\n                    </Row>\n\n                    <Row horizontal=\"center\" mdxType=\"Row\">\n                        <Col xs={6} sm={6} md={3} mdxType=\"Col\">\n                            <Segment padding=\"10px 0\" mdxType=\"Segment\">\n                                <Checkbox id=\"switchToggleAlign\" value={toggleAlign ? 'right' : 'left'} defaultChecked={toggleAlign} onChange={e => setToggleAlign(e.target.checked ? true : false)} mdxType=\"Checkbox\">\n                                    Align toggle at right\n                                </Checkbox>\n                            </Segment>\n                        </Col>\n\n                        <Col xs={6} sm={6} md={3} mdxType=\"Col\">\n                            <Segment padding=\"10px 0\" mdxType=\"Segment\">\n                                <Checkbox id=\"switchTextAlign\" value={textAlign ? 'right' : 'left'} defaultChecked={textAlign} onChange={e => setTextAlign(e.target.checked ? true : false)} mdxType=\"Checkbox\">\n                                    Align text at right\n                                </Checkbox>\n                            </Segment>\n                        </Col>\n\n                        <Col xs={6} sm={6} md={3} mdxType=\"Col\">\n                            <Segment padding=\"10px 0\" mdxType=\"Segment\">\n                                <Checkbox id=\"switchTextSmall\" value={textSmall ? true : false} defaultChecked={textSmall} onChange={e => setTextSmall(e.target.checked ? true : false)} mdxType=\"Checkbox\">\n                                    Text small\n                                </Checkbox>\n                            </Segment>\n                        </Col>\n\n                        <Col xs={6} sm={6} md={3} mdxType=\"Col\">\n                            <Segment padding=\"10px 0\" mdxType=\"Segment\">\n                                <Checkbox id=\"switchDisabled\" value={disabled ? true : false} defaultChecked={disabled} onChange={e => setDisabled(e.target.checked ? true : false)} mdxType=\"Checkbox\">\n                                    Disabled\n                                </Checkbox>\n                            </Segment>\n                        </Col>\n                    </Row>\n                </Segment>\n            </Segment>\n        </Segment>;\n      }}\n    </Playground>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\n  "],"sourceRoot":""}