{"version":3,"sources":["/home/udi/projects/aphrodite/src/components/Form/InputDateFallback/InputDateFallback.mdx"],"names":["layoutProps","MDXContent","components","props","mdxType","parentName","__position","__code","__scope","this","memo","useState","Playground","Props","dayjs","InputDateFallback","Styled","Row","Col","example","setExample","as","xs","sm","padding","id","value","onChange","target","label","JSON","stringify","min","add","today","vertical","format","max","subtract","setMin","setMax","of","isMDXComponent"],"mappings":"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","file":"static/js/components-form-input-date-fallback-input-date-fallback.c2b8eaab.js","sourcesContent":["\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport { memo, useState } from 'react';\nimport { Playground, Props } from 'docz';\nimport dayjs from 'dayjs';\nimport {\n    InputDateFallback,\n    Styled,\n    Row,\n    Col,\n} from '../../';\n\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"form--input-date-fallback\"\n    }}>{`Form | Input Date (Fallback)`}</h1>\n    <h3 {...{\n      \"id\": \"a-simple-alternative-to-manage-input-date\"\n    }}>{`A simple alternative to manage input date.`}</h3>\n    <p>{`It's used as fallback of DatePicker component.`}</p>\n    <p>{`This component works with `}<a parentName=\"p\" {...{\n        \"href\": \"https://day.js.org/\"\n      }}>{`Day.js`}</a>{`, which is a project dependency.`}</p>\n    <h2 {...{\n      \"id\": \"examples\"\n    }}>{`Examples`}</h2>\n    <Playground __position={0} __code={'() => {\\n  const [example, setExample] = useState(\\'\\')\\n  return (\\n    <Row>\\n      <Col as={Styled} xs={12} sm={6} padding=\\\"10px\\\">\\n        <div>Regular InputDateFallback</div>\\n        <br />\\n        <InputDateFallback\\n          id=\\\"example\\\"\\n          value={example}\\n          onChange={({ target }) => setExample(target.value)}\\n          label=\\\"Type a date\\\"\\n        />\\n        <br />\\n        <div>\\n          <strong>input value: </strong>\\n          {JSON.stringify(example)}\\n        </div>\\n      </Col>\\n    </Row>\\n  )\\n}'} __scope={{\n      props: this ? this.props : props,\n      memo,\n      useState,\n      Playground,\n      Props,\n      dayjs,\n      InputDateFallback,\n      Styled,\n      Row,\n      Col\n    }} mdxType=\"Playground\">\n    {() => {\n        const [example, setExample] = useState('');\n        return <Row mdxType=\"Row\">\n            <Col as={Styled} xs={12} sm={6} padding=\"10px\" mdxType=\"Col\">\n                <div>\n                    Regular InputDateFallback\n                </div>\n                <br />\n                <InputDateFallback id=\"example\" value={example} onChange={({\n              target\n            }) => setExample(target.value)} label=\"Type a date\" mdxType=\"InputDateFallback\" />\n                <br />\n                <div>\n                    <strong>input value: </strong>\n                    {JSON.stringify(example)}\n                </div>\n            </Col>\n        </Row>;\n      }}\n    </Playground>\n    <h2 {...{\n      \"id\": \"minimum-date\"\n    }}>{`Minimum Date`}</h2>\n    <Playground __position={1} __code={'() => {\\n  const min = dayjs().add(30, \\'days\\')\\n  const today = dayjs()\\n  const [example, setExample] = useState(today)\\n  return (\\n    <Row vertical=\\\"start\\\">\\n      <Col as={Styled} xs={12} sm={6} padding=\\\"10px\\\">\\n        <div>Minimum: {min.format(\\'YYYY-MM-DD\\')}</div>\\n        <br />\\n        <InputDateFallback\\n          id=\\\"example2\\\"\\n          value={example}\\n          onChange={({ target }) => setExample(target.value)}\\n          label=\\\"Type a date\\\"\\n          min={min}\\n        />\\n        <br />\\n        <div>\\n          <strong>input value: </strong>\\n          {JSON.stringify(example)}\\n        </div>\\n      </Col>\\n    </Row>\\n  )\\n}'} __scope={{\n      props: this ? this.props : props,\n      memo,\n      useState,\n      Playground,\n      Props,\n      dayjs,\n      InputDateFallback,\n      Styled,\n      Row,\n      Col\n    }} mdxType=\"Playground\">\n    {() => {\n        const min = dayjs().add(30, 'days');\n        const today = dayjs();\n        const [example, setExample] = useState(today);\n        return <Row vertical=\"start\" mdxType=\"Row\">\n            <Col as={Styled} xs={12} sm={6} padding=\"10px\" mdxType=\"Col\">\n                <div>\n                    Minimum: {min.format('YYYY-MM-DD')}\n                </div>\n                <br />\n                <InputDateFallback id=\"example2\" value={example} onChange={({\n              target\n            }) => setExample(target.value)} label=\"Type a date\" min={min} mdxType=\"InputDateFallback\" />\n                <br />\n                <div>\n                    <strong>input value: </strong>\n                    {JSON.stringify(example)}\n                </div>\n            </Col>\n        </Row>;\n      }}\n    </Playground>\n    <h2 {...{\n      \"id\": \"maximum-date\"\n    }}>{`Maximum Date`}</h2>\n    <Playground __position={2} __code={'() => {\\n  const max = dayjs().subtract(30, \\'days\\')\\n  const today = dayjs()\\n  const [example, setExample] = useState(today)\\n  return (\\n    <Row vertical=\\\"start\\\">\\n      <Col as={Styled} xs={12} sm={6} padding=\\\"10px\\\">\\n        <div>Maximum: {max.format(\\'YYYY-MM-DD\\')}</div>\\n        <br />\\n        <InputDateFallback\\n          id=\\\"example3\\\"\\n          value={example}\\n          onChange={({ target }) => setExample(target.value)}\\n          label=\\\"Type a date\\\"\\n          max={max}\\n        />\\n        <br />\\n        <div>\\n          <strong>input value: </strong>\\n          {JSON.stringify(example)}\\n        </div>\\n      </Col>\\n    </Row>\\n  )\\n}'} __scope={{\n      props: this ? this.props : props,\n      memo,\n      useState,\n      Playground,\n      Props,\n      dayjs,\n      InputDateFallback,\n      Styled,\n      Row,\n      Col\n    }} mdxType=\"Playground\">\n    {() => {\n        const max = dayjs().subtract(30, 'days');\n        const today = dayjs();\n        const [example, setExample] = useState(today);\n        return <Row vertical=\"start\" mdxType=\"Row\">\n            <Col as={Styled} xs={12} sm={6} padding=\"10px\" mdxType=\"Col\">\n                <div>\n                    Maximum: {max.format('YYYY-MM-DD')}\n                </div>\n                <br />\n                <InputDateFallback id=\"example3\" value={example} onChange={({\n              target\n            }) => setExample(target.value)} label=\"Type a date\" max={max} mdxType=\"InputDateFallback\" />\n                <br />\n                <div>\n                    <strong>input value: </strong>\n                    {JSON.stringify(example)}\n                </div>\n            </Col>\n        </Row>;\n      }}\n    </Playground>\n    <h2 {...{\n      \"id\": \"minimum-and-maximum\"\n    }}>{`Minimum and Maximum`}</h2>\n    <Playground __position={3} __code={'() => {\\n  const [min, setMin] = useState(\\n    dayjs()\\n      .subtract(2, \\'days\\')\\n      .format(\\'YYYY-MM-DD\\'),\\n  )\\n  const [max, setMax] = useState(\\n    dayjs()\\n      .add(2, \\'days\\')\\n      .format(\\'YYYY-MM-DD\\'),\\n  )\\n  return (\\n    <Row vertical=\\\"start\\\">\\n      <Col as={Styled} xs={12} sm={6} padding=\\\"10px\\\">\\n        <InputDateFallback\\n          id=\\\"exampleFrom\\\"\\n          value={min}\\n          onChange={({ target }) => setMin(target.value)}\\n          label=\\\"From\\\"\\n          max={max}\\n        />\\n        <br />\\n        <div>\\n          <strong>input value: </strong>\\n          {JSON.stringify(min)}\\n        </div>\\n        <div>\\n          <strong>max: </strong>\\n          {JSON.stringify(max)}\\n        </div>\\n      </Col>\\n      <Col as={Styled} xs={12} sm={6} padding=\\\"10px\\\">\\n        <InputDateFallback\\n          id=\\\"exampleTo\\\"\\n          value={max}\\n          onChange={({ target }) => setMax(target.value)}\\n          label=\\\"To\\\"\\n          min={min}\\n        />\\n        <br />\\n        <div>\\n          <strong>input value: </strong>\\n          {JSON.stringify(max)}\\n        </div>\\n        <div>\\n          <strong>min: </strong>\\n          {JSON.stringify(min)}\\n        </div>\\n      </Col>\\n    </Row>\\n  )\\n}'} __scope={{\n      props: this ? this.props : props,\n      memo,\n      useState,\n      Playground,\n      Props,\n      dayjs,\n      InputDateFallback,\n      Styled,\n      Row,\n      Col\n    }} mdxType=\"Playground\">\n    {() => {\n        const [min, setMin] = useState(dayjs().subtract(2, 'days').format('YYYY-MM-DD'));\n        const [max, setMax] = useState(dayjs().add(2, 'days').format('YYYY-MM-DD'));\n        return <Row vertical=\"start\" mdxType=\"Row\">\n            <Col as={Styled} xs={12} sm={6} padding=\"10px\" mdxType=\"Col\">\n                <InputDateFallback id=\"exampleFrom\" value={min} onChange={({\n              target\n            }) => setMin(target.value)} label=\"From\" max={max} mdxType=\"InputDateFallback\" />\n                <br />\n                <div>\n                    <strong>input value: </strong>\n                    {JSON.stringify(min)}\n                </div>\n                <div>\n                    <strong>max: </strong>\n                    {JSON.stringify(max)}\n                </div>\n            </Col>\n            <Col as={Styled} xs={12} sm={6} padding=\"10px\" mdxType=\"Col\">\n                <InputDateFallback id=\"exampleTo\" value={max} onChange={({\n              target\n            }) => setMax(target.value)} label=\"To\" min={min} mdxType=\"InputDateFallback\" />\n                <br />\n                <div>\n                    <strong>input value: </strong>\n                    {JSON.stringify(max)}\n                </div>\n                <div>\n                    <strong>min: </strong>\n                    {JSON.stringify(min)}\n                </div>\n            </Col>\n        </Row>;\n      }}\n    </Playground>\n    <h2 {...{\n      \"id\": \"properties\"\n    }}>{`Properties`}</h2>\n    <Props of={InputDateFallback} mdxType=\"Props\" />\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"],"sourceRoot":""}