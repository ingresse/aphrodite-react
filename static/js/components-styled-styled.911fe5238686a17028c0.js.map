{"version":3,"sources":["/home/udi/projects/aphrodite/src/components/Styled/Styled.mdx"],"names":["layoutProps","MDXContent","components","props","mdxType","__position","__code","__scope","this","useState","Playground","Props","Styled","Container","Row","Col","Card","Switch","component","sm","background","color","padding","radius","shadow","shadowColor","shadowSpread","as","borderTop","borderBottom","margin","borderRight","borderLeft","xs","of","isMDXComponent"],"mappings":"kcAWMA,EAAc,GAIL,SAASC,EAAT,GAGX,IAFFC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,YALS,UAKT,iBAAeH,EAAiBG,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAE5E,kBACE,GAAM,UADR,UAGA,kBACE,GAAM,kEADR,mEAGA,0BACA,YAAC,IAAD,CAAYC,WAAY,EAAGC,OAAQ,oNAAiOC,QAAS,CAC3QJ,MAAOK,KAAOA,KAAKL,MAAQA,EAC3BM,oBACAC,eACAC,UACAC,YACAC,cACAC,QACAC,QACAC,SACAC,aACCC,UAAWL,IAAWM,IAAE,EAACf,QAAQ,cACpC,YAAC,KAAD,CAAQgB,WAAW,wBAAwBC,MAAM,YAAYC,QAAQ,OAAOC,OAAO,OAAOC,QAAM,EAACC,YAAY,iBAAiBC,aAAa,OAAOtB,QAAQ,UAA1J,8BAIA,0BACA,kBACE,GAAM,kBADR,kBAGA,YAAC,IAAD,CAAYC,WAAY,EAAGC,OAAQ,+FAAwGC,QAAS,CAClJJ,MAAOK,KAAOA,KAAKL,MAAQA,EAC3BM,oBACAC,eACAC,UACAC,YACAC,cACAC,QACAC,QACAC,SACAC,aACCb,QAAQ,cACX,YAAC,KAAD,CAAQuB,GAAG,UAAUvB,QAAQ,UAA7B,6DAIA,0BACA,kBACE,GAAM,mBADR,mBAGA,YAAC,IAAD,CAAYC,WAAY,EAAGC,OAAQ,qXAAsYC,QAAS,CAChbJ,MAAOK,KAAOA,KAAKL,MAAQA,EAC3BM,oBACAC,eACAC,UACAC,YACAC,cACAC,QACAC,QACAC,SACAC,aACCb,QAAQ,cACX,YAAC,KAAD,CAAQwB,WAAS,EAACC,cAAY,EAACC,OAAO,SAASR,QAAQ,OAAOlB,QAAQ,UAAtE,kBAEI,uBAFJ,6CAKE,YAAC,KAAD,CAAQwB,WAAS,EAACG,YAAY,YAAYF,aAAa,QAAQG,WAAW,OAAOF,OAAO,SAASR,QAAQ,OAAOC,OAAQ,GAAInB,QAAQ,UAApI,6BAEF,uBAFE,wBAMF,0BACA,kBACE,GAAM,yBADR,yBAGA,YAAC,IAAD,CAAYC,WAAY,EAAGC,OAAQ,iOAA4OC,QAAS,CACtRJ,MAAOK,KAAOA,KAAKL,MAAQA,EAC3BM,oBACAC,eACAC,UACAC,YACAC,cACAC,QACAC,QACAC,SACAC,aACCb,QAAQ,cACX,YAAC,KAAD,CAAQuB,GAAId,IAAWO,WAAW,kBAAkBE,QAAQ,OAAOC,OAAQ,EAAGU,IAAE,EAC9E7B,QAAQ,UADV,yDAKA,0BACA,kBACE,GAAM,cADR,cAGA,YAAC,IAAD,CAAO8B,GAAItB,KAAQR,QAAQ,W,sLAK/BH,EAAWkC,gBAAiB","file":"static/js/components-styled-styled.d34a8d28.js","sourcesContent":["\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport { useState } from 'react';\nimport { Playground, Props } from 'docz';\nimport { Styled, Container, Row, Col, Card, Switch } from '../';\n\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"styled\"\n    }}>{`Styled`}</h1>\n    <h3 {...{\n      \"id\": \"a-simple-component-block-which-accepts-custom-props-and-styles\"\n    }}>{`A simple component block which accepts custom props and styles.`}</h3>\n    <p>{`.`}</p>\n    <Playground __position={0} __code={'<Styled\\n  background=\\\"supernova,crystal,0.5\\\"\\n  color=\\\"supernova\\\"\\n  padding=\\\"15px\\\"\\n  radius=\\\"15px\\\"\\n  shadow\\n  shadowColor=\\\"supernova,dark\\\"\\n  shadowSpread=\\\"10px\\\"\\n>\\n  Styled with custom props.\\n</Styled>'} __scope={{\n      props: this ? this.props : props,\n      useState,\n      Playground,\n      Props,\n      Styled,\n      Container,\n      Row,\n      Col,\n      Card,\n      Switch\n    }} component={Container} sm mdxType=\"Playground\">\n    <Styled background=\"supernova,crystal,0.5\" color=\"supernova\" padding=\"15px\" radius=\"15px\" shadow shadowColor=\"supernova,dark\" shadowSpread=\"10px\" mdxType=\"Styled\">\n        Styled with custom props.\n    </Styled>\n    </Playground>\n    <p>{`.`}</p>\n    <h2 {...{\n      \"id\": \"simple-example\"\n    }}>{`Simple example`}</h2>\n    <Playground __position={1} __code={'<Styled as=\\\"section\\\">\\n  \\\"Styled\\\" renderized with \\\"section\\\" tag instead of \\\"div\\\".\\n</Styled>'} __scope={{\n      props: this ? this.props : props,\n      useState,\n      Playground,\n      Props,\n      Styled,\n      Container,\n      Row,\n      Col,\n      Card,\n      Switch\n    }} mdxType=\"Playground\">\n    <Styled as=\"section\" mdxType=\"Styled\">\n        \"Styled\" renderized with \"section\" tag instead of \"div\".\n    </Styled>\n    </Playground>\n    <p>{`.`}</p>\n    <h2 {...{\n      \"id\": \"borders-example\"\n    }}>{`Borders example`}</h2>\n    <Playground __position={2} __code={'<Styled borderTop borderBottom margin=\\\"30px 0\\\" padding=\\\"15px\\\">\\n  Hello, borders.\\n  <br />\\n  Or should I\\'d say \\\"shadows as borders\\\"?!\\n</Styled>\\n<Styled\\n  borderTop\\n  borderRight=\\\"tangerine\\\"\\n  borderBottom=\\\"ocean\\\"\\n  borderLeft=\\\"ruby\\\"\\n  margin=\\\"30px 0\\\"\\n  padding=\\\"15px\\\"\\n  radius={10}\\n>\\n  Too many borders combined.\\n  <br />\\n  Check the 4 corners\\n</Styled>'} __scope={{\n      props: this ? this.props : props,\n      useState,\n      Playground,\n      Props,\n      Styled,\n      Container,\n      Row,\n      Col,\n      Card,\n      Switch\n    }} mdxType=\"Playground\">\n    <Styled borderTop borderBottom margin=\"30px 0\" padding=\"15px\" mdxType=\"Styled\">\n        Hello, borders.\n        <br />\n        Or should I'd say \"shadows as borders\"?!\n    </Styled>\n      <Styled borderTop borderRight=\"tangerine\" borderBottom=\"ocean\" borderLeft=\"ruby\" margin=\"30px 0\" padding=\"15px\" radius={10} mdxType=\"Styled\">\n    Too many borders combined.\n    <br />\n    Check the 4 corners\n      </Styled>\n    </Playground>\n    <p>{`.`}</p>\n    <h2 {...{\n      \"id\": \"mixing-styles-example\"\n    }}>{`Mixing styles example`}</h2>\n    <Playground __position={3} __code={'<Styled\\n  as={Container}\\n  background=\\\"mercury,crystal\\\"\\n  padding=\\\"15px\\\"\\n  radius={5}\\n  xs // this is a \\\"Container\\\" prop and you can use all others\\n>\\n  \\\"Styled\\\" mixed up with \\\"Container\\\" component styles.\\n</Styled>'} __scope={{\n      props: this ? this.props : props,\n      useState,\n      Playground,\n      Props,\n      Styled,\n      Container,\n      Row,\n      Col,\n      Card,\n      Switch\n    }} mdxType=\"Playground\">\n    <Styled as={Container} background=\"mercury,crystal\" padding=\"15px\" radius={5} xs // this is a \"Container\" prop and you can use all others\n      mdxType=\"Styled\">\n        \"Styled\" mixed up with \"Container\" component styles.\n    </Styled>\n    </Playground>\n    <p>{`.`}</p>\n    <h2 {...{\n      \"id\": \"properties\"\n    }}>{`Properties`}</h2>\n    <Props of={Styled} mdxType=\"Props\" />\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"],"sourceRoot":""}