{"version":3,"sources":["/Users/udi/projects/front/aphrodite-react/src/components/Form/TextArea/TextArea.mdx"],"names":["layoutProps","MDXContent","components","props","mdxType","__position","__code","__scope","this","useEffect","useState","Playground","Props","TextArea","Segment","padding","label","value","setValue","setTimeout","onChange","evt","target","of","isMDXComponent"],"mappings":"ijBAiBMA,EAAc,GAIL,SAASC,EAAT,GAGX,IAFFC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,YALS,UAKT,iBAAeH,EAAiBG,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAE5E,iBAAQ,CACN,GAAM,kBADR,mBAGA,iBAAQ,CACN,GAAM,mCADR,oCAGA,iBAAQ,CACN,GAAM,WADR,WAGA,YAAC,IAAD,CAAYC,WAAY,EAAGC,OAAQ,gFAAqFC,QAAS,CAC/HJ,MAAOK,KAAOA,KAAKL,MAAQA,EAC3BM,sBACAC,oBACAC,eACAC,UACAC,aACAC,aACCV,QAAQ,cACX,YAAC,IAAD,CAASW,QAAQ,SAASX,QAAQ,WAC9B,YAAC,IAAD,CAAUY,MAAM,iBAAiBZ,QAAQ,eAG7C,iBAAQ,CACN,GAAM,WADR,WAGA,YAAC,IAAD,CAAYC,WAAY,EAAGC,OAAQ,iaAAsaC,QAAS,CAChdJ,MAAOK,KAAOA,KAAKL,MAAQA,EAC3BM,sBACAC,oBACAC,eACAC,UACAC,aACAC,aACCV,QAAQ,eACV,WAAO,IAAD,EACuBM,mBAAS,IADhC,mBACIO,EADJ,KACWC,EADX,KAYH,OAVAT,qBAAU,WACRU,YAAW,WACTD,EAAS,eACR,QACF,IAMI,YAAC,IAAD,CAASH,QAAQ,SAASX,QAAQ,WACrC,YAAC,IAAD,CAAUY,MAAM,wBAAwBC,MAAOA,EAAOG,SAL1D,SAAsBC,GACpBH,EAASG,EAAIC,OAAOL,QAI4Db,QAAQ,iBAI9F,iBAAQ,CACN,GAAM,cADR,cAGA,YAAC,IAAD,CAAOmB,GAAIV,IAAUT,QAAQ,W,+LAKjCH,EAAWuB,gBAAiB","file":"static/js/components-form-text-area-text-area.ec607efb.js","sourcesContent":["\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsx mdx */\nimport { useEffect, useState } from 'react';\nimport { Playground, Props } from 'docz';\nimport {\n    TextArea,\n    Segment,\n} from '../../';\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"form--textarea\"\n    }}>{`Form | TextArea`}</h1>\n    <h3 {...{\n      \"id\": \"form-text-area-component-styled\"\n    }}>{`Form Text Area component styled.`}</h3>\n    <h2 {...{\n      \"id\": \"example\"\n    }}>{`Example`}</h2>\n    <Playground __position={0} __code={'<Segment padding=\\\"10px 0\\\">\\n  <TextArea label=\\\"A lot of words\\\" />\\n</Segment>'} __scope={{\n      props: this ? this.props : props,\n      useEffect,\n      useState,\n      Playground,\n      Props,\n      TextArea,\n      Segment\n    }} mdxType=\"Playground\">\n    <Segment padding=\"10px 0\" mdxType=\"Segment\">\n        <TextArea label=\"A lot of words\" mdxType=\"TextArea\" />\n    </Segment>\n    </Playground>\n    <h2 {...{\n      \"id\": \"delayed\"\n    }}>{`Delayed`}</h2>\n    <Playground __position={1} __code={'() => {\\n  const [value, setValue] = useState(\\'\\')\\n  useEffect(() => {\\n    setTimeout(() => {\\n      setValue(\\'aphrodite\\')\\n    }, 2500)\\n  }, [])\\n\\n  function handleChange(evt) {\\n    setValue(evt.target.value)\\n  }\\n\\n  return (\\n    <Segment padding=\\\"10px 0\\\">\\n      <TextArea\\n        label=\\\"Big content goes here\\\"\\n        value={value}\\n        onChange={handleChange}\\n      />\\n    </Segment>\\n  )\\n}'} __scope={{\n      props: this ? this.props : props,\n      useEffect,\n      useState,\n      Playground,\n      Props,\n      TextArea,\n      Segment\n    }} mdxType=\"Playground\">\n    {() => {\n        const [value, setValue] = useState('');\n        useEffect(() => {\n          setTimeout(() => {\n            setValue('aphrodite');\n          }, 2500);\n        }, []);\n\n        function handleChange(evt) {\n          setValue(evt.target.value);\n        }\n\n        return <Segment padding=\"10px 0\" mdxType=\"Segment\">\n            <TextArea label=\"Big content goes here\" value={value} onChange={handleChange} mdxType=\"TextArea\" />\n        </Segment>;\n      }}\n    </Playground>\n    <h2 {...{\n      \"id\": \"properties\"\n    }}>{`Properties`}</h2>\n    <Props of={TextArea} mdxType=\"Props\" />\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"],"sourceRoot":""}