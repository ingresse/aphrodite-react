{"version":3,"sources":["/Users/udi/projects/front/aphrodite-react/src/components/Grid/grid.mdx"],"names":["layoutProps","MDXContent","components","props","mdxType","parentName","of","Container","__position","__code","__scope","this","Playground","Props","Row","Col","colors","GRID","RADIUS","containerExample","color","get","background","borderRadius","UNIT","marginTop","marginBottom","paddingTop","paddingBottom","contentExample","boxSizing","margin","padding","xl","styles","CONTAINER","XL","style","CONTAINER_PADDING","md","MD","sm","SM","xs","XS","noPadding","border","textAlign","rowsExample","overflow","columnsExample","paddingRight","paddingLeft","borderRight","COLUMNS_PADDING","borderLeft","fluid","lg","first","last","reverse","horizontal","vertical","Object","assign","minHeight","width","isMDXComponent"],"mappings":"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","file":"static/js/components-grid-grid.897d2e92.js","sourcesContent":["\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsx mdx */\nimport { Playground, Props } from 'docz';\nimport { Container, Row, Col } from '../';\nimport { colors } from '../../utils';\nimport { GRID, RADIUS } from '../../constants';\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"grid\"\n    }}>{`Grid`}</h1>\n    <h3 {...{\n      \"id\": \"align-the-components-with-aphrodite-standards\"\n    }}>{`Align the components with Aphrodite standards`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`import { Container, Row, Col } from 'aphrodite-react';\n...\n<Container>\n    <Row>\n        <Col xs=\"12\" sm=\"6\">\n            YOUR CONTENT HERE\n        </Col>\n    </Row>\n</Container>\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"container\"\n    }}>{`Container`}</h2>\n    <h4 {...{\n      \"id\": \"we-use-to-delimitate-the-content-area-centralizing-this-block-in-the-screen\"\n    }}>{`We use to delimitate the content area, centralizing this block in the screen.`}</h4>\n    <p>{`...`}</p>\n    <Props of={Container} mdxType=\"Props\" />\n    <Playground __position={1} __code={'() => {\\n  const containerExample = {\\n    color: colors.get(\\'mercury\\', \\'dark\\'),\\n    background: colors.get(\\'mercury\\', \\'crystal\\'),\\n    borderRadius: RADIUS + GRID.UNIT,\\n    marginTop: \\'20px\\',\\n    marginBottom: \\'20px\\',\\n    paddingTop: \\'15px\\',\\n    paddingBottom: \\'20px\\',\\n  }\\n\\n  const contentExample = {\\n    boxSizing: \\'border-box\\',\\n    background: colors.get(\\'smoke\\'),\\n    borderRadius: RADIUS + GRID.UNIT,\\n\\n    margin: \\'15px 0 0\\',\\n    padding: \\'15px 20px\\',\\n  }\\n\\n  return (\\n    <div>\\n      <Container xl styles={containerExample}>\\n        Container <code>XL</code> maximum width is{\\' \\'}\\n        <strong>{GRID.CONTAINER.XL + GRID.UNIT}</strong>.\\n        <div style={contentExample}>\\n          And the content maximum width is{\\' \\'}\\n          <strong>\\n            {GRID.CONTAINER.XL - GRID.CONTAINER_PADDING * 2 + GRID.UNIT}\\n          </strong>\\n          .\\n        </div>\\n      </Container>\\n\\n      <Container styles={containerExample}>\\n        Container <strong>DEFAULT</strong> or <code>LG</code> maximum width is{\\' \\'}\\n        <strong>{GRID.CONTAINER + GRID.UNIT}</strong>.\\n        <div style={contentExample}>\\n          And the content maximum width is{\\' \\'}\\n          <strong>\\n            {GRID.CONTAINER - GRID.CONTAINER_PADDING * 2 + GRID.UNIT}\\n          </strong>\\n          .\\n        </div>\\n      </Container>\\n\\n      <Container md styles={containerExample}>\\n        Container <code>MD</code> maximum width is{\\' \\'}\\n        <strong>{GRID.CONTAINER.MD + GRID.UNIT}</strong>.\\n        <div style={contentExample}>\\n          And the content maximum width is{\\' \\'}\\n          <strong>\\n            {GRID.CONTAINER.MD - GRID.CONTAINER_PADDING * 2 + GRID.UNIT}\\n          </strong>\\n          .\\n        </div>\\n      </Container>\\n\\n      <Container sm styles={containerExample}>\\n        Container <code>SM</code> maximum width is{\\' \\'}\\n        <strong>{GRID.CONTAINER.SM + GRID.UNIT}</strong>.\\n        <div style={contentExample}>\\n          And the content maximum width is{\\' \\'}\\n          <strong>\\n            {GRID.CONTAINER.SM - GRID.CONTAINER_PADDING * 2 + GRID.UNIT}\\n          </strong>\\n          .\\n        </div>\\n      </Container>\\n\\n      <Container xs styles={containerExample}>\\n        Container <code>XS</code> maximum width is{\\' \\'}\\n        <strong>{GRID.CONTAINER.XS + GRID.UNIT}</strong>.\\n        <div style={contentExample}>\\n          And the content maximum width is{\\' \\'}\\n          <strong>\\n            {GRID.CONTAINER.XS - GRID.CONTAINER_PADDING * 2 + GRID.UNIT}\\n          </strong>\\n          .\\n        </div>\\n      </Container>\\n\\n      <Container\\n        xs\\n        noPadding\\n        styles={{\\n          ...containerExample,\\n          border: `1px solid ${colors.get(\\'mercury\\', \\'dark\\')}`,\\n        }}\\n      >\\n        noPadding Example\\n      </Container>\\n    </div>\\n  )\\n}'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      Container,\n      Row,\n      Col,\n      colors,\n      GRID,\n      RADIUS\n    }} mdxType=\"Playground\">\n    {() => {\n        const containerExample = {\n          color: colors.get('mercury', 'dark'),\n          background: colors.get('mercury', 'crystal'),\n          borderRadius: RADIUS + GRID.UNIT,\n          marginTop: '20px',\n          marginBottom: '20px',\n          paddingTop: '15px',\n          paddingBottom: '20px'\n        };\n        const contentExample = {\n          boxSizing: 'border-box',\n          background: colors.get('smoke'),\n          borderRadius: RADIUS + GRID.UNIT,\n          margin: '15px 0 0',\n          padding: '15px 20px'\n        };\n        return <div>\n            <Container xl styles={containerExample} mdxType=\"Container\">\n                Container <code>XL</code> maximum width is <strong>{GRID.CONTAINER.XL + GRID.UNIT}</strong>.\n                <div style={contentExample}>\n                    And the content maximum width is <strong>{GRID.CONTAINER.XL - GRID.CONTAINER_PADDING * 2 + GRID.UNIT}</strong>.\n                </div>\n            </Container>\n\n            <Container styles={containerExample} mdxType=\"Container\">\n                Container <strong>DEFAULT</strong> or <code>LG</code> maximum width is <strong>{GRID.CONTAINER + GRID.UNIT}</strong>.\n                <div style={contentExample}>\n                    And the content maximum width is <strong>{GRID.CONTAINER - GRID.CONTAINER_PADDING * 2 + GRID.UNIT}</strong>.\n                </div>\n            </Container>\n\n            <Container md styles={containerExample} mdxType=\"Container\">\n                Container <code>MD</code> maximum width is <strong>{GRID.CONTAINER.MD + GRID.UNIT}</strong>.\n                <div style={contentExample}>\n                    And the content maximum width is <strong>{GRID.CONTAINER.MD - GRID.CONTAINER_PADDING * 2 + GRID.UNIT}</strong>.\n                </div>\n            </Container>\n\n            <Container sm styles={containerExample} mdxType=\"Container\">\n                Container <code>SM</code> maximum width is <strong>{GRID.CONTAINER.SM + GRID.UNIT}</strong>.\n                <div style={contentExample}>\n                    And the content maximum width is <strong>{GRID.CONTAINER.SM - GRID.CONTAINER_PADDING * 2 + GRID.UNIT}</strong>.\n                </div>\n            </Container>\n\n            <Container xs styles={containerExample} mdxType=\"Container\">\n                Container <code>XS</code> maximum width is <strong>{GRID.CONTAINER.XS + GRID.UNIT}</strong>.\n                <div style={contentExample}>\n                    And the content maximum width is <strong>{GRID.CONTAINER.XS - GRID.CONTAINER_PADDING * 2 + GRID.UNIT}</strong>.\n                </div>\n            </Container>\n\n            <Container xs noPadding styles={{ ...containerExample,\n            border: `1px solid ${colors.get('mercury', 'dark')}`\n          }} mdxType=\"Container\">\n                noPadding Example\n            </Container>\n        </div>;\n      }}\n    </Playground>\n    <h2 {...{\n      \"id\": \"row--column\"\n    }}>{`Row & Column`}</h2>\n    <h4 {...{\n      \"id\": \"based-in-flexboxgrid-awesome-system\"\n    }}>{`Based in `}<a parentName=\"h4\" {...{\n        \"href\": \"http://flexboxgrid.com/\"\n      }}>{`FlexboxGrid`}</a>{` awesome system.`}</h4>\n    <p>{`...`}</p>\n    <Props of={Row} mdxType=\"Props\" />\n    <Props of={Col} mdxType=\"Props\" />\n    <h3 {...{\n      \"id\": \"example-usage\"\n    }}>{`Example usage`}</h3>\n    <Playground __position={3} __code={'() => {\\n  // DON\\'T DO THIS\\n  const containerExample = {\\n    color: colors.get(\\'mercury\\', \\'dark\\'),\\n    background: colors.get(\\'mercury\\', \\'crystal\\'),\\n    borderRadius: RADIUS + GRID.UNIT,\\n    marginTop: \\'10px\\',\\n    marginBottom: \\'10px\\',\\n\\n    textAlign: \\'center\\',\\n  }\\n\\n  const rowsExample = {\\n    paddingTop: \\'5px\\',\\n    paddingBottom: \\'5px\\',\\n    borderRadius: RADIUS + GRID.UNIT,\\n    overflow: \\'hidden\\',\\n  }\\n\\n  const columnsExample = {\\n    color: colors.get(\\'white\\'),\\n    background: colors.get(\\'mint\\'),\\n\\n    marginTop: \\'5px\\',\\n    marginBottom: \\'5px\\',\\n\\n    paddingTop: \\'20px\\',\\n    paddingBottom: \\'20px\\',\\n    paddingRight: 0,\\n    paddingLeft: 0,\\n\\n    borderRight: `${GRID.COLUMNS_PADDING}px solid ${colors.get(\\n      \\'mint\\',\\n      \\'dark\\',\\n    )}`,\\n    borderLeft: `${GRID.COLUMNS_PADDING}px solid ${colors.get(\\n      \\'mint\\',\\n      \\'dark\\',\\n    )}`,\\n  }\\n\\n  return (\\n    <Container fluid styles={containerExample}>\\n      <Row styles={rowsExample}>\\n        <Col xs=\\\"6\\\" sm=\\\"7\\\" md=\\\"8\\\" lg=\\\"9\\\" xl=\\\"10\\\" styles={columnsExample}>\\n          Column\\n          <br />\\n          xs=\\\"6\\\" sm=\\\"7\\\"\\n          <br />\\n          md=\\\"8\\\"\\n          <br />\\n          lg=\\\"9\\\" xl=\\\"10\\\"\\n        </Col>\\n        <Col xs=\\\"6\\\" sm=\\\"5\\\" md=\\\"4\\\" lg=\\\"3\\\" xl=\\\"2\\\" styles={columnsExample}>\\n          Column\\n          <br />\\n          xs=\\\"6\\\" sm=\\\"5\\\"\\n          <br />\\n          md=\\\"4\\\"\\n          <br />\\n          lg=\\\"3\\\" xl=\\\"2\\\"\\n        </Col>\\n\\n        <Col sm=\\\"4\\\" styles={columnsExample}>\\n          Column sm=\\\"4\\\"\\n        </Col>\\n        <Col sm=\\\"8\\\" styles={columnsExample}>\\n          Column sm=\\\"8\\\"\\n        </Col>\\n\\n        <Col xs=\\\"2\\\" styles={columnsExample}>\\n          Column xs=\\\"2\\\"\\n        </Col>\\n        <Col xs=\\\"2\\\" styles={columnsExample}>\\n          Column xs=\\\"2\\\"\\n        </Col>\\n        <Col xs=\\\"2\\\" styles={columnsExample}>\\n          Column xs=\\\"2\\\"\\n        </Col>\\n        <Col xs=\\\"2\\\" styles={columnsExample}>\\n          Column xs=\\\"2\\\"\\n        </Col>\\n        <Col xs=\\\"2\\\" styles={columnsExample}>\\n          Column xs=\\\"2\\\"\\n        </Col>\\n        <Col xs=\\\"2\\\" styles={columnsExample}>\\n          Column xs=\\\"2\\\"\\n        </Col>\\n      </Row>\\n    </Container>\\n  )\\n}'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      Container,\n      Row,\n      Col,\n      colors,\n      GRID,\n      RADIUS\n    }} style={{\n      padding: '0 20px'\n    }} mdxType=\"Playground\">\n    {() => {\n        // DON'T DO THIS\n        const containerExample = {\n          color: colors.get('mercury', 'dark'),\n          background: colors.get('mercury', 'crystal'),\n          borderRadius: RADIUS + GRID.UNIT,\n          marginTop: '10px',\n          marginBottom: '10px',\n          textAlign: 'center'\n        };\n        const rowsExample = {\n          paddingTop: '5px',\n          paddingBottom: '5px',\n          borderRadius: RADIUS + GRID.UNIT,\n          overflow: 'hidden'\n        };\n        const columnsExample = {\n          color: colors.get('white'),\n          background: colors.get('mint'),\n          marginTop: '5px',\n          marginBottom: '5px',\n          paddingTop: '20px',\n          paddingBottom: '20px',\n          paddingRight: 0,\n          paddingLeft: 0,\n          borderRight: `${GRID.COLUMNS_PADDING}px solid ${colors.get('mint', 'dark')}`,\n          borderLeft: `${GRID.COLUMNS_PADDING}px solid ${colors.get('mint', 'dark')}`\n        };\n        return <Container fluid styles={containerExample} mdxType=\"Container\">\n            <Row styles={rowsExample} mdxType=\"Row\">\n\n                <Col xs=\"6\" sm=\"7\" md=\"8\" lg=\"9\" xl=\"10\" styles={columnsExample} mdxType=\"Col\">\n                    Column<br />xs=\"6\" sm=\"7\"<br />md=\"8\"<br />lg=\"9\" xl=\"10\"\n                </Col>\n                <Col xs=\"6\" sm=\"5\" md=\"4\" lg=\"3\" xl=\"2\" styles={columnsExample} mdxType=\"Col\">\n                    Column<br />xs=\"6\" sm=\"5\"<br />md=\"4\"<br />lg=\"3\" xl=\"2\"\n                </Col>\n\n                <Col sm=\"4\" styles={columnsExample} mdxType=\"Col\">\n                    Column sm=\"4\"\n                </Col>\n                <Col sm=\"8\" styles={columnsExample} mdxType=\"Col\">\n                    Column sm=\"8\"\n                </Col>\n\n                <Col xs=\"2\" styles={columnsExample} mdxType=\"Col\">\n                    Column xs=\"2\"\n                </Col>\n                <Col xs=\"2\" styles={columnsExample} mdxType=\"Col\">\n                    Column xs=\"2\"\n                </Col>\n                <Col xs=\"2\" styles={columnsExample} mdxType=\"Col\">\n                    Column xs=\"2\"\n                </Col>\n                <Col xs=\"2\" styles={columnsExample} mdxType=\"Col\">\n                    Column xs=\"2\"\n                </Col>\n                <Col xs=\"2\" styles={columnsExample} mdxType=\"Col\">\n                    Column xs=\"2\"\n                </Col>\n                <Col xs=\"2\" styles={columnsExample} mdxType=\"Col\">\n                    Column xs=\"2\"\n                </Col>\n\n            </Row>\n        </Container>;\n      }}\n    </Playground>\n    <h3 {...{\n      \"id\": \"ordering\"\n    }}>{`Ordering`}</h3>\n    <Playground __position={4} __code={'() => {\\n  // Example custom styles\\n  const containerExample = {\\n    color: colors.get(\\'mercury\\', \\'dark\\'),\\n    background: colors.get(\\'mercury\\', \\'crystal\\'),\\n    borderRadius: RADIUS + GRID.UNIT,\\n    marginTop: \\'10px\\',\\n    marginBottom: \\'10px\\',\\n\\n    paddingTop: \\'15px\\',\\n\\n    textAlign: \\'center\\',\\n  }\\n\\n  const rowsExample = {\\n    paddingTop: \\'5px\\',\\n    paddingBottom: \\'5px\\',\\n    borderRadius: RADIUS + GRID.UNIT,\\n    overflow: \\'hidden\\',\\n  }\\n\\n  const columnsExample = {\\n    color: colors.get(\\'white\\'),\\n    background: colors.get(\\'mint\\'),\\n\\n    marginTop: \\'5px\\',\\n    marginBottom: \\'5px\\',\\n\\n    paddingTop: \\'20px\\',\\n    paddingBottom: \\'20px\\',\\n    paddingRight: 0,\\n    paddingLeft: 0,\\n\\n    borderRight: `${GRID.COLUMNS_PADDING}px solid ${colors.get(\\n      \\'mint\\',\\n      \\'dark\\',\\n    )}`,\\n    borderLeft: `${GRID.COLUMNS_PADDING}px solid ${colors.get(\\n      \\'mint\\',\\n      \\'dark\\',\\n    )}`,\\n  }\\n\\n  return (\\n    <Container fluid styles={containerExample}>\\n      Regular\\n      <Row styles={rowsExample}>\\n        <Col xs=\\\"12\\\" sm=\\\"4\\\" first=\\\"xs\\\" last=\\\"sm\\\" styles={columnsExample}>\\n          Column\\n          <br />\\n          xs=\\\"12\\\" sm=\\\"4\\\"\\n          <br />\\n          first=\\\"xs\\\" last=\\\"sm\\\"\\n        </Col>\\n        <Col xs=\\\"12\\\" sm=\\\"8\\\" first=\\\"sm\\\" last=\\\"xs\\\" styles={columnsExample}>\\n          Column\\n          <br />\\n          xs=\\\"12\\\" sm=\\\"8\\\"\\n          <br />\\n          first=\\\"sm\\\" last=\\\"xs\\\"\\n        </Col>\\n      </Row>\\n      <br />\\n      Reverse\\n      <Row reverse styles={rowsExample}>\\n        <Col xs=\\\"12\\\" sm=\\\"4\\\" first=\\\"xs\\\" styles={columnsExample}>\\n          Column\\n          <br />\\n          xs=\\\"12\\\" sm=\\\"4\\\"\\n          <br />\\n          first=\\\"xs\\\"\\n        </Col>\\n\\n        <Col xs=\\\"12\\\" sm=\\\"8\\\" last=\\\"xs\\\" styles={columnsExample}>\\n          Column\\n          <br />\\n          xs=\\\"12\\\" sm=\\\"8\\\"\\n          <br />\\n          last=\\\"xs\\\"\\n        </Col>\\n      </Row>\\n    </Container>\\n  )\\n}'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      Container,\n      Row,\n      Col,\n      colors,\n      GRID,\n      RADIUS\n    }} mdxType=\"Playground\">\n    {() => {\n        // Example custom styles\n        const containerExample = {\n          color: colors.get('mercury', 'dark'),\n          background: colors.get('mercury', 'crystal'),\n          borderRadius: RADIUS + GRID.UNIT,\n          marginTop: '10px',\n          marginBottom: '10px',\n          paddingTop: '15px',\n          textAlign: 'center'\n        };\n        const rowsExample = {\n          paddingTop: '5px',\n          paddingBottom: '5px',\n          borderRadius: RADIUS + GRID.UNIT,\n          overflow: 'hidden'\n        };\n        const columnsExample = {\n          color: colors.get('white'),\n          background: colors.get('mint'),\n          marginTop: '5px',\n          marginBottom: '5px',\n          paddingTop: '20px',\n          paddingBottom: '20px',\n          paddingRight: 0,\n          paddingLeft: 0,\n          borderRight: `${GRID.COLUMNS_PADDING}px solid ${colors.get('mint', 'dark')}`,\n          borderLeft: `${GRID.COLUMNS_PADDING}px solid ${colors.get('mint', 'dark')}`\n        };\n        return <Container fluid styles={containerExample} mdxType=\"Container\">\n            Regular\n\n            <Row styles={rowsExample} mdxType=\"Row\">\n\n                <Col xs=\"12\" sm=\"4\" first=\"xs\" last=\"sm\" styles={columnsExample} mdxType=\"Col\">\n                    Column<br />xs=\"12\" sm=\"4\"<br />first=\"xs\" last=\"sm\"\n                </Col>\n                <Col xs=\"12\" sm=\"8\" first=\"sm\" last=\"xs\" styles={columnsExample} mdxType=\"Col\">\n                    Column<br />xs=\"12\" sm=\"8\"<br />first=\"sm\" last=\"xs\"\n                </Col>\n\n            </Row>\n\n            <br />\n\n            Reverse\n\n            <Row reverse styles={rowsExample} mdxType=\"Row\">\n\n                <Col xs=\"12\" sm=\"4\" first=\"xs\" styles={columnsExample} mdxType=\"Col\">\n                    Column<br />xs=\"12\" sm=\"4\"<br />first=\"xs\"\n                </Col>\n\n                <Col xs=\"12\" sm=\"8\" last=\"xs\" styles={columnsExample} mdxType=\"Col\">\n                    Column<br />xs=\"12\" sm=\"8\"<br />last=\"xs\"\n                </Col>\n\n            </Row>\n        </Container>;\n      }}\n    </Playground>\n    <h3 {...{\n      \"id\": \"horizontal-alignment\"\n    }}>{`Horizontal Alignment`}</h3>\n    <Playground __position={5} __code={'() => {\\n  // Examples\\n  const containerExample = {\\n    color: colors.get(\\'mercury\\', \\'dark\\'),\\n    background: colors.get(\\'mercury\\', \\'crystal\\'),\\n    borderRadius: RADIUS + GRID.UNIT,\\n    marginTop: \\'10px\\',\\n    marginBottom: \\'10px\\',\\n\\n    paddingTop: \\'15px\\',\\n\\n    textAlign: \\'center\\',\\n  }\\n\\n  const rowsExample = {\\n    paddingTop: \\'5px\\',\\n    paddingBottom: \\'5px\\',\\n    borderRadius: RADIUS + GRID.UNIT,\\n    overflow: \\'hidden\\',\\n  }\\n\\n  const columnsExample = {\\n    color: colors.get(\\'white\\'),\\n    background: colors.get(\\'mint\\'),\\n\\n    marginTop: \\'5px\\',\\n    marginBottom: \\'5px\\',\\n\\n    paddingTop: \\'20px\\',\\n    paddingBottom: \\'20px\\',\\n    paddingRight: 0,\\n    paddingLeft: 0,\\n\\n    borderRight: `${GRID.COLUMNS_PADDING}px solid ${colors.get(\\n      \\'mint\\',\\n      \\'dark\\',\\n    )}`,\\n    borderLeft: `${GRID.COLUMNS_PADDING}px solid ${colors.get(\\n      \\'mint\\',\\n      \\'dark\\',\\n    )}`,\\n  }\\n\\n  return (\\n    <Container fluid styles={containerExample}>\\n      <strong>Left</strong>, Center or Right\\n      <Row styles={rowsExample}>\\n        <Col xs=\\\"4\\\" styles={columnsExample}>\\n          Column\\n          <br />\\n          xs=\\\"4\\\"\\n        </Col>\\n        <Col xs=\\\"4\\\" styles={columnsExample}>\\n          Column\\n          <br />\\n          xs=\\\"4\\\"\\n        </Col>\\n      </Row>\\n      <Row horizontal=\\\"center\\\" styles={rowsExample}>\\n        <Col xs=\\\"4\\\" styles={columnsExample}>\\n          Column\\n          <br />\\n          xs=\\\"4\\\"\\n        </Col>\\n        <Col xs=\\\"4\\\" styles={columnsExample}>\\n          Column\\n          <br />\\n          xs=\\\"4\\\"\\n        </Col>\\n      </Row>\\n      <Row horizontal=\\\"end\\\" styles={rowsExample}>\\n        <Col xs=\\\"4\\\" styles={columnsExample}>\\n          Column\\n          <br />\\n          xs=\\\"4\\\"\\n        </Col>\\n        <Col xs=\\\"4\\\" styles={columnsExample}>\\n          Column\\n          <br />\\n          xs=\\\"4\\\"\\n        </Col>\\n      </Row>\\n    </Container>\\n  )\\n}'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      Container,\n      Row,\n      Col,\n      colors,\n      GRID,\n      RADIUS\n    }} style={{\n      padding: '0 20px'\n    }} mdxType=\"Playground\">\n    {() => {\n        // Examples\n        const containerExample = {\n          color: colors.get('mercury', 'dark'),\n          background: colors.get('mercury', 'crystal'),\n          borderRadius: RADIUS + GRID.UNIT,\n          marginTop: '10px',\n          marginBottom: '10px',\n          paddingTop: '15px',\n          textAlign: 'center'\n        };\n        const rowsExample = {\n          paddingTop: '5px',\n          paddingBottom: '5px',\n          borderRadius: RADIUS + GRID.UNIT,\n          overflow: 'hidden'\n        };\n        const columnsExample = {\n          color: colors.get('white'),\n          background: colors.get('mint'),\n          marginTop: '5px',\n          marginBottom: '5px',\n          paddingTop: '20px',\n          paddingBottom: '20px',\n          paddingRight: 0,\n          paddingLeft: 0,\n          borderRight: `${GRID.COLUMNS_PADDING}px solid ${colors.get('mint', 'dark')}`,\n          borderLeft: `${GRID.COLUMNS_PADDING}px solid ${colors.get('mint', 'dark')}`\n        };\n        return <Container fluid styles={containerExample} mdxType=\"Container\">\n            <strong>Left</strong>, Center or Right\n\n            <Row styles={rowsExample} mdxType=\"Row\">\n\n                <Col xs=\"4\" styles={columnsExample} mdxType=\"Col\">\n                    Column<br />xs=\"4\"\n                </Col>\n                <Col xs=\"4\" styles={columnsExample} mdxType=\"Col\">\n                    Column<br />xs=\"4\"\n                </Col>\n\n            </Row>\n\n            <Row horizontal=\"center\" styles={rowsExample} mdxType=\"Row\">\n\n                <Col xs=\"4\" styles={columnsExample} mdxType=\"Col\">\n                    Column<br />xs=\"4\"\n                </Col>\n                <Col xs=\"4\" styles={columnsExample} mdxType=\"Col\">\n                    Column<br />xs=\"4\"\n                </Col>\n\n            </Row>\n\n            <Row horizontal=\"end\" styles={rowsExample} mdxType=\"Row\">\n\n                <Col xs=\"4\" styles={columnsExample} mdxType=\"Col\">\n                    Column<br />xs=\"4\"\n                </Col>\n                <Col xs=\"4\" styles={columnsExample} mdxType=\"Col\">\n                    Column<br />xs=\"4\"\n                </Col>\n\n            </Row>\n        </Container>;\n      }}\n    </Playground>\n    <h3 {...{\n      \"id\": \"vertical-alignment\"\n    }}>{`Vertical Alignment`}</h3>\n    <Playground __position={6} __code={'() => {\\n  // DON\\'T DO THIS\\n  const containerExample = {\\n    color: colors.get(\\'mercury\\', \\'dark\\'),\\n    background: colors.get(\\'mercury\\', \\'crystal\\'),\\n    borderRadius: RADIUS + GRID.UNIT,\\n    marginTop: \\'10px\\',\\n    marginBottom: \\'10px\\',\\n\\n    paddingTop: \\'15px\\',\\n\\n    textAlign: \\'center\\',\\n  }\\n\\n  const rowsExample = {\\n    paddingTop: \\'5px\\',\\n    paddingBottom: \\'5px\\',\\n    borderRadius: RADIUS + GRID.UNIT,\\n    overflow: \\'hidden\\',\\n  }\\n\\n  const columnsExample = {\\n    color: colors.get(\\'white\\'),\\n    background: colors.get(\\'mint\\'),\\n\\n    marginTop: \\'5px\\',\\n    marginBottom: \\'5px\\',\\n\\n    paddingTop: \\'20px\\',\\n    paddingBottom: \\'20px\\',\\n    paddingRight: 0,\\n    paddingLeft: 0,\\n\\n    borderRight: `${GRID.COLUMNS_PADDING}px solid ${colors.get(\\n      \\'mint\\',\\n      \\'dark\\',\\n    )}`,\\n    borderLeft: `${GRID.COLUMNS_PADDING}px solid ${colors.get(\\n      \\'mint\\',\\n      \\'dark\\',\\n    )}`,\\n  }\\n\\n  return (\\n    <Container fluid styles={containerExample}>\\n      Start, <strong>Middle</strong> or End\\n      <Row vertical=\\\"start\\\" styles={rowsExample}>\\n        <Col xs=\\\"4\\\" styles={columnsExample}>\\n          Column\\n          <br />\\n          xs=\\\"4\\\"\\n        </Col>\\n        <Col\\n          xs=\\\"4\\\"\\n          styles={Object.assign({ minHeight: \\'120px\\' }, columnsExample)}\\n        >\\n          Column\\n          <br />\\n          xs=\\\"4\\\"\\n        </Col>\\n        <Col xs=\\\"4\\\" styles={columnsExample}>\\n          Column\\n          <br />\\n          xs=\\\"4\\\"\\n        </Col>\\n      </Row>\\n      <Row styles={rowsExample}>\\n        <Col xs=\\\"4\\\" styles={columnsExample}>\\n          Column\\n          <br />\\n          xs=\\\"4\\\"\\n        </Col>\\n        <Col\\n          xs=\\\"4\\\"\\n          styles={Object.assign({ minHeight: \\'120px\\' }, columnsExample)}\\n        >\\n          Column\\n          <br />\\n          xs=\\\"4\\\"\\n        </Col>\\n        <Col xs=\\\"4\\\" styles={columnsExample}>\\n          Column\\n          <br />\\n          xs=\\\"4\\\"\\n        </Col>\\n      </Row>\\n      <Row vertical=\\\"end\\\" styles={rowsExample}>\\n        <Col width=\\\"25%\\\" styles={columnsExample}>\\n          Column\\n          <br />\\n          width=\\\"25%\\\"\\n        </Col>\\n        <Col styles={Object.assign({ minHeight: \\'120px\\' }, columnsExample)}>\\n          Column\\n          <br />\\n          without sizes\\n        </Col>\\n        <Col width=\\\"160px\\\" styles={columnsExample}>\\n          Column\\n          <br />\\n          width=\\\"160px\\\"\\n        </Col>\\n      </Row>\\n    </Container>\\n  )\\n}'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      Container,\n      Row,\n      Col,\n      colors,\n      GRID,\n      RADIUS\n    }} style={{\n      padding: '0 20px'\n    }} mdxType=\"Playground\">\n    {() => {\n        // DON'T DO THIS\n        const containerExample = {\n          color: colors.get('mercury', 'dark'),\n          background: colors.get('mercury', 'crystal'),\n          borderRadius: RADIUS + GRID.UNIT,\n          marginTop: '10px',\n          marginBottom: '10px',\n          paddingTop: '15px',\n          textAlign: 'center'\n        };\n        const rowsExample = {\n          paddingTop: '5px',\n          paddingBottom: '5px',\n          borderRadius: RADIUS + GRID.UNIT,\n          overflow: 'hidden'\n        };\n        const columnsExample = {\n          color: colors.get('white'),\n          background: colors.get('mint'),\n          marginTop: '5px',\n          marginBottom: '5px',\n          paddingTop: '20px',\n          paddingBottom: '20px',\n          paddingRight: 0,\n          paddingLeft: 0,\n          borderRight: `${GRID.COLUMNS_PADDING}px solid ${colors.get('mint', 'dark')}`,\n          borderLeft: `${GRID.COLUMNS_PADDING}px solid ${colors.get('mint', 'dark')}`\n        };\n        return <Container fluid styles={containerExample} mdxType=\"Container\">\n            Start, <strong>Middle</strong> or End\n\n            <Row vertical=\"start\" styles={rowsExample} mdxType=\"Row\">\n\n                <Col xs=\"4\" styles={columnsExample} mdxType=\"Col\">\n                    Column<br />xs=\"4\"\n                </Col>\n                <Col xs=\"4\" styles={Object.assign({\n              minHeight: '120px'\n            }, columnsExample)} mdxType=\"Col\">\n                    Column<br />xs=\"4\"\n                </Col>\n                <Col xs=\"4\" styles={columnsExample} mdxType=\"Col\">\n                    Column<br />xs=\"4\"\n                </Col>\n\n            </Row>\n\n            <Row styles={rowsExample} mdxType=\"Row\">\n\n                <Col xs=\"4\" styles={columnsExample} mdxType=\"Col\">\n                    Column<br />xs=\"4\"\n                </Col>\n                <Col xs=\"4\" styles={Object.assign({\n              minHeight: '120px'\n            }, columnsExample)} mdxType=\"Col\">\n                    Column<br />xs=\"4\"\n                </Col>\n                <Col xs=\"4\" styles={columnsExample} mdxType=\"Col\">\n                    Column<br />xs=\"4\"\n                </Col>\n\n            </Row>\n\n            <Row vertical=\"end\" styles={rowsExample} mdxType=\"Row\">\n\n                <Col width=\"25%\" styles={columnsExample} mdxType=\"Col\">\n                    Column<br />width=\"25%\"\n                </Col>\n                <Col styles={Object.assign({\n              minHeight: '120px'\n            }, columnsExample)} mdxType=\"Col\">\n                    Column<br />\n                    without sizes\n                </Col>\n                <Col width=\"160px\" styles={columnsExample} mdxType=\"Col\">\n                    Column<br />width=\"160px\"\n                </Col>\n\n            </Row>\n        </Container>;\n      }}\n    </Playground>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"],"sourceRoot":""}