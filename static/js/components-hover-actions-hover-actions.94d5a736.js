(window.webpackJsonp=window.webpackJsonp||[]).push([[27],{"./src/components/HoverActions/HoverActions.mdx":function(e,n,t){"use strict";t.r(n),t.d(n,"default",(function(){return l}));var o=t("./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js"),s=t("./node_modules/react/index.js"),i=t.n(s),c=t("./node_modules/@mdx-js/react/dist/esm.js"),r=t("./node_modules/docz/dist/index.esm.js"),a=t("./src/components/index.js"),p={};function l(e){var n=e.components,t=Object(o.a)(e,["components"]);return Object(c.b)("wrapper",Object.assign({},p,t,{components:n,mdxType:"MDXLayout"}),Object(c.b)("h1",{id:"hoveractions"},"HoverActions"),Object(c.b)("h3",{id:"on-some-content-hovered-display-another-content-over-the-original"},"On some content hovered, display another content over the original."),Object(c.b)("pre",null,Object(c.b)("code",Object.assign({parentName:"pre"},{className:"language-jsx"}),"import { HoverActions, HoverActionsItem } from 'aphrodite-react';\n\n...\n\n<HoverActions\n    actions={(\n        <>\n            <HoverActionsItem>\n                Useless\n            </HoverActionsItem>\n            <HoverActionsItem>\n                Useless\n            </HoverActionsItem>\n        </>\n    )}>\n    My Hoverable Element expecting some surprising actions\n</HoverActions>\n")),Object(c.b)("h2",{id:"examples"},"Examples"),Object(c.b)(r.c,{__position:0,__code:"<Container styles={{ padding: '20px', textAlign: 'center' }}>\n  <HoverActions\n    actions={\n      <>\n        <HoverActionsItem color=\"ocean\">\n          A button for some action\n        </HoverActionsItem>\n        <HoverActionsItem>Another button</HoverActionsItem>\n      </>\n    }\n  >\n    My Hoverable Element expecting some surprising actions\n  </HoverActions>\n</Container>\n<Container styles={{ padding: '20px', textAlign: 'center' }}>\n  <HoverActions>My Hoverable Element without actions</HoverActions>\n</Container>\n\n<Container styles={{ padding: '20px', textAlign: 'center' }}>\n  <HoverActions\n    actions={\n      <>\n        <HoverActionsItem\n          as=\"a\"\n          target=\"_blank\"\n          color=\"tangerine\"\n          href=\"https://placehold.it/200?text=circle\"\n          styles={{ padding: '6px 5px 4px' }}\n        >\n          Open image in a new tab\n        </HoverActionsItem>\n      </>\n    }\n  >\n    <Img\n      circle\n      alt=\"My Awesome Circle Image\"\n      src=\"https://placehold.it/200?text=circle\"\n    />\n  </HoverActions>\n</Container>",__scope:{props:this?this.props:t,Playground:r.c,Props:r.d,HoverActions:a.t,HoverActionsItem:a.u,Img:a.w,Container:a.k},style:{padding:"20px"},mdxType:"Playground"},Object(c.b)(a.k,{styles:{padding:"20px",textAlign:"center"},mdxType:"Container"},Object(c.b)(a.t,{actions:Object(c.b)(i.a.Fragment,null,Object(c.b)(a.u,{color:"ocean",mdxType:"HoverActionsItem"},"A button for some action"),Object(c.b)(a.u,{mdxType:"HoverActionsItem"},"Another button")),mdxType:"HoverActions"},"My Hoverable Element expecting some surprising actions")),Object(c.b)(a.k,{styles:{padding:"20px",textAlign:"center"},mdxType:"Container"},Object(c.b)(a.t,{mdxType:"HoverActions"},"My Hoverable Element without actions")),Object(c.b)(a.k,{styles:{padding:"20px",textAlign:"center"},mdxType:"Container"},Object(c.b)(a.t,{actions:Object(c.b)(i.a.Fragment,null,Object(c.b)(a.u,{as:"a",target:"_blank",color:"tangerine",href:"https://placehold.it/200?text=circle",styles:{padding:"6px 5px 4px"},mdxType:"HoverActionsItem"},"Open image in a new tab")),mdxType:"HoverActions"},Object(c.b)(a.w,{circle:!0,alt:"My Awesome Circle Image",src:"https://placehold.it/200?text=circle",mdxType:"Img"})))),Object(c.b)("h2",{id:"properties"},"Properties"),Object(c.b)(r.d,{of:a.t,mdxType:"Props"}))}l&&l===Object(l)&&Object.isExtensible(l)&&Object.defineProperty(l,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"MDXContent",filename:"src/components/HoverActions/HoverActions.mdx"}}),l.isMDXComponent=!0}}]);
//# sourceMappingURL=components-hover-actions-hover-actions.f51c347d9947b731052f.js.map