(window.webpackJsonp=window.webpackJsonp||[]).push([[26],{"./src/utils/colors/colors.mdx":function(e,o,t){"use strict";t.r(o),t.d(o,"default",function(){return b});var n=t("./node_modules/docz/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread.js"),l=t("./node_modules/docz/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/extends.js"),r=t("./node_modules/docz/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js"),c=(t("./node_modules/react/index.js"),t("./node_modules/@mdx-js/react/dist/index.es.js")),s=t("./node_modules/docz/dist/index.esm.js"),a=t("./src/components/index.js"),d=t("./src/utils/index.js"),i={},p="wrapper";function b(e){var o=e.components,t=Object(r.a)(e,["components"]);return Object(c.b)(p,Object(l.a)({},i,t,{components:o,mdxType:"MDXLayout"}),Object(c.b)("h1",{id:"colors-utilities"},"Colors Utilities"),Object(c.b)("p",null,"Tools to made easy the development with our colors presets."),Object(c.b)("hr",null),Object(c.b)("h2",{id:"usage"},"Usage"),Object(c.b)("h4",{id:"the-method-colorsget-will-help-you-to-get-the-desired-color-from-aphrodite-reacts-colors-palette"},"The method ",Object(c.b)("inlineCode",{parentName:"h4"},"colors.get")," will help you to get the desired color from Aphrodite React's Colors Palette."),Object(c.b)("pre",null,Object(c.b)("code",Object(l.a)({parentName:"pre"},{}),"import { colors } from 'aphrodite-react';\n\ncolors.get('primary', 'dark', 0.1);\n")),Object(c.b)("hr",null),Object(c.b)("h2",{id:"palette-shades"},"Palette Shades"),Object(c.b)(s.c,{__position:0,__code:"() => {\n  const colorItemStyles = {\n    padding: '20px',\n    margin: '0',\n    '.aph-color': {\n      '&__value': {\n        color: colors.get('oil', 'crystal'),\n        fontSize: '12px',\n      },\n    },\n  }\n  const colorBoxColStyles = {\n    minWidth: '80px',\n    maxWidth: '80px',\n  }\n  const colorTextColStyles = {\n    minWidth: 'calc(100% - 80px)',\n    maxWidth: 'calc(100% - 80px)',\n\n    fontSize: '14px',\n    lineHeight: '20px',\n\n    color: colors.get('oil', 'dark'),\n  }\n  const colorBoxStyles = {\n    borderRadius: '5px',\n\n    width: '60px',\n    height: '60px',\n    boxShadow: `0 0 2.5px ${colors.get('oil', 'dark', 0.5)}`,\n  }\n\n  let colorsShades = []\n\n  for (const colorKey in colors.shades) {\n    const colorShades = colors.shades[colorKey]\n\n    for (const colorShadeKey in colorShades) {\n      colorsShades.push({\n        key: colorKey.concat(' ', colorShadeKey),\n        value: colorShades[colorShadeKey],\n      })\n    }\n  }\n\n  return (\n    <article>\n      <Row vertical=\"start\">\n        {colorsShades.map((color, index) => (\n          <Col xs={12} sm={6} md={6} lg={3} key={`color${index}`}>\n            <Segment\n              className=\"aph-color\"\n              role=\"button\"\n              tabIndex={`10${index}`}\n              hoverable\n              styles={colorItemStyles}\n            >\n              <Row>\n                <Col styles={colorBoxColStyles}>\n                  <Segment\n                    styles={{\n                      ...colorBoxStyles,\n                      backgroundColor: color.value,\n                    }}\n                  />\n                </Col>\n                <Col styles={colorTextColStyles}>\n                  <div className=\"aph-color__value\">{color.value}</div>\n                  {color.key}\n                </Col>\n              </Row>\n            </Segment>\n          </Col>\n        ))}\n      </Row>\n    </article>\n  )\n}",__scope:{props:this?this.props:t,Playground:s.c,Row:a.A,Col:a.g,Segment:a.B,colors:d.b},mdxType:"Playground"},function(){var e={padding:"20px",margin:"0",".aph-color":{"&__value":{color:d.b.get("oil","crystal"),fontSize:"12px"}}},o={minWidth:"80px",maxWidth:"80px"},t={minWidth:"calc(100% - 80px)",maxWidth:"calc(100% - 80px)",fontSize:"14px",lineHeight:"20px",color:d.b.get("oil","dark")},l={borderRadius:"5px",width:"60px",height:"60px",boxShadow:"0 0 2.5px ".concat(d.b.get("oil","dark",.5))},r=[];for(var s in d.b.shades){var i=d.b.shades[s];for(var p in i)r.push({key:s.concat(" ",p),value:i[p]})}return Object(c.b)("article",null,Object(c.b)(a.A,{vertical:"start",mdxType:"Row"},r.map(function(r,s){return Object(c.b)(a.g,{xs:12,sm:6,md:6,lg:3,key:"color".concat(s),mdxType:"Col"},Object(c.b)(a.B,{className:"aph-color",role:"button",tabIndex:"10".concat(s),hoverable:!0,styles:e,mdxType:"Segment"},Object(c.b)(a.A,{mdxType:"Row"},Object(c.b)(a.g,{styles:o,mdxType:"Col"},Object(c.b)(a.B,{styles:Object(n.a)({},l,{backgroundColor:r.value}),mdxType:"Segment"})),Object(c.b)(a.g,{styles:t,mdxType:"Col"},Object(c.b)("div",{className:"aph-color__value"},r.value),r.key))))})))}),Object(c.b)("hr",null),Object(c.b)("h2",{id:"example"},"Example"),Object(c.b)("pre",null,Object(c.b)("code",Object(l.a)({parentName:"pre"},{}),"import { colors } from 'aphrodite-react';\n\n...\n\nreturn (\n    <div style={{ color: colors.get('ocean', 'dark'), background: colors.get('ocean', 'crystal') }}>\n        Element customized with Color Utils from Aphrodite React.\n    </div>\n);\n")),Object(c.b)(s.c,{__position:1,__code:"<Row horizontal=\"center\">\n  <Col xs={12} sm={6}>\n    <Segment\n      padding=\"25px 20px\"\n      styles={{\n        borderRadius: '5px',\n        textAlign: 'center',\n        color: colors.get('ocean', 'dark'),\n        background: colors.get('ocean', 'crystal'),\n      }}\n    >\n      Element customized with Color Utils from Aphrodite React.\n    </Segment>\n  </Col>\n</Row>",__scope:{props:this?this.props:t,Playground:s.c,Row:a.A,Col:a.g,Segment:a.B,colors:d.b},style:{padding:"".concat(window.innerWidth<768?"20px":"80px"," 20px")},mdxType:"Playground"},Object(c.b)(a.A,{horizontal:"center",mdxType:"Row"},Object(c.b)(a.g,{xs:12,sm:6,mdxType:"Col"},Object(c.b)(a.B,{padding:"25px 20px",styles:{borderRadius:"5px",textAlign:"center",color:d.b.get("ocean","dark"),background:d.b.get("ocean","crystal")},mdxType:"Segment"},"Element customized with Color Utils from Aphrodite React.")))))}b&&b===Object(b)&&Object.isExtensible(b)&&Object.defineProperty(b,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"MDXContent",filename:"src/utils/colors/colors.mdx"}}),b.isMDXComponent=!0}}]);
//# sourceMappingURL=utils-colors-colors.6e867e69d203cfd3796b.js.map