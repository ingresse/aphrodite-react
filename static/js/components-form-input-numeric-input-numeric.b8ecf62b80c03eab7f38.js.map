{"version":3,"sources":["/Users/udi/ingresse/aphrodite-react/src/components/Form/InputNumeric/InputNumeric.mdx"],"names":["layoutProps","MDXContent","components","props","mdxType","__position","__code","__scope","this","useState","Playground","Props","InputNumeric","Container","Segment","value","setValue","xs","padding","id","label","onChange","evt","newValue","console","log","of","isMDXComponent"],"mappings":"yjBAeMA,EAAc,GAIL,SAASC,EAAT,GAGX,IAFFC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,YALS,UAKT,iBAAeH,EAAiBG,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAE5E,kBACE,GAAM,iBADR,iBAGA,kBACE,GAAM,8DADR,+DAGA,kBACE,GAAM,WADR,WAGA,YAAC,IAAD,CAAYC,WAAY,EAAGC,OAAQ,qcAA4cC,QAAS,CACtfJ,MAAOK,KAAOA,KAAKL,MAAQA,EAC3BM,oBACAC,eACAC,UACAC,iBACAC,cACAC,cACCV,QAAQ,eACV,WAAO,IAAD,EACuBK,mBAAS,IADhC,mBACIM,EADJ,KACWC,EADX,KAQH,OAAO,YAAC,IAAD,CAAWC,IAAE,EAACb,QAAQ,aACzB,YAAC,KAAD,CAASc,QAAQ,SAASd,QAAQ,WAC9B,YAAC,IAAD,CAAce,GAAG,sBAAsBC,MAAM,aAAaC,SAPlE,SAAsBC,EAAKC,GACzBC,QAAQC,IAAI,yBAA0BF,GACtCP,EAASO,IAK+ER,MAAOA,EAAOX,QAAQ,sBAKpH,kBACE,GAAM,cADR,cAGA,YAAC,IAAD,CAAOsB,GAAId,IAAcR,QAAQ,W,uMAKrCH,EAAW0B,gBAAiB","file":"static/js/components-form-input-numeric-input-numeric.f2e94c95.js","sourcesContent":["\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport { useState } from 'react';\nimport { Playground, Props } from 'docz';\nimport {\n    InputNumeric,\n    Container,\n    Segment,\n} from '../../';\n\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"input-numeric\"\n    }}>{`Input Numeric`}</h1>\n    <h3 {...{\n      \"id\": \"alternative-to-inputnumber-with-basic-behavior-validations\"\n    }}>{`Alternative to InputNumber, with basic behavior validations`}</h3>\n    <h2 {...{\n      \"id\": \"example\"\n    }}>{`Example`}</h2>\n    <Playground __position={0} __code={'() => {\\n  const [value, setValue] = useState(\\'\\')\\n  function handleChange(evt, newValue) {\\n    console.log(\\'InputNumeric new value\\', newValue)\\n    setValue(newValue)\\n  }\\n\\n  return (\\n    <Container xs>\\n      <Segment padding=\\\"10px 0\\\">\\n        <InputNumeric\\n          id=\\\"ExampleInputNumeric\\\"\\n          label=\\\"Any Number\\\"\\n          onChange={handleChange}\\n          value={value}\\n        />\\n      </Segment>\\n    </Container>\\n  )\\n}'} __scope={{\n      props: this ? this.props : props,\n      useState,\n      Playground,\n      Props,\n      InputNumeric,\n      Container,\n      Segment\n    }} mdxType=\"Playground\">\n    {() => {\n        const [value, setValue] = useState('');\n\n        function handleChange(evt, newValue) {\n          console.log('InputNumeric new value', newValue);\n          setValue(newValue);\n        }\n\n        return <Container xs mdxType=\"Container\">\n            <Segment padding=\"10px 0\" mdxType=\"Segment\">\n                <InputNumeric id=\"ExampleInputNumeric\" label=\"Any Number\" onChange={handleChange} value={value} mdxType=\"InputNumeric\" />\n            </Segment>\n        </Container>;\n      }}\n    </Playground>\n    <h2 {...{\n      \"id\": \"properties\"\n    }}>{`Properties`}</h2>\n    <Props of={InputNumeric} mdxType=\"Props\" />\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"],"sourceRoot":""}