"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _styledBase = _interopRequireDefault(require("@emotion/styled-base"));

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _constants = require("../../constants");

var _utils = require("../../utils");

var _Checkbox = _interopRequireDefault(require("./Checkbox"));

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance"); }

function _iterableToArrayLimit(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

/* Component Wrapper */
var AphInputWrapperStyled = (0, _styledBase.default)("div", {
  target: "eaa7cbg0"
})(process.env.NODE_ENV === "production" ? {
  name: "8zz7ay",
  styles: "box-sizing:border-box;position:relative;display:block;"
} : {
  name: "8zz7ay",
  styles: "box-sizing:border-box;position:relative;display:block;",
  map: "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9jb21wb25lbnRzL0Zvcm0vSW5wdXQuanN4Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQWF3QyIsImZpbGUiOiIuLi8uLi8uLi9zcmMvY29tcG9uZW50cy9Gb3JtL0lucHV0LmpzeCIsInNvdXJjZXNDb250ZW50IjpbIi8qIFBhY2thZ2VzICovXG5pbXBvcnQgUmVhY3QsIHsgdXNlRWZmZWN0LCB1c2VTdGF0ZSB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCBwcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcyc7XG5pbXBvcnQgc3R5bGVkIGZyb20gJ0BlbW90aW9uL3N0eWxlZCc7XG5cbi8qIEZyYW1ld29yayBEZWZpbml0aW9ucyAqL1xuaW1wb3J0IHsgQ09MT1JTLCBSQURJVVMsIFNJWkVTIH0gZnJvbSAnLi4vLi4vY29uc3RhbnRzJztcbmltcG9ydCB7IGNvbG9ycyB9IGZyb20gJy4uLy4uL3V0aWxzJztcblxuLyogQ29tcG9uZW50IFZhcmlhdGlvbnMgKi9cbmltcG9ydCBDaGVja2JveCBmcm9tICcuL0NoZWNrYm94JztcblxuLyogQ29tcG9uZW50IFdyYXBwZXIgKi9cbmNvbnN0IEFwaElucHV0V3JhcHBlclN0eWxlZCA9IHN0eWxlZC5kaXZgXG4gICAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgZGlzcGxheSA6IGJsb2NrO1xuYDtcblxuLyogQ29tcG9uZW50IExhYmVsICovXG5jb25zdCBBcGhJbnB1dExhYmVsU3R5bGVkID0gc3R5bGVkLmxhYmVsYFxuICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHRvcCAgICAgOiBjYWxjKDUwJSAtIDEwcHgpO1xuICAgIGxlZnQgICAgOiAxMHB4O1xuICAgIGRpc3BsYXkgOiBpbmxpbmUtYmxvY2s7XG4gICAgdG9wICAgICA6IDIuNXB4O1xuXG4gICAgY29sb3I6ICR7Y29sb3JzLmdldCgnbWVyY3VyeScpfTtcblxuICAgIGZvbnQtc2l6ZSAgOiAke1NJWkVTLlNNLkZPTlRfU0laRX07XG4gICAgbGluZS1oZWlnaHQ6ICR7U0laRVMuU00uTElORV9IRUlHSFR9O1xuXG4gICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcblxuICAgIHRyYW5zaXRpb24gOiBjb2xvciAwLjI1cyBsaW5lYXI7XG4gICAgd2lsbC1jaGFuZ2U6IGNvbG9yO1xuYDtcblxuLyogQ29tcG9uZW50IFN0eWxlcyAqL1xuY29uc3QgQXBoSW5wdXRTdHlsZWQgPSBzdHlsZWQuaW5wdXRgXG4gICAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICB3aWR0aCAgOiAxMDAlO1xuICAgIHBhZGRpbmc6IDE3LjVweCAxMHB4IDIuNXB4O1xuICAgIG1hcmdpbiA6IDA7XG4gICAgbWluLWhlaWdodDogNTBweDtcblxuICAgIGZvbnQtc2l6ZSAgOiAke1NJWkVTLk1ELkZPTlRfU0laRX07XG4gICAgbGluZS1oZWlnaHQ6ICR7U0laRVMuTUQuTElORV9IRUlHSFR9O1xuXG4gICAgY29sb3IgICAgICAgICAgIDogJHtjb2xvcnMuZ2V0KCdibGFjaycpfTtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAke2NvbG9ycy5nZXQoJ3Ntb2tlJyl9O1xuICAgIGJvcmRlci1yYWRpdXMgICA6ICR7UkFESVVTLlhTfXB4O1xuXG4gICAgYm9yZGVyIDogMDtcbiAgICBvdXRsaW5lOiAwO1xuXG4gICAgdHJhbnNpdGlvbiA6IGJhY2tncm91bmQtY29sb3IgMC4yNXMgbGluZWFyLCBwYWRkaW5nIDAuMjVzIGxpbmVhcjtcbiAgICB3aWxsLWNoYW5nZTogYmFja2dyb3VuZC1jb2xvciwgcGFkZGluZztcblxuICAgICY6OnBsYWNlaG9sZGVyIHtcbiAgICAgICAgY29sb3I6ICR7Y29sb3JzLmdldCgnbWVyY3VyeScsICdsaWdodCcpfTtcbiAgICB9XG5cbiAgICAmOmFjdGl2ZSxcbiAgICAmOmZvY3VzIHtcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogJHtjb2xvcnMuZ2V0KCdzZWNvbmRhcnknLCAnY3J5c3RhbCcpfTtcbiAgICB9XG5cbiAgICAmOmhvdmVyLFxuICAgICY6YWN0aXZlLFxuICAgICY6Zm9jdXMge1xuICAgICAgICBib3JkZXIgOiAwO1xuICAgICAgICBvdXRsaW5lOiAwO1xuXG4gICAgICAgICsgLmFwaC1mb3JtLWxhYmVsIHtcbiAgICAgICAgICAgIGNvbG9yOiAke2NvbG9ycy5nZXQoJ3NlY29uZGFyeScpfTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgICYuZGlzYWJsZWQsXG4gICAgJjpkaXNhYmxlZCB7XG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6ICR7Y29sb3JzLmdldCgnbWVyY3VyeScsICdjcnlzdGFsJyl9O1xuICAgIH1cblxuICAgICR7cHJvcHMgPT4gcHJvcHMuc3R5bGVzfTtcbmA7XG5cbi8qIENvbXBvbmVudCBJdHNlbGYgKi9cbmNvbnN0IElucHV0ID0gKHByb3BzKSA9PiB7XG4gICAgY29uc3Qge1xuICAgICAgICBpZCxcbiAgICAgICAgY2xhc3NOYW1lLFxuICAgICAgICBsYWJlbCxcbiAgICAgICAgbGFiZWxQcm9wcyxcbiAgICAgICAgcGxhY2Vob2xkZXIsXG4gICAgICAgIHZhbHVlLFxuICAgICAgICBvbkNoYW5nZSxcbiAgICAgICAgdHlwZSxcbiAgICB9ID0gcHJvcHM7XG5cbiAgICBjb25zdCBpbnB1dElkID0gYEFwaEZvcm1GaWVsZCR7aWQgfHwgTWF0aC5yYW5kb20oKX1gO1xuICAgIGNvbnN0IFtoYXNWYWx1ZSwgc2V0SGFzVmFsdWVdID0gdXNlU3RhdGUodmFsdWUgPyB0cnVlIDogZmFsc2UpO1xuXG4gICAgaWYgKHR5cGUgPT09ICdjaGVja2JveCcpIHtcbiAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICAgIDxDaGVja2JveFxuICAgICAgICAgICAgICAgIHsuLi5wcm9wc31cbiAgICAgICAgICAgICAgICBpZD17aWR9XG4gICAgICAgICAgICAvPlxuICAgICAgICApO1xuICAgIH1cblxuICAgIGZ1bmN0aW9uIGhhbmRsZUNoYW5nZShldnQpIHtcbiAgICAgICAgY29uc3QgeyB0YXJnZXQgfSA9IGV2dDtcbiAgICAgICAgY29uc3QgaW5wdXRWYWx1ZSA9IHRhcmdldC52YWx1ZTtcblxuICAgICAgICBzZXRIYXNWYWx1ZShpbnB1dFZhbHVlID8gdHJ1ZSA6IGZhbHNlKTtcblxuICAgICAgICBpZiAodHlwZW9mIG9uQ2hhbmdlID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgICAgICBvbkNoYW5nZShPYmplY3QuYXNzaWduKHt9LCBldnQpKTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIHJldHVybiAoXG4gICAgICAgIDxBcGhJbnB1dFdyYXBwZXJTdHlsZWQ+XG4gICAgICAgICAgICA8QXBoSW5wdXRTdHlsZWRcbiAgICAgICAgICAgICAgICB7Li4ucHJvcHN9XG4gICAgICAgICAgICAgICAgaWQ9e2lucHV0SWR9XG4gICAgICAgICAgICAgICAgdmFsdWU9e3ZhbHVlfVxuICAgICAgICAgICAgICAgIG9uQ2hhbmdlPXtoYW5kbGVDaGFuZ2V9XG4gICAgICAgICAgICAgICAgcGxhY2Vob2xkZXI9eyghbGFiZWwpID8gJycgOiAocGxhY2Vob2xkZXIgfHwgJycpfVxuICAgICAgICAgICAgICAgIGNsYXNzTmFtZT17YGFwaC1mb3JtLWNvbnRyb2wgJHtjbGFzc05hbWUgfHwgJyd9ICR7KHBsYWNlaG9sZGVyIHx8IGhhc1ZhbHVlKSA/ICdhcGgtZm9ybS1jb250cm9sLS1maWxsZWQnIDogJyd9YH1cbiAgICAgICAgICAgIC8+XG4gICAgICAgICAgICB7KCFsYWJlbCAmJiAhcGxhY2Vob2xkZXIpID8gKG51bGwpIDogKFxuICAgICAgICAgICAgICAgIDxBcGhJbnB1dExhYmVsU3R5bGVkXG4gICAgICAgICAgICAgICAgICAgIHsuLi5sYWJlbFByb3BzfVxuICAgICAgICAgICAgICAgICAgICBodG1sRm9yPXtpbnB1dElkfVxuICAgICAgICAgICAgICAgICAgICBjbGFzc05hbWU9XCJhcGgtZm9ybS1sYWJlbFwiPlxuICAgICAgICAgICAgICAgICAgICB7bGFiZWwgfHwgcGxhY2Vob2xkZXJ9XG4gICAgICAgICAgICAgICAgPC9BcGhJbnB1dExhYmVsU3R5bGVkPlxuICAgICAgICAgICAgKX1cbiAgICAgICAgPC9BcGhJbnB1dFdyYXBwZXJTdHlsZWQ+XG4gICAgKTtcbn07XG5cbi8qIERlZmF1bHQgUHJvcGVydGllcyAqL1xuSW5wdXQuZGVmYXVsdFByb3BzID0ge1xuICAgIGlkICAgICAgICA6ICcnLFxuICAgIGxhYmVsUHJvcHM6IHt9LFxuICAgIGxhYmVsUmlnaHQ6IGZhbHNlLFxuICAgIHJpZ2h0ICAgICA6IGZhbHNlLFxuICAgIHN0eWxlcyAgICA6IHt9LFxufVxuXG4vKiBQcm9wZXJ0aWVzIFR5cGVzICovXG5JbnB1dC5wcm9wVHlwZXMgPSB7XG4gICAgaWQgICAgICAgIDogcHJvcFR5cGVzLnN0cmluZy5pc1JlcXVpcmVkLFxuICAgIGxhYmVsUHJvcHM6IHByb3BUeXBlcy5vYmplY3QsXG4gICAgbGFiZWxSaWdodDogcHJvcFR5cGVzLmJvb2wsXG4gICAgcmlnaHQgICAgIDogcHJvcFR5cGVzLmJvb2wsXG4gICAgc3R5bGVzICAgIDogcHJvcFR5cGVzLm9iamVjdCxcbn07XG5cbi8qIEV4cG9ydGluZyAqL1xuZXhwb3J0IGRlZmF1bHQgSW5wdXQ7XG4iXX0= */"
});
/* Component Label */

var AphInputLabelStyled = (0, _styledBase.default)("label", {
  target: "eaa7cbg1"
})("box-sizing:border-box;position:absolute;top:calc(50% - 10px);left:10px;display:inline-block;top:2.5px;color:", _utils.colors.get('mercury'), ";font-size:", _constants.SIZES.SM.FONT_SIZE, ";line-height:", _constants.SIZES.SM.LINE_HEIGHT, ";text-transform:uppercase;transition:color 0.25s linear;will-change:color;" + (process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9jb21wb25lbnRzL0Zvcm0vSW5wdXQuanN4Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQW9Cd0MiLCJmaWxlIjoiLi4vLi4vLi4vc3JjL2NvbXBvbmVudHMvRm9ybS9JbnB1dC5qc3giLCJzb3VyY2VzQ29udGVudCI6WyIvKiBQYWNrYWdlcyAqL1xuaW1wb3J0IFJlYWN0LCB7IHVzZUVmZmVjdCwgdXNlU3RhdGUgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgcHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnO1xuaW1wb3J0IHN0eWxlZCBmcm9tICdAZW1vdGlvbi9zdHlsZWQnO1xuXG4vKiBGcmFtZXdvcmsgRGVmaW5pdGlvbnMgKi9cbmltcG9ydCB7IENPTE9SUywgUkFESVVTLCBTSVpFUyB9IGZyb20gJy4uLy4uL2NvbnN0YW50cyc7XG5pbXBvcnQgeyBjb2xvcnMgfSBmcm9tICcuLi8uLi91dGlscyc7XG5cbi8qIENvbXBvbmVudCBWYXJpYXRpb25zICovXG5pbXBvcnQgQ2hlY2tib3ggZnJvbSAnLi9DaGVja2JveCc7XG5cbi8qIENvbXBvbmVudCBXcmFwcGVyICovXG5jb25zdCBBcGhJbnB1dFdyYXBwZXJTdHlsZWQgPSBzdHlsZWQuZGl2YFxuICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIGRpc3BsYXkgOiBibG9jaztcbmA7XG5cbi8qIENvbXBvbmVudCBMYWJlbCAqL1xuY29uc3QgQXBoSW5wdXRMYWJlbFN0eWxlZCA9IHN0eWxlZC5sYWJlbGBcbiAgICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICB0b3AgICAgIDogY2FsYyg1MCUgLSAxMHB4KTtcbiAgICBsZWZ0ICAgIDogMTBweDtcbiAgICBkaXNwbGF5IDogaW5saW5lLWJsb2NrO1xuICAgIHRvcCAgICAgOiAyLjVweDtcblxuICAgIGNvbG9yOiAke2NvbG9ycy5nZXQoJ21lcmN1cnknKX07XG5cbiAgICBmb250LXNpemUgIDogJHtTSVpFUy5TTS5GT05UX1NJWkV9O1xuICAgIGxpbmUtaGVpZ2h0OiAke1NJWkVTLlNNLkxJTkVfSEVJR0hUfTtcblxuICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG5cbiAgICB0cmFuc2l0aW9uIDogY29sb3IgMC4yNXMgbGluZWFyO1xuICAgIHdpbGwtY2hhbmdlOiBjb2xvcjtcbmA7XG5cbi8qIENvbXBvbmVudCBTdHlsZXMgKi9cbmNvbnN0IEFwaElucHV0U3R5bGVkID0gc3R5bGVkLmlucHV0YFxuICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgd2lkdGggIDogMTAwJTtcbiAgICBwYWRkaW5nOiAxNy41cHggMTBweCAyLjVweDtcbiAgICBtYXJnaW4gOiAwO1xuICAgIG1pbi1oZWlnaHQ6IDUwcHg7XG5cbiAgICBmb250LXNpemUgIDogJHtTSVpFUy5NRC5GT05UX1NJWkV9O1xuICAgIGxpbmUtaGVpZ2h0OiAke1NJWkVTLk1ELkxJTkVfSEVJR0hUfTtcblxuICAgIGNvbG9yICAgICAgICAgICA6ICR7Y29sb3JzLmdldCgnYmxhY2snKX07XG4gICAgYmFja2dyb3VuZC1jb2xvcjogJHtjb2xvcnMuZ2V0KCdzbW9rZScpfTtcbiAgICBib3JkZXItcmFkaXVzICAgOiAke1JBRElVUy5YU31weDtcblxuICAgIGJvcmRlciA6IDA7XG4gICAgb3V0bGluZTogMDtcblxuICAgIHRyYW5zaXRpb24gOiBiYWNrZ3JvdW5kLWNvbG9yIDAuMjVzIGxpbmVhciwgcGFkZGluZyAwLjI1cyBsaW5lYXI7XG4gICAgd2lsbC1jaGFuZ2U6IGJhY2tncm91bmQtY29sb3IsIHBhZGRpbmc7XG5cbiAgICAmOjpwbGFjZWhvbGRlciB7XG4gICAgICAgIGNvbG9yOiAke2NvbG9ycy5nZXQoJ21lcmN1cnknLCAnbGlnaHQnKX07XG4gICAgfVxuXG4gICAgJjphY3RpdmUsXG4gICAgJjpmb2N1cyB7XG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6ICR7Y29sb3JzLmdldCgnc2Vjb25kYXJ5JywgJ2NyeXN0YWwnKX07XG4gICAgfVxuXG4gICAgJjpob3ZlcixcbiAgICAmOmFjdGl2ZSxcbiAgICAmOmZvY3VzIHtcbiAgICAgICAgYm9yZGVyIDogMDtcbiAgICAgICAgb3V0bGluZTogMDtcblxuICAgICAgICArIC5hcGgtZm9ybS1sYWJlbCB7XG4gICAgICAgICAgICBjb2xvcjogJHtjb2xvcnMuZ2V0KCdzZWNvbmRhcnknKX07XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICAmLmRpc2FibGVkLFxuICAgICY6ZGlzYWJsZWQge1xuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAke2NvbG9ycy5nZXQoJ21lcmN1cnknLCAnY3J5c3RhbCcpfTtcbiAgICB9XG5cbiAgICAke3Byb3BzID0+IHByb3BzLnN0eWxlc307XG5gO1xuXG4vKiBDb21wb25lbnQgSXRzZWxmICovXG5jb25zdCBJbnB1dCA9IChwcm9wcykgPT4ge1xuICAgIGNvbnN0IHtcbiAgICAgICAgaWQsXG4gICAgICAgIGNsYXNzTmFtZSxcbiAgICAgICAgbGFiZWwsXG4gICAgICAgIGxhYmVsUHJvcHMsXG4gICAgICAgIHBsYWNlaG9sZGVyLFxuICAgICAgICB2YWx1ZSxcbiAgICAgICAgb25DaGFuZ2UsXG4gICAgICAgIHR5cGUsXG4gICAgfSA9IHByb3BzO1xuXG4gICAgY29uc3QgaW5wdXRJZCA9IGBBcGhGb3JtRmllbGQke2lkIHx8IE1hdGgucmFuZG9tKCl9YDtcbiAgICBjb25zdCBbaGFzVmFsdWUsIHNldEhhc1ZhbHVlXSA9IHVzZVN0YXRlKHZhbHVlID8gdHJ1ZSA6IGZhbHNlKTtcblxuICAgIGlmICh0eXBlID09PSAnY2hlY2tib3gnKSB7XG4gICAgICAgIHJldHVybiAoXG4gICAgICAgICAgICA8Q2hlY2tib3hcbiAgICAgICAgICAgICAgICB7Li4ucHJvcHN9XG4gICAgICAgICAgICAgICAgaWQ9e2lkfVxuICAgICAgICAgICAgLz5cbiAgICAgICAgKTtcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBoYW5kbGVDaGFuZ2UoZXZ0KSB7XG4gICAgICAgIGNvbnN0IHsgdGFyZ2V0IH0gPSBldnQ7XG4gICAgICAgIGNvbnN0IGlucHV0VmFsdWUgPSB0YXJnZXQudmFsdWU7XG5cbiAgICAgICAgc2V0SGFzVmFsdWUoaW5wdXRWYWx1ZSA/IHRydWUgOiBmYWxzZSk7XG5cbiAgICAgICAgaWYgKHR5cGVvZiBvbkNoYW5nZSA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgICAgICAgb25DaGFuZ2UoT2JqZWN0LmFzc2lnbih7fSwgZXZ0KSk7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4gKFxuICAgICAgICA8QXBoSW5wdXRXcmFwcGVyU3R5bGVkPlxuICAgICAgICAgICAgPEFwaElucHV0U3R5bGVkXG4gICAgICAgICAgICAgICAgey4uLnByb3BzfVxuICAgICAgICAgICAgICAgIGlkPXtpbnB1dElkfVxuICAgICAgICAgICAgICAgIHZhbHVlPXt2YWx1ZX1cbiAgICAgICAgICAgICAgICBvbkNoYW5nZT17aGFuZGxlQ2hhbmdlfVxuICAgICAgICAgICAgICAgIHBsYWNlaG9sZGVyPXsoIWxhYmVsKSA/ICcnIDogKHBsYWNlaG9sZGVyIHx8ICcnKX1cbiAgICAgICAgICAgICAgICBjbGFzc05hbWU9e2BhcGgtZm9ybS1jb250cm9sICR7Y2xhc3NOYW1lIHx8ICcnfSAkeyhwbGFjZWhvbGRlciB8fCBoYXNWYWx1ZSkgPyAnYXBoLWZvcm0tY29udHJvbC0tZmlsbGVkJyA6ICcnfWB9XG4gICAgICAgICAgICAvPlxuICAgICAgICAgICAgeyghbGFiZWwgJiYgIXBsYWNlaG9sZGVyKSA/IChudWxsKSA6IChcbiAgICAgICAgICAgICAgICA8QXBoSW5wdXRMYWJlbFN0eWxlZFxuICAgICAgICAgICAgICAgICAgICB7Li4ubGFiZWxQcm9wc31cbiAgICAgICAgICAgICAgICAgICAgaHRtbEZvcj17aW5wdXRJZH1cbiAgICAgICAgICAgICAgICAgICAgY2xhc3NOYW1lPVwiYXBoLWZvcm0tbGFiZWxcIj5cbiAgICAgICAgICAgICAgICAgICAge2xhYmVsIHx8IHBsYWNlaG9sZGVyfVxuICAgICAgICAgICAgICAgIDwvQXBoSW5wdXRMYWJlbFN0eWxlZD5cbiAgICAgICAgICAgICl9XG4gICAgICAgIDwvQXBoSW5wdXRXcmFwcGVyU3R5bGVkPlxuICAgICk7XG59O1xuXG4vKiBEZWZhdWx0IFByb3BlcnRpZXMgKi9cbklucHV0LmRlZmF1bHRQcm9wcyA9IHtcbiAgICBpZCAgICAgICAgOiAnJyxcbiAgICBsYWJlbFByb3BzOiB7fSxcbiAgICBsYWJlbFJpZ2h0OiBmYWxzZSxcbiAgICByaWdodCAgICAgOiBmYWxzZSxcbiAgICBzdHlsZXMgICAgOiB7fSxcbn1cblxuLyogUHJvcGVydGllcyBUeXBlcyAqL1xuSW5wdXQucHJvcFR5cGVzID0ge1xuICAgIGlkICAgICAgICA6IHByb3BUeXBlcy5zdHJpbmcuaXNSZXF1aXJlZCxcbiAgICBsYWJlbFByb3BzOiBwcm9wVHlwZXMub2JqZWN0LFxuICAgIGxhYmVsUmlnaHQ6IHByb3BUeXBlcy5ib29sLFxuICAgIHJpZ2h0ICAgICA6IHByb3BUeXBlcy5ib29sLFxuICAgIHN0eWxlcyAgICA6IHByb3BUeXBlcy5vYmplY3QsXG59O1xuXG4vKiBFeHBvcnRpbmcgKi9cbmV4cG9ydCBkZWZhdWx0IElucHV0O1xuIl19 */"));
/* Component Styles */

var AphInputStyled = (0, _styledBase.default)("input", {
  target: "eaa7cbg2"
})("box-sizing:border-box;display:block;width:100%;padding:17.5px 10px 2.5px;margin:0;min-height:50px;font-size:", _constants.SIZES.MD.FONT_SIZE, ";line-height:", _constants.SIZES.MD.LINE_HEIGHT, ";color:", _utils.colors.get('black'), ";background-color:", _utils.colors.get('smoke'), ";border-radius:", _constants.RADIUS.XS, "px;border:0;outline:0;transition:background-color 0.25s linear,padding 0.25s linear;will-change:background-color,padding;&::placeholder{color:", _utils.colors.get('mercury', 'light'), ";}&:active,&:focus{background-color:", _utils.colors.get('secondary', 'crystal'), ";}&:hover,&:active,&:focus{border:0;outline:0;+ .aph-form-label{color:", _utils.colors.get('secondary'), ";}}&.disabled,&:disabled{background-color:", _utils.colors.get('mercury', 'crystal'), ";}", function (props) {
  return props.styles;
}, ";" + (process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9jb21wb25lbnRzL0Zvcm0vSW5wdXQuanN4Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQXdDbUMiLCJmaWxlIjoiLi4vLi4vLi4vc3JjL2NvbXBvbmVudHMvRm9ybS9JbnB1dC5qc3giLCJzb3VyY2VzQ29udGVudCI6WyIvKiBQYWNrYWdlcyAqL1xuaW1wb3J0IFJlYWN0LCB7IHVzZUVmZmVjdCwgdXNlU3RhdGUgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgcHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnO1xuaW1wb3J0IHN0eWxlZCBmcm9tICdAZW1vdGlvbi9zdHlsZWQnO1xuXG4vKiBGcmFtZXdvcmsgRGVmaW5pdGlvbnMgKi9cbmltcG9ydCB7IENPTE9SUywgUkFESVVTLCBTSVpFUyB9IGZyb20gJy4uLy4uL2NvbnN0YW50cyc7XG5pbXBvcnQgeyBjb2xvcnMgfSBmcm9tICcuLi8uLi91dGlscyc7XG5cbi8qIENvbXBvbmVudCBWYXJpYXRpb25zICovXG5pbXBvcnQgQ2hlY2tib3ggZnJvbSAnLi9DaGVja2JveCc7XG5cbi8qIENvbXBvbmVudCBXcmFwcGVyICovXG5jb25zdCBBcGhJbnB1dFdyYXBwZXJTdHlsZWQgPSBzdHlsZWQuZGl2YFxuICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIGRpc3BsYXkgOiBibG9jaztcbmA7XG5cbi8qIENvbXBvbmVudCBMYWJlbCAqL1xuY29uc3QgQXBoSW5wdXRMYWJlbFN0eWxlZCA9IHN0eWxlZC5sYWJlbGBcbiAgICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICB0b3AgICAgIDogY2FsYyg1MCUgLSAxMHB4KTtcbiAgICBsZWZ0ICAgIDogMTBweDtcbiAgICBkaXNwbGF5IDogaW5saW5lLWJsb2NrO1xuICAgIHRvcCAgICAgOiAyLjVweDtcblxuICAgIGNvbG9yOiAke2NvbG9ycy5nZXQoJ21lcmN1cnknKX07XG5cbiAgICBmb250LXNpemUgIDogJHtTSVpFUy5TTS5GT05UX1NJWkV9O1xuICAgIGxpbmUtaGVpZ2h0OiAke1NJWkVTLlNNLkxJTkVfSEVJR0hUfTtcblxuICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG5cbiAgICB0cmFuc2l0aW9uIDogY29sb3IgMC4yNXMgbGluZWFyO1xuICAgIHdpbGwtY2hhbmdlOiBjb2xvcjtcbmA7XG5cbi8qIENvbXBvbmVudCBTdHlsZXMgKi9cbmNvbnN0IEFwaElucHV0U3R5bGVkID0gc3R5bGVkLmlucHV0YFxuICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgd2lkdGggIDogMTAwJTtcbiAgICBwYWRkaW5nOiAxNy41cHggMTBweCAyLjVweDtcbiAgICBtYXJnaW4gOiAwO1xuICAgIG1pbi1oZWlnaHQ6IDUwcHg7XG5cbiAgICBmb250LXNpemUgIDogJHtTSVpFUy5NRC5GT05UX1NJWkV9O1xuICAgIGxpbmUtaGVpZ2h0OiAke1NJWkVTLk1ELkxJTkVfSEVJR0hUfTtcblxuICAgIGNvbG9yICAgICAgICAgICA6ICR7Y29sb3JzLmdldCgnYmxhY2snKX07XG4gICAgYmFja2dyb3VuZC1jb2xvcjogJHtjb2xvcnMuZ2V0KCdzbW9rZScpfTtcbiAgICBib3JkZXItcmFkaXVzICAgOiAke1JBRElVUy5YU31weDtcblxuICAgIGJvcmRlciA6IDA7XG4gICAgb3V0bGluZTogMDtcblxuICAgIHRyYW5zaXRpb24gOiBiYWNrZ3JvdW5kLWNvbG9yIDAuMjVzIGxpbmVhciwgcGFkZGluZyAwLjI1cyBsaW5lYXI7XG4gICAgd2lsbC1jaGFuZ2U6IGJhY2tncm91bmQtY29sb3IsIHBhZGRpbmc7XG5cbiAgICAmOjpwbGFjZWhvbGRlciB7XG4gICAgICAgIGNvbG9yOiAke2NvbG9ycy5nZXQoJ21lcmN1cnknLCAnbGlnaHQnKX07XG4gICAgfVxuXG4gICAgJjphY3RpdmUsXG4gICAgJjpmb2N1cyB7XG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6ICR7Y29sb3JzLmdldCgnc2Vjb25kYXJ5JywgJ2NyeXN0YWwnKX07XG4gICAgfVxuXG4gICAgJjpob3ZlcixcbiAgICAmOmFjdGl2ZSxcbiAgICAmOmZvY3VzIHtcbiAgICAgICAgYm9yZGVyIDogMDtcbiAgICAgICAgb3V0bGluZTogMDtcblxuICAgICAgICArIC5hcGgtZm9ybS1sYWJlbCB7XG4gICAgICAgICAgICBjb2xvcjogJHtjb2xvcnMuZ2V0KCdzZWNvbmRhcnknKX07XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICAmLmRpc2FibGVkLFxuICAgICY6ZGlzYWJsZWQge1xuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAke2NvbG9ycy5nZXQoJ21lcmN1cnknLCAnY3J5c3RhbCcpfTtcbiAgICB9XG5cbiAgICAke3Byb3BzID0+IHByb3BzLnN0eWxlc307XG5gO1xuXG4vKiBDb21wb25lbnQgSXRzZWxmICovXG5jb25zdCBJbnB1dCA9IChwcm9wcykgPT4ge1xuICAgIGNvbnN0IHtcbiAgICAgICAgaWQsXG4gICAgICAgIGNsYXNzTmFtZSxcbiAgICAgICAgbGFiZWwsXG4gICAgICAgIGxhYmVsUHJvcHMsXG4gICAgICAgIHBsYWNlaG9sZGVyLFxuICAgICAgICB2YWx1ZSxcbiAgICAgICAgb25DaGFuZ2UsXG4gICAgICAgIHR5cGUsXG4gICAgfSA9IHByb3BzO1xuXG4gICAgY29uc3QgaW5wdXRJZCA9IGBBcGhGb3JtRmllbGQke2lkIHx8IE1hdGgucmFuZG9tKCl9YDtcbiAgICBjb25zdCBbaGFzVmFsdWUsIHNldEhhc1ZhbHVlXSA9IHVzZVN0YXRlKHZhbHVlID8gdHJ1ZSA6IGZhbHNlKTtcblxuICAgIGlmICh0eXBlID09PSAnY2hlY2tib3gnKSB7XG4gICAgICAgIHJldHVybiAoXG4gICAgICAgICAgICA8Q2hlY2tib3hcbiAgICAgICAgICAgICAgICB7Li4ucHJvcHN9XG4gICAgICAgICAgICAgICAgaWQ9e2lkfVxuICAgICAgICAgICAgLz5cbiAgICAgICAgKTtcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBoYW5kbGVDaGFuZ2UoZXZ0KSB7XG4gICAgICAgIGNvbnN0IHsgdGFyZ2V0IH0gPSBldnQ7XG4gICAgICAgIGNvbnN0IGlucHV0VmFsdWUgPSB0YXJnZXQudmFsdWU7XG5cbiAgICAgICAgc2V0SGFzVmFsdWUoaW5wdXRWYWx1ZSA/IHRydWUgOiBmYWxzZSk7XG5cbiAgICAgICAgaWYgKHR5cGVvZiBvbkNoYW5nZSA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgICAgICAgb25DaGFuZ2UoT2JqZWN0LmFzc2lnbih7fSwgZXZ0KSk7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4gKFxuICAgICAgICA8QXBoSW5wdXRXcmFwcGVyU3R5bGVkPlxuICAgICAgICAgICAgPEFwaElucHV0U3R5bGVkXG4gICAgICAgICAgICAgICAgey4uLnByb3BzfVxuICAgICAgICAgICAgICAgIGlkPXtpbnB1dElkfVxuICAgICAgICAgICAgICAgIHZhbHVlPXt2YWx1ZX1cbiAgICAgICAgICAgICAgICBvbkNoYW5nZT17aGFuZGxlQ2hhbmdlfVxuICAgICAgICAgICAgICAgIHBsYWNlaG9sZGVyPXsoIWxhYmVsKSA/ICcnIDogKHBsYWNlaG9sZGVyIHx8ICcnKX1cbiAgICAgICAgICAgICAgICBjbGFzc05hbWU9e2BhcGgtZm9ybS1jb250cm9sICR7Y2xhc3NOYW1lIHx8ICcnfSAkeyhwbGFjZWhvbGRlciB8fCBoYXNWYWx1ZSkgPyAnYXBoLWZvcm0tY29udHJvbC0tZmlsbGVkJyA6ICcnfWB9XG4gICAgICAgICAgICAvPlxuICAgICAgICAgICAgeyghbGFiZWwgJiYgIXBsYWNlaG9sZGVyKSA/IChudWxsKSA6IChcbiAgICAgICAgICAgICAgICA8QXBoSW5wdXRMYWJlbFN0eWxlZFxuICAgICAgICAgICAgICAgICAgICB7Li4ubGFiZWxQcm9wc31cbiAgICAgICAgICAgICAgICAgICAgaHRtbEZvcj17aW5wdXRJZH1cbiAgICAgICAgICAgICAgICAgICAgY2xhc3NOYW1lPVwiYXBoLWZvcm0tbGFiZWxcIj5cbiAgICAgICAgICAgICAgICAgICAge2xhYmVsIHx8IHBsYWNlaG9sZGVyfVxuICAgICAgICAgICAgICAgIDwvQXBoSW5wdXRMYWJlbFN0eWxlZD5cbiAgICAgICAgICAgICl9XG4gICAgICAgIDwvQXBoSW5wdXRXcmFwcGVyU3R5bGVkPlxuICAgICk7XG59O1xuXG4vKiBEZWZhdWx0IFByb3BlcnRpZXMgKi9cbklucHV0LmRlZmF1bHRQcm9wcyA9IHtcbiAgICBpZCAgICAgICAgOiAnJyxcbiAgICBsYWJlbFByb3BzOiB7fSxcbiAgICBsYWJlbFJpZ2h0OiBmYWxzZSxcbiAgICByaWdodCAgICAgOiBmYWxzZSxcbiAgICBzdHlsZXMgICAgOiB7fSxcbn1cblxuLyogUHJvcGVydGllcyBUeXBlcyAqL1xuSW5wdXQucHJvcFR5cGVzID0ge1xuICAgIGlkICAgICAgICA6IHByb3BUeXBlcy5zdHJpbmcuaXNSZXF1aXJlZCxcbiAgICBsYWJlbFByb3BzOiBwcm9wVHlwZXMub2JqZWN0LFxuICAgIGxhYmVsUmlnaHQ6IHByb3BUeXBlcy5ib29sLFxuICAgIHJpZ2h0ICAgICA6IHByb3BUeXBlcy5ib29sLFxuICAgIHN0eWxlcyAgICA6IHByb3BUeXBlcy5vYmplY3QsXG59O1xuXG4vKiBFeHBvcnRpbmcgKi9cbmV4cG9ydCBkZWZhdWx0IElucHV0O1xuIl19 */"));
/* Component Itself */

var Input = function Input(props) {
  var id = props.id,
      className = props.className,
      label = props.label,
      labelProps = props.labelProps,
      placeholder = props.placeholder,
      value = props.value,
      onChange = props.onChange,
      type = props.type;
  var inputId = "AphFormField".concat(id || Math.random());

  var _useState = (0, _react.useState)(value ? true : false),
      _useState2 = _slicedToArray(_useState, 2),
      hasValue = _useState2[0],
      setHasValue = _useState2[1];

  if (type === 'checkbox') {
    return _react.default.createElement(_Checkbox.default, _extends({}, props, {
      id: id
    }));
  }

  function handleChange(evt) {
    var target = evt.target;
    var inputValue = target.value;
    setHasValue(inputValue ? true : false);

    if (typeof onChange === 'function') {
      onChange(Object.assign({}, evt));
    }
  }

  return _react.default.createElement(AphInputWrapperStyled, null, _react.default.createElement(AphInputStyled, _extends({}, props, {
    id: inputId,
    value: value,
    onChange: handleChange,
    placeholder: !label ? '' : placeholder || '',
    className: "aph-form-control ".concat(className || '', " ").concat(placeholder || hasValue ? 'aph-form-control--filled' : '')
  })), !label && !placeholder ? null : _react.default.createElement(AphInputLabelStyled, _extends({}, labelProps, {
    htmlFor: inputId,
    className: "aph-form-label"
  }), label || placeholder));
};
/* Default Properties */


Input.defaultProps = {
  id: '',
  labelProps: {},
  labelRight: false,
  right: false,
  styles: {}
  /* Properties Types */

};
Input.propTypes = {
  id: _propTypes.default.string.isRequired,
  labelProps: _propTypes.default.object,
  labelRight: _propTypes.default.bool,
  right: _propTypes.default.bool,
  styles: _propTypes.default.object
};
/* Exporting */

var _default = Input;
exports.default = _default;