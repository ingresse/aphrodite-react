{"version":3,"sources":["webpack:///./src/components/Toast/Toast.mdx"],"names":["MDXContent","props","_this","_classCallCheck","this","_possibleConstructorReturn","_getPrototypeOf","call","layout","React","Component","_this$props","components","_objectWithoutProperties","react__WEBPACK_IMPORTED_MODULE_0___default","a","createElement","_mdx_js_tag__WEBPACK_IMPORTED_MODULE_1__","name","id","parentName","href","className","docz__WEBPACK_IMPORTED_MODULE_2__","__codesandbox","__position","__code","__scope","Button","ToastsContainer","toast","SCREEN_SIZES","___WEBPACK_IMPORTED_MODULE_3__","hideProgressBar","autoClose","styles","top","right","color","onClick","inverse","success","info","warning","error"],"mappings":"whDAOqBA,cACnB,SAAAA,EAAYC,GAAO,IAAAC,EAAA,mGAAAC,CAAAC,KAAAJ,IACjBE,EAAAG,EAAAD,KAAAE,EAAAN,GAAAO,KAAAH,KAAMH,KACDO,OAAS,KAFGN,yPADmBO,IAAMC,kDAKnC,IAAAC,EAC0BP,KAAKH,MAA9BW,EADDD,EACCC,WAAeX,EADhBY,EAAAF,EAAA,gBAGP,OAAOG,EAAAC,EAAAC,cAACC,EAAA,OAAD,CACEC,KAAK,UAELN,WAAYA,GACzBE,EAAAC,EAAAC,cAACC,EAAA,OAAD,CAAQC,KAAK,KAAKN,WAAYA,EAAYX,MAAO,CAACkB,GAAK,UAAvD,SACAL,EAAAC,EAAAC,cAACC,EAAA,OAAD,CAAQC,KAAK,KAAKN,WAAYA,EAAYX,MAAO,CAACkB,GAAK,yFAAvD,6CAA8LL,EAAAC,EAAAC,cAACC,EAAA,OAAD,CAAQC,KAAK,IAAIN,WAAYA,EAAYQ,WAAW,KAAKnB,MAAO,CAACoB,KAAO,8CAA8CP,EAAAC,EAAAC,cAACC,EAAA,OAAD,CAAQC,KAAK,SAASN,WAAYA,EAAYQ,WAAW,KAAzD,mBAApT,mCACAN,EAAAC,EAAAC,cAACC,EAAA,OAAD,CAAQC,KAAK,KAAKN,WAAYA,EAAYX,MAAO,CAACkB,GAAK,2DAAvD,6BAAgJL,EAAAC,EAAAC,cAACC,EAAA,OAAD,CAAQC,KAAK,IAAIN,WAAYA,EAAYQ,WAAW,KAAKnB,MAAO,CAACoB,KAAO,8CAAxE,iBAAhJ,sBACAP,EAAAC,EAAAC,cAACC,EAAA,OAAD,CAAQC,KAAK,MAAMN,WAAYA,GAAYE,EAAAC,EAAAC,cAACC,EAAA,OAAD,CAAQC,KAAK,OAAON,WAAYA,EAAYQ,WAAW,MAAMnB,MAAO,CAACqB,UAAY,iBAAjF,wEAE3CR,EAAAC,EAAAC,cAACC,EAAA,OAAD,CAAQC,KAAK,KAAKN,WAAYA,EAAYX,MAAO,CAACkB,GAAK,YAAvD,WACAL,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAYC,cAAa,YAAeC,WAAY,EAAGC,OAAQ,46CAA67CC,QAAS,CAAC1B,MAAOG,KAAOA,KAAKH,MAAQA,EAAM2B,WAAOC,oBAAgBC,UAAMC,mBAC/jD,WAwBD,OACIjB,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAAiBC,iBAAiB,EAAMC,WAAW,EAAOC,OAAQ,CAACC,IAAK,OAAQC,MAAO,UAEvFvB,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAAQM,MAAM,OAAOC,QA3BzB,WACIT,YAAM,gCA0BN,WACAhB,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAAQM,MAAM,QAAQC,QAzB9B,WACIT,IAAMU,QAAQ,gCAwBV,WAEA1B,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WAEAF,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAAQM,MAAM,UAAUC,QA1BhC,WACIT,IAAMW,QAAQ,6FAyBV,WACA3B,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAAQM,MAAM,UAAUC,QAvBhC,WACIT,IAAMY,KAAK,sDAsBP,QACA5B,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAAQM,MAAM,UAAUC,QApBhC,WACIT,IAAMa,QAAQ,oDAmBV,WACA7B,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAAQM,MAAM,QAAQC,QAjB9B,WACIT,IAAMc,MAAM,qGAgBR","file":"static/js/components-toast-toast.fb827538.js","sourcesContent":["\n  import React from 'react'\n  import { MDXTag } from '@mdx-js/tag'\n  import { Playground, PropsTable } from 'docz';\nimport { Button, ToastsContainer, toast } from '../';\nimport { SCREEN_SIZES } from '../../constants';\n\nexport default class MDXContent extends React.Component {\n  constructor(props) {\n    super(props)\n    this.layout = null\n  }\n  render() {\n    const { components, ...props } = this.props\n\n    return <MDXTag\n             name=\"wrapper\"\n             \n             components={components}>\n<MDXTag name=\"h1\" components={components} props={{\"id\":\"toast\"}}>{`Toast`}</MDXTag>\n<MDXTag name=\"h4\" components={components} props={{\"id\":\"just-an-implementation-of-awesome-library-react-toastify-with-aphrodites-definitions\"}}>{`Just an implementation of awesome library `}<MDXTag name=\"a\" components={components} parentName=\"h4\" props={{\"href\":\"https://github.com/fkhadra/react-toastify\"}}><MDXTag name=\"strong\" components={components} parentName=\"a\">{`React Toastify`}</MDXTag></MDXTag>{`, with Aphrodite's definitions.`}</MDXTag>\n<MDXTag name=\"h4\" components={components} props={{\"id\":\"so-its-just-consult-the-documentation-for-more-options\"}}>{`So, it's just consult the `}<MDXTag name=\"a\" components={components} parentName=\"h4\" props={{\"href\":\"https://github.com/fkhadra/react-toastify\"}}>{`documentation`}</MDXTag>{` for more options.`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-jsx\"}}>{`import { Button, ToastsContainer, toast } from 'aphrodite-react';\n`}</MDXTag></MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"example\"}}>{`Example`}</MDXTag>\n<Playground __codesandbox={`undefined`} __position={0} __code={'() => {\\n  function toastDefault() {\\n    toast(\\'Hello from Aphrodite React\\')\\n  }\\n  function toastInverse() {\\n    toast.inverse(\\'Hello from Aphrodite React\\')\\n  }\\n\\n  function toastSuccess() {\\n    toast.success(\\n      \\'We are using React Toastify, an awesome library, customized with our styles definitions\\',\\n    )\\n  }\\n\\n  function toastInfo() {\\n    toast.info(\\'You can use React Toastify directly, if you want\\')\\n  }\\n\\n  function toastWarning() {\\n    toast.warning(\\\"But, isn\\'t have our style, if you use directly\\\")\\n  }\\n\\n  function toastError() {\\n    toast.error(\\n      \\\"And maybe doesn\\'t make sense use our library, if you want to use React Toastify directly - haha\\\",\\n    )\\n  }\\n\\n  return (\\n    <div>\\n      <ToastsContainer\\n        hideProgressBar={true}\\n        autoClose={false}\\n        styles={{ top: \\'45px\\', right: \\'45px\\' }}\\n      />\\n\\n      <Button color=\\\"grey\\\" onClick={toastDefault}>\\n        Default\\n      </Button>\\n      <Button color=\\\"black\\\" onClick={toastInverse}>\\n        Inverse\\n      </Button>\\n\\n      <br />\\n      <br />\\n\\n      <Button color=\\\"success\\\" onClick={toastSuccess}>\\n        Success\\n      </Button>\\n      <Button color=\\\"primary\\\" onClick={toastInfo}>\\n        Info\\n      </Button>\\n      <Button color=\\\"warning\\\" onClick={toastWarning}>\\n        Warning\\n      </Button>\\n      <Button color=\\\"error\\\" onClick={toastError}>\\n        Error\\n      </Button>\\n    </div>\\n  )\\n}'} __scope={{props: this ? this.props : props,Button,ToastsContainer,toast,SCREEN_SIZES}}>\n    {() => {\n        function toastDefault() {\n            toast(\"Hello from Aphrodite React\");\n        }\n    function toastInverse() {\n        toast.inverse(\"Hello from Aphrodite React\");\n    }\n\n    function toastSuccess() {\n        toast.success(\"We are using React Toastify, an awesome library, customized with our styles definitions\");\n    }\n\n    function toastInfo() {\n        toast.info(\"You can use React Toastify directly, if you want\");\n    }\n\n    function toastWarning() {\n        toast.warning(\"But, isn't have our style, if you use directly\");\n    }\n\n    function toastError() {\n        toast.error(\"And maybe doesn't make sense use our library, if you want to use React Toastify directly - haha\");\n    }\n\n    return (\n        <div>\n            <ToastsContainer hideProgressBar={true} autoClose={false} styles={{top: '45px', right: '45px'}} />\n\n            <Button color=\"grey\" onClick={toastDefault}>Default</Button>\n            <Button color=\"black\" onClick={toastInverse}>Inverse</Button>\n\n            <br />\n            <br />\n\n            <Button color=\"success\" onClick={toastSuccess}>Success</Button>\n            <Button color=\"primary\" onClick={toastInfo}>Info</Button>\n            <Button color=\"warning\" onClick={toastWarning}>Warning</Button>\n            <Button color=\"error\" onClick={toastError}>Error</Button>\n        </div>\n    );\n}}\n</Playground>\n           </MDXTag>\n  }\n}\n  "],"sourceRoot":""}